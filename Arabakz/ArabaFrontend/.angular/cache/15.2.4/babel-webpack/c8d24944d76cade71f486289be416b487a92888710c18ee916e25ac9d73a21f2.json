{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deepCopy = void 0;\nconst copySymbol = Symbol();\nfunction deepCopy(value) {\n  if (Array.isArray(value)) {\n    return value.map(o => deepCopy(o));\n  } else if (value && typeof value === 'object') {\n    const valueCasted = value;\n    if (valueCasted[copySymbol]) {\n      // This is a circular dependency. Just return the cloned value.\n      return valueCasted[copySymbol];\n    }\n    if (valueCasted['toJSON']) {\n      return JSON.parse(valueCasted['toJSON']());\n    }\n    const copy = Object.create(Object.getPrototypeOf(valueCasted));\n    valueCasted[copySymbol] = copy;\n    for (const key of Object.getOwnPropertyNames(valueCasted)) {\n      copy[key] = deepCopy(valueCasted[key]);\n    }\n    delete valueCasted[copySymbol];\n    return copy;\n  } else {\n    return value;\n  }\n}\nexports.deepCopy = deepCopy;","map":{"version":3,"names":["Object","defineProperty","exports","value","deepCopy","copySymbol","Symbol","Array","isArray","map","o","valueCasted","JSON","parse","copy","create","getPrototypeOf","key","getOwnPropertyNames"],"sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/@angular/cli/node_modules/@angular-devkit/core/src/utils/object.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deepCopy = void 0;\nconst copySymbol = Symbol();\nfunction deepCopy(value) {\n    if (Array.isArray(value)) {\n        return value.map((o) => deepCopy(o));\n    }\n    else if (value && typeof value === 'object') {\n        const valueCasted = value;\n        if (valueCasted[copySymbol]) {\n            // This is a circular dependency. Just return the cloned value.\n            return valueCasted[copySymbol];\n        }\n        if (valueCasted['toJSON']) {\n            return JSON.parse(valueCasted['toJSON']());\n        }\n        const copy = Object.create(Object.getPrototypeOf(valueCasted));\n        valueCasted[copySymbol] = copy;\n        for (const key of Object.getOwnPropertyNames(valueCasted)) {\n            copy[key] = deepCopy(valueCasted[key]);\n        }\n        delete valueCasted[copySymbol];\n        return copy;\n    }\n    else {\n        return value;\n    }\n}\nexports.deepCopy = deepCopy;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,QAAQ,GAAG,KAAK,CAAC;AACzB,MAAMC,UAAU,GAAGC,MAAM,EAAE;AAC3B,SAASF,QAAQ,CAACD,KAAK,EAAE;EACrB,IAAII,KAAK,CAACC,OAAO,CAACL,KAAK,CAAC,EAAE;IACtB,OAAOA,KAAK,CAACM,GAAG,CAAEC,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAAC,CAAC;EACxC,CAAC,MACI,IAAIP,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IACzC,MAAMQ,WAAW,GAAGR,KAAK;IACzB,IAAIQ,WAAW,CAACN,UAAU,CAAC,EAAE;MACzB;MACA,OAAOM,WAAW,CAACN,UAAU,CAAC;IAClC;IACA,IAAIM,WAAW,CAAC,QAAQ,CAAC,EAAE;MACvB,OAAOC,IAAI,CAACC,KAAK,CAACF,WAAW,CAAC,QAAQ,CAAC,EAAE,CAAC;IAC9C;IACA,MAAMG,IAAI,GAAGd,MAAM,CAACe,MAAM,CAACf,MAAM,CAACgB,cAAc,CAACL,WAAW,CAAC,CAAC;IAC9DA,WAAW,CAACN,UAAU,CAAC,GAAGS,IAAI;IAC9B,KAAK,MAAMG,GAAG,IAAIjB,MAAM,CAACkB,mBAAmB,CAACP,WAAW,CAAC,EAAE;MACvDG,IAAI,CAACG,GAAG,CAAC,GAAGb,QAAQ,CAACO,WAAW,CAACM,GAAG,CAAC,CAAC;IAC1C;IACA,OAAON,WAAW,CAACN,UAAU,CAAC;IAC9B,OAAOS,IAAI;EACf,CAAC,MACI;IACD,OAAOX,KAAK;EAChB;AACJ;AACAD,OAAO,CAACE,QAAQ,GAAGA,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}