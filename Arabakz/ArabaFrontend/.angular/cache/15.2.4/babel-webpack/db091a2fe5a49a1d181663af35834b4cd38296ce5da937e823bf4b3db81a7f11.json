{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseJson = exports.readAndParseJson = exports.JSONFile = void 0;\nconst fs_1 = require(\"fs\");\nconst jsonc_parser_1 = require(\"jsonc-parser\");\n/** @internal */\nclass JSONFile {\n  constructor(path) {\n    this.path = path;\n    const buffer = (0, fs_1.readFileSync)(this.path);\n    if (buffer) {\n      this.content = buffer.toString();\n    } else {\n      throw new Error(`Could not read '${path}'.`);\n    }\n  }\n  get JsonAst() {\n    if (this._jsonAst) {\n      return this._jsonAst;\n    }\n    const errors = [];\n    this._jsonAst = (0, jsonc_parser_1.parseTree)(this.content, errors, {\n      allowTrailingComma: true\n    });\n    if (errors.length) {\n      formatError(this.path, errors);\n    }\n    return this._jsonAst;\n  }\n  get(jsonPath) {\n    const jsonAstNode = this.JsonAst;\n    if (!jsonAstNode) {\n      return undefined;\n    }\n    if (jsonPath.length === 0) {\n      return (0, jsonc_parser_1.getNodeValue)(jsonAstNode);\n    }\n    const node = (0, jsonc_parser_1.findNodeAtLocation)(jsonAstNode, jsonPath);\n    return node === undefined ? undefined : (0, jsonc_parser_1.getNodeValue)(node);\n  }\n  modify(jsonPath, value, insertInOrder) {\n    if (value === undefined && this.get(jsonPath) === undefined) {\n      // Cannot remove a value which doesn't exist.\n      return false;\n    }\n    let getInsertionIndex;\n    if (insertInOrder === undefined) {\n      const property = jsonPath.slice(-1)[0];\n      getInsertionIndex = properties => [...properties, property].sort().findIndex(p => p === property);\n    } else if (insertInOrder !== false) {\n      getInsertionIndex = insertInOrder;\n    }\n    const edits = (0, jsonc_parser_1.modify)(this.content, jsonPath, value, {\n      getInsertionIndex,\n      // TODO: use indentation from original file.\n      formattingOptions: {\n        insertSpaces: true,\n        tabSize: 2\n      }\n    });\n    if (edits.length === 0) {\n      return false;\n    }\n    this.content = (0, jsonc_parser_1.applyEdits)(this.content, edits);\n    this._jsonAst = undefined;\n    return true;\n  }\n  save() {\n    (0, fs_1.writeFileSync)(this.path, this.content);\n  }\n}\nexports.JSONFile = JSONFile;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction readAndParseJson(path) {\n  const errors = [];\n  const content = (0, jsonc_parser_1.parse)((0, fs_1.readFileSync)(path, 'utf-8'), errors, {\n    allowTrailingComma: true\n  });\n  if (errors.length) {\n    formatError(path, errors);\n  }\n  return content;\n}\nexports.readAndParseJson = readAndParseJson;\nfunction formatError(path, errors) {\n  const {\n    error,\n    offset\n  } = errors[0];\n  throw new Error(`Failed to parse \"${path}\" as JSON AST Object. ${(0, jsonc_parser_1.printParseErrorCode)(error)} at location: ${offset}.`);\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction parseJson(content) {\n  return (0, jsonc_parser_1.parse)(content, undefined, {\n    allowTrailingComma: true\n  });\n}\nexports.parseJson = parseJson;","map":{"version":3,"names":["Object","defineProperty","exports","value","parseJson","readAndParseJson","JSONFile","fs_1","require","jsonc_parser_1","constructor","path","buffer","readFileSync","content","toString","Error","JsonAst","_jsonAst","errors","parseTree","allowTrailingComma","length","formatError","get","jsonPath","jsonAstNode","undefined","getNodeValue","node","findNodeAtLocation","modify","insertInOrder","getInsertionIndex","property","slice","properties","sort","findIndex","p","edits","formattingOptions","insertSpaces","tabSize","applyEdits","save","writeFileSync","parse","error","offset","printParseErrorCode"],"sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/@angular/cli/src/utilities/json-file.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseJson = exports.readAndParseJson = exports.JSONFile = void 0;\nconst fs_1 = require(\"fs\");\nconst jsonc_parser_1 = require(\"jsonc-parser\");\n/** @internal */\nclass JSONFile {\n    constructor(path) {\n        this.path = path;\n        const buffer = (0, fs_1.readFileSync)(this.path);\n        if (buffer) {\n            this.content = buffer.toString();\n        }\n        else {\n            throw new Error(`Could not read '${path}'.`);\n        }\n    }\n    get JsonAst() {\n        if (this._jsonAst) {\n            return this._jsonAst;\n        }\n        const errors = [];\n        this._jsonAst = (0, jsonc_parser_1.parseTree)(this.content, errors, { allowTrailingComma: true });\n        if (errors.length) {\n            formatError(this.path, errors);\n        }\n        return this._jsonAst;\n    }\n    get(jsonPath) {\n        const jsonAstNode = this.JsonAst;\n        if (!jsonAstNode) {\n            return undefined;\n        }\n        if (jsonPath.length === 0) {\n            return (0, jsonc_parser_1.getNodeValue)(jsonAstNode);\n        }\n        const node = (0, jsonc_parser_1.findNodeAtLocation)(jsonAstNode, jsonPath);\n        return node === undefined ? undefined : (0, jsonc_parser_1.getNodeValue)(node);\n    }\n    modify(jsonPath, value, insertInOrder) {\n        if (value === undefined && this.get(jsonPath) === undefined) {\n            // Cannot remove a value which doesn't exist.\n            return false;\n        }\n        let getInsertionIndex;\n        if (insertInOrder === undefined) {\n            const property = jsonPath.slice(-1)[0];\n            getInsertionIndex = (properties) => [...properties, property].sort().findIndex((p) => p === property);\n        }\n        else if (insertInOrder !== false) {\n            getInsertionIndex = insertInOrder;\n        }\n        const edits = (0, jsonc_parser_1.modify)(this.content, jsonPath, value, {\n            getInsertionIndex,\n            // TODO: use indentation from original file.\n            formattingOptions: {\n                insertSpaces: true,\n                tabSize: 2,\n            },\n        });\n        if (edits.length === 0) {\n            return false;\n        }\n        this.content = (0, jsonc_parser_1.applyEdits)(this.content, edits);\n        this._jsonAst = undefined;\n        return true;\n    }\n    save() {\n        (0, fs_1.writeFileSync)(this.path, this.content);\n    }\n}\nexports.JSONFile = JSONFile;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction readAndParseJson(path) {\n    const errors = [];\n    const content = (0, jsonc_parser_1.parse)((0, fs_1.readFileSync)(path, 'utf-8'), errors, { allowTrailingComma: true });\n    if (errors.length) {\n        formatError(path, errors);\n    }\n    return content;\n}\nexports.readAndParseJson = readAndParseJson;\nfunction formatError(path, errors) {\n    const { error, offset } = errors[0];\n    throw new Error(`Failed to parse \"${path}\" as JSON AST Object. ${(0, jsonc_parser_1.printParseErrorCode)(error)} at location: ${offset}.`);\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction parseJson(content) {\n    return (0, jsonc_parser_1.parse)(content, undefined, { allowTrailingComma: true });\n}\nexports.parseJson = parseJson;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}