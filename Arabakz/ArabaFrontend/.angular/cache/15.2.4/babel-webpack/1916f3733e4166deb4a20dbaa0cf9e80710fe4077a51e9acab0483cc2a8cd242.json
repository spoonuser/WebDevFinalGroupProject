{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PatternMatchingHost = void 0;\nconst resolver_1 = require(\"./resolver\");\n/**\n */\nclass PatternMatchingHost extends resolver_1.ResolverHost {\n  constructor() {\n    super(...arguments);\n    this._patterns = new Map();\n  }\n  addPattern(pattern, replacementFn) {\n    // Simple GLOB pattern replacement.\n    const reString = '^(' + (Array.isArray(pattern) ? pattern : [pattern]).map(ex => '(' + ex.split(/[/\\\\]/g).map(f => f.replace(/[-[\\]{}()+?.^$|]/g, '\\\\$&').replace(/^\\*\\*/g, '(.+?)?').replace(/\\*/g, '[^/\\\\\\\\]*')).join('[/\\\\\\\\]') + ')').join('|') + ')($|/|\\\\\\\\)';\n    this._patterns.set(new RegExp(reString), replacementFn);\n  }\n  _resolve(path) {\n    let newPath = path;\n    this._patterns.forEach((fn, re) => {\n      if (re.test(path)) {\n        newPath = fn(newPath);\n      }\n    });\n    return newPath;\n  }\n}\nexports.PatternMatchingHost = PatternMatchingHost;","map":{"version":3,"names":["Object","defineProperty","exports","value","PatternMatchingHost","resolver_1","require","ResolverHost","constructor","arguments","_patterns","Map","addPattern","pattern","replacementFn","reString","Array","isArray","map","ex","split","f","replace","join","set","RegExp","_resolve","path","newPath","forEach","fn","re","test"],"sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/@angular/cli/node_modules/@angular-devkit/core/src/virtual-fs/host/pattern.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PatternMatchingHost = void 0;\nconst resolver_1 = require(\"./resolver\");\n/**\n */\nclass PatternMatchingHost extends resolver_1.ResolverHost {\n    constructor() {\n        super(...arguments);\n        this._patterns = new Map();\n    }\n    addPattern(pattern, replacementFn) {\n        // Simple GLOB pattern replacement.\n        const reString = '^(' +\n            (Array.isArray(pattern) ? pattern : [pattern])\n                .map((ex) => '(' +\n                ex\n                    .split(/[/\\\\]/g)\n                    .map((f) => f\n                    .replace(/[-[\\]{}()+?.^$|]/g, '\\\\$&')\n                    .replace(/^\\*\\*/g, '(.+?)?')\n                    .replace(/\\*/g, '[^/\\\\\\\\]*'))\n                    .join('[/\\\\\\\\]') +\n                ')')\n                .join('|') +\n            ')($|/|\\\\\\\\)';\n        this._patterns.set(new RegExp(reString), replacementFn);\n    }\n    _resolve(path) {\n        let newPath = path;\n        this._patterns.forEach((fn, re) => {\n            if (re.test(path)) {\n                newPath = fn(newPath);\n            }\n        });\n        return newPath;\n    }\n}\nexports.PatternMatchingHost = PatternMatchingHost;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,mBAAmB,GAAG,KAAK,CAAC;AACpC,MAAMC,UAAU,GAAGC,OAAO,CAAC,YAAY,CAAC;AACxC;AACA;AACA,MAAMF,mBAAmB,SAASC,UAAU,CAACE,YAAY,CAAC;EACtDC,WAAW,GAAG;IACV,KAAK,CAAC,GAAGC,SAAS,CAAC;IACnB,IAAI,CAACC,SAAS,GAAG,IAAIC,GAAG,EAAE;EAC9B;EACAC,UAAU,CAACC,OAAO,EAAEC,aAAa,EAAE;IAC/B;IACA,MAAMC,QAAQ,GAAG,IAAI,GACjB,CAACC,KAAK,CAACC,OAAO,CAACJ,OAAO,CAAC,GAAGA,OAAO,GAAG,CAACA,OAAO,CAAC,EACxCK,GAAG,CAAEC,EAAE,IAAK,GAAG,GAChBA,EAAE,CACGC,KAAK,CAAC,QAAQ,CAAC,CACfF,GAAG,CAAEG,CAAC,IAAKA,CAAC,CACZC,OAAO,CAAC,mBAAmB,EAAE,MAAM,CAAC,CACpCA,OAAO,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAC3BA,OAAO,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC,CAC5BC,IAAI,CAAC,SAAS,CAAC,GACpB,GAAG,CAAC,CACHA,IAAI,CAAC,GAAG,CAAC,GACd,aAAa;IACjB,IAAI,CAACb,SAAS,CAACc,GAAG,CAAC,IAAIC,MAAM,CAACV,QAAQ,CAAC,EAAED,aAAa,CAAC;EAC3D;EACAY,QAAQ,CAACC,IAAI,EAAE;IACX,IAAIC,OAAO,GAAGD,IAAI;IAClB,IAAI,CAACjB,SAAS,CAACmB,OAAO,CAAC,CAACC,EAAE,EAAEC,EAAE,KAAK;MAC/B,IAAIA,EAAE,CAACC,IAAI,CAACL,IAAI,CAAC,EAAE;QACfC,OAAO,GAAGE,EAAE,CAACF,OAAO,CAAC;MACzB;IACJ,CAAC,CAAC;IACF,OAAOA,OAAO;EAClB;AACJ;AACA1B,OAAO,CAACE,mBAAmB,GAAGA,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}