{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getRules = exports.isJSONType = void 0;\nconst _jsonTypes = [\"string\", \"number\", \"integer\", \"boolean\", \"null\", \"object\", \"array\"];\nconst jsonTypes = new Set(_jsonTypes);\nfunction isJSONType(x) {\n  return typeof x == \"string\" && jsonTypes.has(x);\n}\nexports.isJSONType = isJSONType;\nfunction getRules() {\n  const groups = {\n    number: {\n      type: \"number\",\n      rules: []\n    },\n    string: {\n      type: \"string\",\n      rules: []\n    },\n    array: {\n      type: \"array\",\n      rules: []\n    },\n    object: {\n      type: \"object\",\n      rules: []\n    }\n  };\n  return {\n    types: {\n      ...groups,\n      integer: true,\n      boolean: true,\n      null: true\n    },\n    rules: [{\n      rules: []\n    }, groups.number, groups.string, groups.array, groups.object],\n    post: {\n      rules: []\n    },\n    all: {},\n    keywords: {}\n  };\n}\nexports.getRules = getRules;","map":{"version":3,"names":["Object","defineProperty","exports","value","getRules","isJSONType","_jsonTypes","jsonTypes","Set","x","has","groups","number","type","rules","string","array","object","types","integer","boolean","null","post","all","keywords"],"sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/ajv/dist/compile/rules.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRules = exports.isJSONType = void 0;\nconst _jsonTypes = [\"string\", \"number\", \"integer\", \"boolean\", \"null\", \"object\", \"array\"];\nconst jsonTypes = new Set(_jsonTypes);\nfunction isJSONType(x) {\n    return typeof x == \"string\" && jsonTypes.has(x);\n}\nexports.isJSONType = isJSONType;\nfunction getRules() {\n    const groups = {\n        number: { type: \"number\", rules: [] },\n        string: { type: \"string\", rules: [] },\n        array: { type: \"array\", rules: [] },\n        object: { type: \"object\", rules: [] },\n    };\n    return {\n        types: { ...groups, integer: true, boolean: true, null: true },\n        rules: [{ rules: [] }, groups.number, groups.string, groups.array, groups.object],\n        post: { rules: [] },\n        all: {},\n        keywords: {},\n    };\n}\nexports.getRules = getRules;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,QAAQ,GAAGF,OAAO,CAACG,UAAU,GAAG,KAAK,CAAC;AAC9C,MAAMC,UAAU,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,CAAC;AACxF,MAAMC,SAAS,GAAG,IAAIC,GAAG,CAACF,UAAU,CAAC;AACrC,SAASD,UAAU,CAACI,CAAC,EAAE;EACnB,OAAO,OAAOA,CAAC,IAAI,QAAQ,IAAIF,SAAS,CAACG,GAAG,CAACD,CAAC,CAAC;AACnD;AACAP,OAAO,CAACG,UAAU,GAAGA,UAAU;AAC/B,SAASD,QAAQ,GAAG;EAChB,MAAMO,MAAM,GAAG;IACXC,MAAM,EAAE;MAAEC,IAAI,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAG,CAAC;IACrCC,MAAM,EAAE;MAAEF,IAAI,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAG,CAAC;IACrCE,KAAK,EAAE;MAAEH,IAAI,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAG,CAAC;IACnCG,MAAM,EAAE;MAAEJ,IAAI,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAG;EACxC,CAAC;EACD,OAAO;IACHI,KAAK,EAAE;MAAE,GAAGP,MAAM;MAAEQ,OAAO,EAAE,IAAI;MAAEC,OAAO,EAAE,IAAI;MAAEC,IAAI,EAAE;IAAK,CAAC;IAC9DP,KAAK,EAAE,CAAC;MAAEA,KAAK,EAAE;IAAG,CAAC,EAAEH,MAAM,CAACC,MAAM,EAAED,MAAM,CAACI,MAAM,EAAEJ,MAAM,CAACK,KAAK,EAAEL,MAAM,CAACM,MAAM,CAAC;IACjFK,IAAI,EAAE;MAAER,KAAK,EAAE;IAAG,CAAC;IACnBS,GAAG,EAAE,CAAC,CAAC;IACPC,QAAQ,EAAE,CAAC;EACf,CAAC;AACL;AACAtB,OAAO,CAACE,QAAQ,GAAGA,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}