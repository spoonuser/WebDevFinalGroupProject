{"ast":null,"code":"\"use strict\";\n\nexports = module.exports = cliWidth;\nfunction normalizeOpts(options) {\n  let defaultOpts = {\n    defaultWidth: 0,\n    output: process.stdout,\n    tty: require(\"tty\")\n  };\n  if (!options) {\n    return defaultOpts;\n  }\n  Object.keys(defaultOpts).forEach(function (key) {\n    if (!options[key]) {\n      options[key] = defaultOpts[key];\n    }\n  });\n  return options;\n}\nfunction cliWidth(options) {\n  let opts = normalizeOpts(options);\n  if (opts.output.getWindowSize) {\n    return opts.output.getWindowSize()[0] || opts.defaultWidth;\n  }\n  if (opts.tty.getWindowSize) {\n    return opts.tty.getWindowSize()[1] || opts.defaultWidth;\n  }\n  if (opts.output.columns) {\n    return opts.output.columns;\n  }\n  if (process.env.CLI_WIDTH) {\n    let width = parseInt(process.env.CLI_WIDTH, 10);\n    if (!isNaN(width) && width !== 0) {\n      return width;\n    }\n  }\n  return opts.defaultWidth;\n}","map":{"version":3,"names":["exports","module","cliWidth","normalizeOpts","options","defaultOpts","defaultWidth","output","process","stdout","tty","require","Object","keys","forEach","key","opts","getWindowSize","columns","env","CLI_WIDTH","width","parseInt","isNaN"],"sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/cli-width/index.js"],"sourcesContent":["\"use strict\";\n\nexports = module.exports = cliWidth;\n\nfunction normalizeOpts(options) {\n  let defaultOpts = {\n    defaultWidth: 0,\n    output: process.stdout,\n    tty: require(\"tty\"),\n  };\n\n  if (!options) {\n    return defaultOpts;\n  }\n\n  Object.keys(defaultOpts).forEach(function (key) {\n    if (!options[key]) {\n      options[key] = defaultOpts[key];\n    }\n  });\n\n  return options;\n}\n\nfunction cliWidth(options) {\n  let opts = normalizeOpts(options);\n\n  if (opts.output.getWindowSize) {\n    return opts.output.getWindowSize()[0] || opts.defaultWidth;\n  }\n\n  if (opts.tty.getWindowSize) {\n    return opts.tty.getWindowSize()[1] || opts.defaultWidth;\n  }\n\n  if (opts.output.columns) {\n    return opts.output.columns;\n  }\n\n  if (process.env.CLI_WIDTH) {\n    let width = parseInt(process.env.CLI_WIDTH, 10);\n\n    if (!isNaN(width) && width !== 0) {\n      return width;\n    }\n  }\n\n  return opts.defaultWidth;\n}\n"],"mappings":"AAAA,YAAY;;AAEZA,OAAO,GAAGC,MAAM,CAACD,OAAO,GAAGE,QAAQ;AAEnC,SAASC,aAAa,CAACC,OAAO,EAAE;EAC9B,IAAIC,WAAW,GAAG;IAChBC,YAAY,EAAE,CAAC;IACfC,MAAM,EAAEC,OAAO,CAACC,MAAM;IACtBC,GAAG,EAAEC,OAAO,CAAC,KAAK;EACpB,CAAC;EAED,IAAI,CAACP,OAAO,EAAE;IACZ,OAAOC,WAAW;EACpB;EAEAO,MAAM,CAACC,IAAI,CAACR,WAAW,CAAC,CAACS,OAAO,CAAC,UAAUC,GAAG,EAAE;IAC9C,IAAI,CAACX,OAAO,CAACW,GAAG,CAAC,EAAE;MACjBX,OAAO,CAACW,GAAG,CAAC,GAAGV,WAAW,CAACU,GAAG,CAAC;IACjC;EACF,CAAC,CAAC;EAEF,OAAOX,OAAO;AAChB;AAEA,SAASF,QAAQ,CAACE,OAAO,EAAE;EACzB,IAAIY,IAAI,GAAGb,aAAa,CAACC,OAAO,CAAC;EAEjC,IAAIY,IAAI,CAACT,MAAM,CAACU,aAAa,EAAE;IAC7B,OAAOD,IAAI,CAACT,MAAM,CAACU,aAAa,EAAE,CAAC,CAAC,CAAC,IAAID,IAAI,CAACV,YAAY;EAC5D;EAEA,IAAIU,IAAI,CAACN,GAAG,CAACO,aAAa,EAAE;IAC1B,OAAOD,IAAI,CAACN,GAAG,CAACO,aAAa,EAAE,CAAC,CAAC,CAAC,IAAID,IAAI,CAACV,YAAY;EACzD;EAEA,IAAIU,IAAI,CAACT,MAAM,CAACW,OAAO,EAAE;IACvB,OAAOF,IAAI,CAACT,MAAM,CAACW,OAAO;EAC5B;EAEA,IAAIV,OAAO,CAACW,GAAG,CAACC,SAAS,EAAE;IACzB,IAAIC,KAAK,GAAGC,QAAQ,CAACd,OAAO,CAACW,GAAG,CAACC,SAAS,EAAE,EAAE,CAAC;IAE/C,IAAI,CAACG,KAAK,CAACF,KAAK,CAAC,IAAIA,KAAK,KAAK,CAAC,EAAE;MAChC,OAAOA,KAAK;IACd;EACF;EAEA,OAAOL,IAAI,CAACV,YAAY;AAC1B"},"metadata":{},"sourceType":"script","externalDependencies":[]}