{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TreeSymbol = exports.FileVisitorCancelToken = exports.MergeStrategy = void 0;\nvar MergeStrategy;\n(function (MergeStrategy) {\n  MergeStrategy[MergeStrategy[\"AllowOverwriteConflict\"] = 2] = \"AllowOverwriteConflict\";\n  MergeStrategy[MergeStrategy[\"AllowCreationConflict\"] = 4] = \"AllowCreationConflict\";\n  MergeStrategy[MergeStrategy[\"AllowDeleteConflict\"] = 8] = \"AllowDeleteConflict\";\n  // Uses the default strategy.\n  MergeStrategy[MergeStrategy[\"Default\"] = 0] = \"Default\";\n  // Error out if 2 files have the same path. It is useful to have a different value than\n  // Default in this case as the tooling Default might differ.\n  MergeStrategy[MergeStrategy[\"Error\"] = 1] = \"Error\";\n  // Only content conflicts are overwritten.\n  MergeStrategy[MergeStrategy[\"ContentOnly\"] = 2] = \"ContentOnly\";\n  // Overwrite everything with the latest change.\n  MergeStrategy[MergeStrategy[\"Overwrite\"] = 14] = \"Overwrite\";\n})(MergeStrategy = exports.MergeStrategy || (exports.MergeStrategy = {}));\n// eslint-disable-next-line @typescript-eslint/no-inferrable-types\nexports.FileVisitorCancelToken = Symbol();\nexports.TreeSymbol = function () {\n  const globalSymbol = typeof window == 'object' && window.window === window && window.Symbol || typeof self == 'object' && self.self === self && self.Symbol || typeof global == 'object' && global.global === global && global.Symbol;\n  if (!globalSymbol) {\n    return Symbol('schematic-tree');\n  }\n  if (!globalSymbol.schematicTree) {\n    globalSymbol.schematicTree = Symbol('schematic-tree');\n  }\n  return globalSymbol.schematicTree;\n}();\n// eslint-disable-next-line @typescript-eslint/no-namespace\nvar Tree;\n(function (Tree) {\n  function isTree(maybeTree) {\n    return exports.TreeSymbol in maybeTree;\n  }\n  Tree.isTree = isTree;\n})(Tree || (Tree = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","TreeSymbol","FileVisitorCancelToken","MergeStrategy","Symbol","globalSymbol","window","self","global","schematicTree","Tree","isTree","maybeTree"],"sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/@angular-devkit/schematics/src/tree/interface.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TreeSymbol = exports.FileVisitorCancelToken = exports.MergeStrategy = void 0;\nvar MergeStrategy;\n(function (MergeStrategy) {\n    MergeStrategy[MergeStrategy[\"AllowOverwriteConflict\"] = 2] = \"AllowOverwriteConflict\";\n    MergeStrategy[MergeStrategy[\"AllowCreationConflict\"] = 4] = \"AllowCreationConflict\";\n    MergeStrategy[MergeStrategy[\"AllowDeleteConflict\"] = 8] = \"AllowDeleteConflict\";\n    // Uses the default strategy.\n    MergeStrategy[MergeStrategy[\"Default\"] = 0] = \"Default\";\n    // Error out if 2 files have the same path. It is useful to have a different value than\n    // Default in this case as the tooling Default might differ.\n    MergeStrategy[MergeStrategy[\"Error\"] = 1] = \"Error\";\n    // Only content conflicts are overwritten.\n    MergeStrategy[MergeStrategy[\"ContentOnly\"] = 2] = \"ContentOnly\";\n    // Overwrite everything with the latest change.\n    MergeStrategy[MergeStrategy[\"Overwrite\"] = 14] = \"Overwrite\";\n})(MergeStrategy = exports.MergeStrategy || (exports.MergeStrategy = {}));\n// eslint-disable-next-line @typescript-eslint/no-inferrable-types\nexports.FileVisitorCancelToken = Symbol();\nexports.TreeSymbol = (function () {\n    const globalSymbol = (typeof window == 'object' && window.window === window && window.Symbol) ||\n        (typeof self == 'object' && self.self === self && self.Symbol) ||\n        (typeof global == 'object' && global.global === global && global.Symbol);\n    if (!globalSymbol) {\n        return Symbol('schematic-tree');\n    }\n    if (!globalSymbol.schematicTree) {\n        globalSymbol.schematicTree = Symbol('schematic-tree');\n    }\n    return globalSymbol.schematicTree;\n})();\n// eslint-disable-next-line @typescript-eslint/no-namespace\nvar Tree;\n(function (Tree) {\n    function isTree(maybeTree) {\n        return exports.TreeSymbol in maybeTree;\n    }\n    Tree.isTree = isTree;\n})(Tree || (Tree = {}));\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,UAAU,GAAGF,OAAO,CAACG,sBAAsB,GAAGH,OAAO,CAACI,aAAa,GAAG,KAAK,CAAC;AACpF,IAAIA,aAAa;AACjB,CAAC,UAAUA,aAAa,EAAE;EACtBA,aAAa,CAACA,aAAa,CAAC,wBAAwB,CAAC,GAAG,CAAC,CAAC,GAAG,wBAAwB;EACrFA,aAAa,CAACA,aAAa,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC,GAAG,uBAAuB;EACnFA,aAAa,CAACA,aAAa,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC,GAAG,qBAAqB;EAC/E;EACAA,aAAa,CAACA,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS;EACvD;EACA;EACAA,aAAa,CAACA,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO;EACnD;EACAA,aAAa,CAACA,aAAa,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,GAAG,aAAa;EAC/D;EACAA,aAAa,CAACA,aAAa,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,GAAG,WAAW;AAChE,CAAC,EAAEA,aAAa,GAAGJ,OAAO,CAACI,aAAa,KAAKJ,OAAO,CAACI,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC;AACzE;AACAJ,OAAO,CAACG,sBAAsB,GAAGE,MAAM,EAAE;AACzCL,OAAO,CAACE,UAAU,GAAI,YAAY;EAC9B,MAAMI,YAAY,GAAI,OAAOC,MAAM,IAAI,QAAQ,IAAIA,MAAM,CAACA,MAAM,KAAKA,MAAM,IAAIA,MAAM,CAACF,MAAM,IACvF,OAAOG,IAAI,IAAI,QAAQ,IAAIA,IAAI,CAACA,IAAI,KAAKA,IAAI,IAAIA,IAAI,CAACH,MAAO,IAC7D,OAAOI,MAAM,IAAI,QAAQ,IAAIA,MAAM,CAACA,MAAM,KAAKA,MAAM,IAAIA,MAAM,CAACJ,MAAO;EAC5E,IAAI,CAACC,YAAY,EAAE;IACf,OAAOD,MAAM,CAAC,gBAAgB,CAAC;EACnC;EACA,IAAI,CAACC,YAAY,CAACI,aAAa,EAAE;IAC7BJ,YAAY,CAACI,aAAa,GAAGL,MAAM,CAAC,gBAAgB,CAAC;EACzD;EACA,OAAOC,YAAY,CAACI,aAAa;AACrC,CAAC,EAAG;AACJ;AACA,IAAIC,IAAI;AACR,CAAC,UAAUA,IAAI,EAAE;EACb,SAASC,MAAM,CAACC,SAAS,EAAE;IACvB,OAAOb,OAAO,CAACE,UAAU,IAAIW,SAAS;EAC1C;EACAF,IAAI,CAACC,MAAM,GAAGA,MAAM;AACxB,CAAC,EAAED,IAAI,KAAKA,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}