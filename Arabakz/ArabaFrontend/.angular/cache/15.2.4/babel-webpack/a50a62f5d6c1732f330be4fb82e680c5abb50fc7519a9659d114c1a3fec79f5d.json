{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _asyncToGenerator = require(\"/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createWorkspaceHost = void 0;\nconst virtual_fs_1 = require(\"../virtual-fs\");\nfunction createWorkspaceHost(host) {\n  const workspaceHost = {\n    readFile(path) {\n      return _asyncToGenerator(function* () {\n        const data = yield host.read((0, virtual_fs_1.normalize)(path)).toPromise();\n        return virtual_fs_1.virtualFs.fileBufferToString(data);\n      })();\n    },\n    writeFile(path, data) {\n      return _asyncToGenerator(function* () {\n        return host.write((0, virtual_fs_1.normalize)(path), virtual_fs_1.virtualFs.stringToFileBuffer(data)).toPromise();\n      })();\n    },\n    isDirectory(path) {\n      return _asyncToGenerator(function* () {\n        try {\n          return yield host.isDirectory((0, virtual_fs_1.normalize)(path)).toPromise();\n        } catch (_a) {\n          // some hosts throw if path does not exist\n          return false;\n        }\n      })();\n    },\n    isFile(path) {\n      return _asyncToGenerator(function* () {\n        try {\n          return yield host.isFile((0, virtual_fs_1.normalize)(path)).toPromise();\n        } catch (_a) {\n          // some hosts throw if path does not exist\n          return false;\n        }\n      })();\n    }\n  };\n  return workspaceHost;\n}\nexports.createWorkspaceHost = createWorkspaceHost;","map":{"version":3,"names":["Object","defineProperty","exports","value","createWorkspaceHost","virtual_fs_1","require","host","workspaceHost","readFile","path","data","read","normalize","toPromise","virtualFs","fileBufferToString","writeFile","write","stringToFileBuffer","isDirectory","_a","isFile"],"sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/@angular/cli/node_modules/@angular-devkit/core/src/workspace/host.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createWorkspaceHost = void 0;\nconst virtual_fs_1 = require(\"../virtual-fs\");\nfunction createWorkspaceHost(host) {\n    const workspaceHost = {\n        async readFile(path) {\n            const data = await host.read((0, virtual_fs_1.normalize)(path)).toPromise();\n            return virtual_fs_1.virtualFs.fileBufferToString(data);\n        },\n        async writeFile(path, data) {\n            return host.write((0, virtual_fs_1.normalize)(path), virtual_fs_1.virtualFs.stringToFileBuffer(data)).toPromise();\n        },\n        async isDirectory(path) {\n            try {\n                return await host.isDirectory((0, virtual_fs_1.normalize)(path)).toPromise();\n            }\n            catch (_a) {\n                // some hosts throw if path does not exist\n                return false;\n            }\n        },\n        async isFile(path) {\n            try {\n                return await host.isFile((0, virtual_fs_1.normalize)(path)).toPromise();\n            }\n            catch (_a) {\n                // some hosts throw if path does not exist\n                return false;\n            }\n        },\n    };\n    return workspaceHost;\n}\nexports.createWorkspaceHost = createWorkspaceHost;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAOAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,mBAAmB,GAAG,KAAK,CAAC;AACpC,MAAMC,YAAY,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC7C,SAASF,mBAAmB,CAACG,IAAI,EAAE;EAC/B,MAAMC,aAAa,GAAG;IACZC,QAAQ,CAACC,IAAI,EAAE;MAAA;QACjB,MAAMC,IAAI,SAASJ,IAAI,CAACK,IAAI,CAAC,CAAC,CAAC,EAAEP,YAAY,CAACQ,SAAS,EAAEH,IAAI,CAAC,CAAC,CAACI,SAAS,EAAE;QAC3E,OAAOT,YAAY,CAACU,SAAS,CAACC,kBAAkB,CAACL,IAAI,CAAC;MAAC;IAC3D,CAAC;IACKM,SAAS,CAACP,IAAI,EAAEC,IAAI,EAAE;MAAA;QACxB,OAAOJ,IAAI,CAACW,KAAK,CAAC,CAAC,CAAC,EAAEb,YAAY,CAACQ,SAAS,EAAEH,IAAI,CAAC,EAAEL,YAAY,CAACU,SAAS,CAACI,kBAAkB,CAACR,IAAI,CAAC,CAAC,CAACG,SAAS,EAAE;MAAC;IACtH,CAAC;IACKM,WAAW,CAACV,IAAI,EAAE;MAAA;QACpB,IAAI;UACA,aAAaH,IAAI,CAACa,WAAW,CAAC,CAAC,CAAC,EAAEf,YAAY,CAACQ,SAAS,EAAEH,IAAI,CAAC,CAAC,CAACI,SAAS,EAAE;QAChF,CAAC,CACD,OAAOO,EAAE,EAAE;UACP;UACA,OAAO,KAAK;QAChB;MAAC;IACL,CAAC;IACKC,MAAM,CAACZ,IAAI,EAAE;MAAA;QACf,IAAI;UACA,aAAaH,IAAI,CAACe,MAAM,CAAC,CAAC,CAAC,EAAEjB,YAAY,CAACQ,SAAS,EAAEH,IAAI,CAAC,CAAC,CAACI,SAAS,EAAE;QAC3E,CAAC,CACD,OAAOO,EAAE,EAAE;UACP;UACA,OAAO,KAAK;QAChB;MAAC;IACL;EACJ,CAAC;EACD,OAAOb,aAAa;AACxB;AACAN,OAAO,CAACE,mBAAmB,GAAGA,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}