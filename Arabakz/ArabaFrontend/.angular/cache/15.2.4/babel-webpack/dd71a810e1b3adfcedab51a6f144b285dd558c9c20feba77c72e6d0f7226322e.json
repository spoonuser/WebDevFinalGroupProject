{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst code_1 = require(\"../code\");\nconst additionalItems_1 = require(\"./additionalItems\");\nconst error = {\n  message: ({\n    params: {\n      len\n    }\n  }) => (0, codegen_1.str)`must NOT have more than ${len} items`,\n  params: ({\n    params: {\n      len\n    }\n  }) => (0, codegen_1._)`{limit: ${len}}`\n};\nconst def = {\n  keyword: \"items\",\n  type: \"array\",\n  schemaType: [\"object\", \"boolean\"],\n  before: \"uniqueItems\",\n  error,\n  code(cxt) {\n    const {\n      schema,\n      parentSchema,\n      it\n    } = cxt;\n    const {\n      prefixItems\n    } = parentSchema;\n    it.items = true;\n    if ((0, util_1.alwaysValidSchema)(it, schema)) return;\n    if (prefixItems) (0, additionalItems_1.validateAdditionalItems)(cxt, prefixItems);else cxt.ok((0, code_1.validateArray)(cxt));\n  }\n};\nexports.default = def;","map":{"version":3,"names":["Object","defineProperty","exports","value","codegen_1","require","util_1","code_1","additionalItems_1","error","message","params","len","str","_","def","keyword","type","schemaType","before","code","cxt","schema","parentSchema","it","prefixItems","items","alwaysValidSchema","validateAdditionalItems","ok","validateArray","default"],"sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/ajv/dist/vocabularies/applicator/items2020.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst code_1 = require(\"../code\");\nconst additionalItems_1 = require(\"./additionalItems\");\nconst error = {\n    message: ({ params: { len } }) => (0, codegen_1.str) `must NOT have more than ${len} items`,\n    params: ({ params: { len } }) => (0, codegen_1._) `{limit: ${len}}`,\n};\nconst def = {\n    keyword: \"items\",\n    type: \"array\",\n    schemaType: [\"object\", \"boolean\"],\n    before: \"uniqueItems\",\n    error,\n    code(cxt) {\n        const { schema, parentSchema, it } = cxt;\n        const { prefixItems } = parentSchema;\n        it.items = true;\n        if ((0, util_1.alwaysValidSchema)(it, schema))\n            return;\n        if (prefixItems)\n            (0, additionalItems_1.validateAdditionalItems)(cxt, prefixItems);\n        else\n            cxt.ok((0, code_1.validateArray)(cxt));\n    },\n};\nexports.default = def;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,SAAS,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AAClD,MAAMC,MAAM,GAAGD,OAAO,CAAC,oBAAoB,CAAC;AAC5C,MAAME,MAAM,GAAGF,OAAO,CAAC,SAAS,CAAC;AACjC,MAAMG,iBAAiB,GAAGH,OAAO,CAAC,mBAAmB,CAAC;AACtD,MAAMI,KAAK,GAAG;EACVC,OAAO,EAAE,CAAC;IAAEC,MAAM,EAAE;MAAEC;IAAI;EAAE,CAAC,KAAK,CAAC,CAAC,EAAER,SAAS,CAACS,GAAG,CAAG,2BAA0BD,GAAI,QAAO;EAC3FD,MAAM,EAAE,CAAC;IAAEA,MAAM,EAAE;MAAEC;IAAI;EAAE,CAAC,KAAK,CAAC,CAAC,EAAER,SAAS,CAACU,CAAC,CAAG,WAAUF,GAAI;AACrE,CAAC;AACD,MAAMG,GAAG,GAAG;EACRC,OAAO,EAAE,OAAO;EAChBC,IAAI,EAAE,OAAO;EACbC,UAAU,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC;EACjCC,MAAM,EAAE,aAAa;EACrBV,KAAK;EACLW,IAAI,CAACC,GAAG,EAAE;IACN,MAAM;MAAEC,MAAM;MAAEC,YAAY;MAAEC;IAAG,CAAC,GAAGH,GAAG;IACxC,MAAM;MAAEI;IAAY,CAAC,GAAGF,YAAY;IACpCC,EAAE,CAACE,KAAK,GAAG,IAAI;IACf,IAAI,CAAC,CAAC,EAAEpB,MAAM,CAACqB,iBAAiB,EAAEH,EAAE,EAAEF,MAAM,CAAC,EACzC;IACJ,IAAIG,WAAW,EACX,CAAC,CAAC,EAAEjB,iBAAiB,CAACoB,uBAAuB,EAAEP,GAAG,EAAEI,WAAW,CAAC,CAAC,KAEjEJ,GAAG,CAACQ,EAAE,CAAC,CAAC,CAAC,EAAEtB,MAAM,CAACuB,aAAa,EAAET,GAAG,CAAC,CAAC;EAC9C;AACJ,CAAC;AACDnB,OAAO,CAAC6B,OAAO,GAAGhB,GAAG"},"metadata":{},"sourceType":"script","externalDependencies":[]}