{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateAdditionalItems = void 0;\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n  message: ({\n    params: {\n      len\n    }\n  }) => (0, codegen_1.str)`must NOT have more than ${len} items`,\n  params: ({\n    params: {\n      len\n    }\n  }) => (0, codegen_1._)`{limit: ${len}}`\n};\nconst def = {\n  keyword: \"additionalItems\",\n  type: \"array\",\n  schemaType: [\"boolean\", \"object\"],\n  before: \"uniqueItems\",\n  error,\n  code(cxt) {\n    const {\n      parentSchema,\n      it\n    } = cxt;\n    const {\n      items\n    } = parentSchema;\n    if (!Array.isArray(items)) {\n      (0, util_1.checkStrictMode)(it, '\"additionalItems\" is ignored when \"items\" is not an array of schemas');\n      return;\n    }\n    validateAdditionalItems(cxt, items);\n  }\n};\nfunction validateAdditionalItems(cxt, items) {\n  const {\n    gen,\n    schema,\n    data,\n    keyword,\n    it\n  } = cxt;\n  it.items = true;\n  const len = gen.const(\"len\", (0, codegen_1._)`${data}.length`);\n  if (schema === false) {\n    cxt.setParams({\n      len: items.length\n    });\n    cxt.pass((0, codegen_1._)`${len} <= ${items.length}`);\n  } else if (typeof schema == \"object\" && !(0, util_1.alwaysValidSchema)(it, schema)) {\n    const valid = gen.var(\"valid\", (0, codegen_1._)`${len} <= ${items.length}`); // TODO var\n    gen.if((0, codegen_1.not)(valid), () => validateItems(valid));\n    cxt.ok(valid);\n  }\n  function validateItems(valid) {\n    gen.forRange(\"i\", items.length, len, i => {\n      cxt.subschema({\n        keyword,\n        dataProp: i,\n        dataPropType: util_1.Type.Num\n      }, valid);\n      if (!it.allErrors) gen.if((0, codegen_1.not)(valid), () => gen.break());\n    });\n  }\n}\nexports.validateAdditionalItems = validateAdditionalItems;\nexports.default = def;","map":{"version":3,"names":["Object","defineProperty","exports","value","validateAdditionalItems","codegen_1","require","util_1","error","message","params","len","str","_","def","keyword","type","schemaType","before","code","cxt","parentSchema","it","items","Array","isArray","checkStrictMode","gen","schema","data","const","setParams","length","pass","alwaysValidSchema","valid","var","if","not","validateItems","ok","forRange","i","subschema","dataProp","dataPropType","Type","Num","allErrors","break","default"],"sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/ajv/dist/vocabularies/applicator/additionalItems.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateAdditionalItems = void 0;\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: ({ params: { len } }) => (0, codegen_1.str) `must NOT have more than ${len} items`,\n    params: ({ params: { len } }) => (0, codegen_1._) `{limit: ${len}}`,\n};\nconst def = {\n    keyword: \"additionalItems\",\n    type: \"array\",\n    schemaType: [\"boolean\", \"object\"],\n    before: \"uniqueItems\",\n    error,\n    code(cxt) {\n        const { parentSchema, it } = cxt;\n        const { items } = parentSchema;\n        if (!Array.isArray(items)) {\n            (0, util_1.checkStrictMode)(it, '\"additionalItems\" is ignored when \"items\" is not an array of schemas');\n            return;\n        }\n        validateAdditionalItems(cxt, items);\n    },\n};\nfunction validateAdditionalItems(cxt, items) {\n    const { gen, schema, data, keyword, it } = cxt;\n    it.items = true;\n    const len = gen.const(\"len\", (0, codegen_1._) `${data}.length`);\n    if (schema === false) {\n        cxt.setParams({ len: items.length });\n        cxt.pass((0, codegen_1._) `${len} <= ${items.length}`);\n    }\n    else if (typeof schema == \"object\" && !(0, util_1.alwaysValidSchema)(it, schema)) {\n        const valid = gen.var(\"valid\", (0, codegen_1._) `${len} <= ${items.length}`); // TODO var\n        gen.if((0, codegen_1.not)(valid), () => validateItems(valid));\n        cxt.ok(valid);\n    }\n    function validateItems(valid) {\n        gen.forRange(\"i\", items.length, len, (i) => {\n            cxt.subschema({ keyword, dataProp: i, dataPropType: util_1.Type.Num }, valid);\n            if (!it.allErrors)\n                gen.if((0, codegen_1.not)(valid), () => gen.break());\n        });\n    }\n}\nexports.validateAdditionalItems = validateAdditionalItems;\nexports.default = def;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}