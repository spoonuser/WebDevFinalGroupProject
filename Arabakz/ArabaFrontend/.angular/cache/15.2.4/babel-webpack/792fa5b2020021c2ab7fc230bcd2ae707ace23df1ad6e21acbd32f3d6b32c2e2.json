{"ast":null,"code":"/*\n ** © 2020 by Philipp Dunkel, Ben Noordhuis, Elan Shankar, Paul Miller\n ** Licensed under MIT License.\n */\n\n/* jshint node:true */\n\"use strict\";\n\nif (process.platform !== \"darwin\") {\n  throw new Error(`Module 'fsevents' is not compatible with platform '${process.platform}'`);\n}\nconst Native = require(\"./fsevents.node\");\nconst events = Native.constants;\nfunction watch(path, since, handler) {\n  if (typeof path !== \"string\") {\n    throw new TypeError(`fsevents argument 1 must be a string and not a ${typeof path}`);\n  }\n  if (\"function\" === typeof since && \"undefined\" === typeof handler) {\n    handler = since;\n    since = Native.flags.SinceNow;\n  }\n  if (typeof since !== \"number\") {\n    throw new TypeError(`fsevents argument 2 must be a number and not a ${typeof since}`);\n  }\n  if (typeof handler !== \"function\") {\n    throw new TypeError(`fsevents argument 3 must be a function and not a ${typeof handler}`);\n  }\n  let instance = Native.start(Native.global, path, since, handler);\n  if (!instance) throw new Error(`could not watch: ${path}`);\n  return () => {\n    const result = instance ? Promise.resolve(instance).then(Native.stop) : Promise.resolve(undefined);\n    instance = undefined;\n    return result;\n  };\n}\nfunction getInfo(path, flags) {\n  return {\n    path,\n    flags,\n    event: getEventType(flags),\n    type: getFileType(flags),\n    changes: getFileChanges(flags)\n  };\n}\nfunction getFileType(flags) {\n  if (events.ItemIsFile & flags) return \"file\";\n  if (events.ItemIsDir & flags) return \"directory\";\n  if (events.ItemIsSymlink & flags) return \"symlink\";\n}\nfunction anyIsTrue(obj) {\n  for (let key in obj) {\n    if (obj[key]) return true;\n  }\n  return false;\n}\nfunction getEventType(flags) {\n  if (events.ItemRemoved & flags) return \"deleted\";\n  if (events.ItemRenamed & flags) return \"moved\";\n  if (events.ItemCreated & flags) return \"created\";\n  if (events.ItemModified & flags) return \"modified\";\n  if (events.RootChanged & flags) return \"root-changed\";\n  if (events.ItemCloned & flags) return \"cloned\";\n  if (anyIsTrue(flags)) return \"modified\";\n  return \"unknown\";\n}\nfunction getFileChanges(flags) {\n  return {\n    inode: !!(events.ItemInodeMetaMod & flags),\n    finder: !!(events.ItemFinderInfoMod & flags),\n    access: !!(events.ItemChangeOwner & flags),\n    xattrs: !!(events.ItemXattrMod & flags)\n  };\n}\nexports.watch = watch;\nexports.getInfo = getInfo;\nexports.constants = events;","map":{"version":3,"names":["process","platform","Error","Native","require","events","constants","watch","path","since","handler","TypeError","flags","SinceNow","instance","start","global","result","Promise","resolve","then","stop","undefined","getInfo","event","getEventType","type","getFileType","changes","getFileChanges","ItemIsFile","ItemIsDir","ItemIsSymlink","anyIsTrue","obj","key","ItemRemoved","ItemRenamed","ItemCreated","ItemModified","RootChanged","ItemCloned","inode","ItemInodeMetaMod","finder","ItemFinderInfoMod","access","ItemChangeOwner","xattrs","ItemXattrMod","exports"],"sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/fsevents/fsevents.js"],"sourcesContent":["/*\n ** © 2020 by Philipp Dunkel, Ben Noordhuis, Elan Shankar, Paul Miller\n ** Licensed under MIT License.\n */\n\n/* jshint node:true */\n\"use strict\";\n\nif (process.platform !== \"darwin\") {\n  throw new Error(`Module 'fsevents' is not compatible with platform '${process.platform}'`);\n}\n\nconst Native = require(\"./fsevents.node\");\nconst events = Native.constants;\n\nfunction watch(path, since, handler) {\n  if (typeof path !== \"string\") {\n    throw new TypeError(`fsevents argument 1 must be a string and not a ${typeof path}`);\n  }\n  if (\"function\" === typeof since && \"undefined\" === typeof handler) {\n    handler = since;\n    since = Native.flags.SinceNow;\n  }\n  if (typeof since !== \"number\") {\n    throw new TypeError(`fsevents argument 2 must be a number and not a ${typeof since}`);\n  }\n  if (typeof handler !== \"function\") {\n    throw new TypeError(`fsevents argument 3 must be a function and not a ${typeof handler}`);\n  }\n\n  let instance = Native.start(Native.global, path, since, handler);\n  if (!instance) throw new Error(`could not watch: ${path}`);\n  return () => {\n    const result = instance ? Promise.resolve(instance).then(Native.stop) : Promise.resolve(undefined);\n    instance = undefined;\n    return result;\n  };\n}\n\nfunction getInfo(path, flags) {\n  return {\n    path,\n    flags,\n    event: getEventType(flags),\n    type: getFileType(flags),\n    changes: getFileChanges(flags),\n  };\n}\n\nfunction getFileType(flags) {\n  if (events.ItemIsFile & flags) return \"file\";\n  if (events.ItemIsDir & flags) return \"directory\";\n  if (events.ItemIsSymlink & flags) return \"symlink\";\n}\nfunction anyIsTrue(obj) {\n  for (let key in obj) {\n    if (obj[key]) return true;\n  }\n  return false;\n}\nfunction getEventType(flags) {\n  if (events.ItemRemoved & flags) return \"deleted\";\n  if (events.ItemRenamed & flags) return \"moved\";\n  if (events.ItemCreated & flags) return \"created\";\n  if (events.ItemModified & flags) return \"modified\";\n  if (events.RootChanged & flags) return \"root-changed\";\n  if (events.ItemCloned & flags) return \"cloned\";\n  if (anyIsTrue(flags)) return \"modified\";\n  return \"unknown\";\n}\nfunction getFileChanges(flags) {\n  return {\n    inode: !!(events.ItemInodeMetaMod & flags),\n    finder: !!(events.ItemFinderInfoMod & flags),\n    access: !!(events.ItemChangeOwner & flags),\n    xattrs: !!(events.ItemXattrMod & flags),\n  };\n}\n\nexports.watch = watch;\nexports.getInfo = getInfo;\nexports.constants = events;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}