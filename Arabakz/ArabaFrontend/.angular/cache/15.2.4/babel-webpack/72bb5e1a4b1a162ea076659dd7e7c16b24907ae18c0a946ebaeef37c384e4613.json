{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DryRunSink = void 0;\nconst core_1 = require(\"@angular-devkit/core\");\nconst node_1 = require(\"@angular-devkit/core/node\");\nconst rxjs_1 = require(\"rxjs\");\nconst host_1 = require(\"./host\");\nclass DryRunSink extends host_1.HostSink {\n  constructor(host, force = false) {\n    super(typeof host == 'string' ? new core_1.virtualFs.ScopedHost(new node_1.NodeJsSyncHost(), (0, core_1.normalize)(host)) : host, force);\n    this._subject = new rxjs_1.Subject();\n    this._fileDoesNotExistExceptionSet = new Set();\n    this._fileAlreadyExistExceptionSet = new Set();\n    this.reporter = this._subject.asObservable();\n  }\n  _fileAlreadyExistException(path) {\n    this._fileAlreadyExistExceptionSet.add(path);\n  }\n  _fileDoesNotExistException(path) {\n    this._fileDoesNotExistExceptionSet.add(path);\n  }\n  _done() {\n    this._fileAlreadyExistExceptionSet.forEach(path => {\n      this._subject.next({\n        kind: 'error',\n        description: 'alreadyExist',\n        path\n      });\n    });\n    this._fileDoesNotExistExceptionSet.forEach(path => {\n      this._subject.next({\n        kind: 'error',\n        description: 'doesNotExist',\n        path\n      });\n    });\n    this._filesToDelete.forEach(path => {\n      // Check if this is a renaming.\n      for (const [from] of this._filesToRename) {\n        if (from == path) {\n          // The event is sent later on.\n          return;\n        }\n      }\n      this._subject.next({\n        kind: 'delete',\n        path\n      });\n    });\n    this._filesToRename.forEach(([path, to]) => {\n      this._subject.next({\n        kind: 'rename',\n        path,\n        to\n      });\n    });\n    this._filesToCreate.forEach((content, path) => {\n      // Check if this is a renaming.\n      for (const [, to] of this._filesToRename) {\n        if (to == path) {\n          // The event is sent later on.\n          return;\n        }\n      }\n      if (this._fileAlreadyExistExceptionSet.has(path) || this._fileDoesNotExistExceptionSet.has(path)) {\n        return;\n      }\n      this._subject.next({\n        kind: 'create',\n        path,\n        content: content.generate()\n      });\n    });\n    this._filesToUpdate.forEach((content, path) => {\n      this._subject.next({\n        kind: 'update',\n        path,\n        content: content.generate()\n      });\n    });\n    this._subject.complete();\n    return (0, rxjs_1.of)(undefined);\n  }\n}\nexports.DryRunSink = DryRunSink;","map":{"version":3,"names":["Object","defineProperty","exports","value","DryRunSink","core_1","require","node_1","rxjs_1","host_1","HostSink","constructor","host","force","virtualFs","ScopedHost","NodeJsSyncHost","normalize","_subject","Subject","_fileDoesNotExistExceptionSet","Set","_fileAlreadyExistExceptionSet","reporter","asObservable","_fileAlreadyExistException","path","add","_fileDoesNotExistException","_done","forEach","next","kind","description","_filesToDelete","from","_filesToRename","to","_filesToCreate","content","has","generate","_filesToUpdate","complete","of","undefined"],"sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/@angular-devkit/schematics/src/sink/dryrun.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DryRunSink = void 0;\nconst core_1 = require(\"@angular-devkit/core\");\nconst node_1 = require(\"@angular-devkit/core/node\");\nconst rxjs_1 = require(\"rxjs\");\nconst host_1 = require(\"./host\");\nclass DryRunSink extends host_1.HostSink {\n    constructor(host, force = false) {\n        super(typeof host == 'string'\n            ? new core_1.virtualFs.ScopedHost(new node_1.NodeJsSyncHost(), (0, core_1.normalize)(host))\n            : host, force);\n        this._subject = new rxjs_1.Subject();\n        this._fileDoesNotExistExceptionSet = new Set();\n        this._fileAlreadyExistExceptionSet = new Set();\n        this.reporter = this._subject.asObservable();\n    }\n    _fileAlreadyExistException(path) {\n        this._fileAlreadyExistExceptionSet.add(path);\n    }\n    _fileDoesNotExistException(path) {\n        this._fileDoesNotExistExceptionSet.add(path);\n    }\n    _done() {\n        this._fileAlreadyExistExceptionSet.forEach((path) => {\n            this._subject.next({\n                kind: 'error',\n                description: 'alreadyExist',\n                path,\n            });\n        });\n        this._fileDoesNotExistExceptionSet.forEach((path) => {\n            this._subject.next({\n                kind: 'error',\n                description: 'doesNotExist',\n                path,\n            });\n        });\n        this._filesToDelete.forEach((path) => {\n            // Check if this is a renaming.\n            for (const [from] of this._filesToRename) {\n                if (from == path) {\n                    // The event is sent later on.\n                    return;\n                }\n            }\n            this._subject.next({ kind: 'delete', path });\n        });\n        this._filesToRename.forEach(([path, to]) => {\n            this._subject.next({ kind: 'rename', path, to });\n        });\n        this._filesToCreate.forEach((content, path) => {\n            // Check if this is a renaming.\n            for (const [, to] of this._filesToRename) {\n                if (to == path) {\n                    // The event is sent later on.\n                    return;\n                }\n            }\n            if (this._fileAlreadyExistExceptionSet.has(path) ||\n                this._fileDoesNotExistExceptionSet.has(path)) {\n                return;\n            }\n            this._subject.next({ kind: 'create', path, content: content.generate() });\n        });\n        this._filesToUpdate.forEach((content, path) => {\n            this._subject.next({ kind: 'update', path, content: content.generate() });\n        });\n        this._subject.complete();\n        return (0, rxjs_1.of)(undefined);\n    }\n}\nexports.DryRunSink = DryRunSink;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}