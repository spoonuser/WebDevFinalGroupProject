{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _asyncToGenerator = require(\"/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ArchitectBaseCommandModule = void 0;\nconst architect_1 = require(\"@angular-devkit/architect\");\nconst node_1 = require(\"@angular-devkit/architect/node\");\nconst core_1 = require(\"@angular-devkit/core\");\nconst child_process_1 = require(\"child_process\");\nconst fs_1 = require(\"fs\");\nconst path_1 = require(\"path\");\nconst analytics_1 = require(\"../analytics/analytics\");\nconst analytics_parameters_1 = require(\"../analytics/analytics-parameters\");\nconst error_1 = require(\"../utilities/error\");\nconst prompt_1 = require(\"../utilities/prompt\");\nconst tty_1 = require(\"../utilities/tty\");\nconst command_module_1 = require(\"./command-module\");\nconst json_schema_1 = require(\"./utilities/json-schema\");\nclass ArchitectBaseCommandModule extends command_module_1.CommandModule {\n  constructor() {\n    super(...arguments);\n    this.scope = command_module_1.CommandScope.In;\n  }\n  runSingleTarget(target, options) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const architectHost = yield _this.getArchitectHost();\n      let builderName;\n      try {\n        builderName = yield architectHost.getBuilderNameForTarget(target);\n      } catch (e) {\n        (0, error_1.assertIsError)(e);\n        return _this.onMissingTarget(e.message);\n      }\n      const {\n        logger\n      } = _this.context;\n      const run = yield _this.getArchitect().scheduleTarget(target, options, {\n        logger\n      });\n      const analytics = (0, analytics_1.isPackageNameSafeForAnalytics)(builderName) ? yield _this.getAnalytics() : undefined;\n      let outputSubscription;\n      if (analytics) {\n        analytics.reportArchitectRunEvent({\n          [analytics_parameters_1.EventCustomDimension.BuilderTarget]: builderName\n        });\n        let firstRun = true;\n        outputSubscription = run.output.subscribe(({\n          stats\n        }) => {\n          const parameters = _this.builderStatsToAnalyticsParameters(stats, builderName);\n          if (!parameters) {\n            return;\n          }\n          if (firstRun) {\n            firstRun = false;\n            analytics.reportBuildRunEvent(parameters);\n          } else {\n            analytics.reportRebuildRunEvent(parameters);\n          }\n        });\n      }\n      try {\n        const {\n          error,\n          success\n        } = yield run.output.toPromise();\n        if (error) {\n          logger.error(error);\n        }\n        return success ? 0 : 1;\n      } finally {\n        yield run.stop();\n        outputSubscription === null || outputSubscription === void 0 ? void 0 : outputSubscription.unsubscribe();\n      }\n    })();\n  }\n  builderStatsToAnalyticsParameters(stats, builderName) {\n    if (!stats || typeof stats !== 'object' || !('durationInMs' in stats)) {\n      return undefined;\n    }\n    const {\n      optimization,\n      allChunksCount,\n      aot,\n      lazyChunksCount,\n      initialChunksCount,\n      durationInMs,\n      changedChunksCount,\n      cssSizeInBytes,\n      jsSizeInBytes,\n      ngComponentCount\n    } = stats;\n    return {\n      [analytics_parameters_1.EventCustomDimension.BuilderTarget]: builderName,\n      [analytics_parameters_1.EventCustomDimension.Aot]: aot,\n      [analytics_parameters_1.EventCustomDimension.Optimization]: optimization,\n      [analytics_parameters_1.EventCustomMetric.AllChunksCount]: allChunksCount,\n      [analytics_parameters_1.EventCustomMetric.LazyChunksCount]: lazyChunksCount,\n      [analytics_parameters_1.EventCustomMetric.InitialChunksCount]: initialChunksCount,\n      [analytics_parameters_1.EventCustomMetric.ChangedChunksCount]: changedChunksCount,\n      [analytics_parameters_1.EventCustomMetric.DurationInMs]: durationInMs,\n      [analytics_parameters_1.EventCustomMetric.JsSizeInBytes]: jsSizeInBytes,\n      [analytics_parameters_1.EventCustomMetric.CssSizeInBytes]: cssSizeInBytes,\n      [analytics_parameters_1.EventCustomMetric.NgComponentCount]: ngComponentCount\n    };\n  }\n  getArchitectHost() {\n    if (this._architectHost) {\n      return this._architectHost;\n    }\n    const workspace = this.getWorkspaceOrThrow();\n    return this._architectHost = new node_1.WorkspaceNodeModulesArchitectHost(workspace, workspace.basePath);\n  }\n  getArchitect() {\n    if (this._architect) {\n      return this._architect;\n    }\n    const registry = new core_1.json.schema.CoreSchemaRegistry();\n    registry.addPostTransform(core_1.json.schema.transforms.addUndefinedDefaults);\n    registry.useXDeprecatedProvider(msg => this.context.logger.warn(msg));\n    const architectHost = this.getArchitectHost();\n    return this._architect = new architect_1.Architect(architectHost, registry);\n  }\n  getArchitectTargetOptions(target) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const architectHost = _this2.getArchitectHost();\n      let builderConf;\n      try {\n        builderConf = yield architectHost.getBuilderNameForTarget(target);\n      } catch (_a) {\n        return [];\n      }\n      let builderDesc;\n      try {\n        builderDesc = yield architectHost.resolveBuilder(builderConf);\n      } catch (e) {\n        (0, error_1.assertIsError)(e);\n        if (e.code === 'MODULE_NOT_FOUND') {\n          _this2.warnOnMissingNodeModules();\n          throw new command_module_1.CommandModuleError(`Could not find the '${builderConf}' builder's node package.`);\n        }\n        throw e;\n      }\n      return (0, json_schema_1.parseJsonSchemaToOptions)(new core_1.json.schema.CoreSchemaRegistry(), builderDesc.optionSchema, true);\n    })();\n  }\n  warnOnMissingNodeModules() {\n    var _a;\n    const basePath = (_a = this.context.workspace) === null || _a === void 0 ? void 0 : _a.basePath;\n    if (!basePath) {\n      return;\n    }\n    // Check for a `node_modules` directory (npm, yarn non-PnP, etc.)\n    if ((0, fs_1.existsSync)((0, path_1.resolve)(basePath, 'node_modules'))) {\n      return;\n    }\n    // Check for yarn PnP files\n    if ((0, fs_1.existsSync)((0, path_1.resolve)(basePath, '.pnp.js')) || (0, fs_1.existsSync)((0, path_1.resolve)(basePath, '.pnp.cjs')) || (0, fs_1.existsSync)((0, path_1.resolve)(basePath, '.pnp.mjs'))) {\n      return;\n    }\n    this.context.logger.warn(`Node packages may not be installed. Try installing with '${this.context.packageManager.name} install'.`);\n  }\n  getArchitectTarget() {\n    return this.commandName;\n  }\n  onMissingTarget(defaultMessage) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        logger\n      } = _this3.context;\n      const choices = _this3.missingTargetChoices;\n      if (!(choices === null || choices === void 0 ? void 0 : choices.length)) {\n        logger.error(defaultMessage);\n        return 1;\n      }\n      const missingTargetMessage = `Cannot find \"${_this3.getArchitectTarget()}\" target for the specified project.\\n` + `You can add a package that implements these capabilities.\\n\\n` + `For example:\\n` + choices.map(({\n        name,\n        value\n      }) => `  ${name}: ng add ${value}`).join('\\n') + '\\n';\n      if ((0, tty_1.isTTY)()) {\n        // Use prompts to ask the user if they'd like to install a package.\n        logger.warn(missingTargetMessage);\n        const packageToInstall = yield _this3.getMissingTargetPackageToInstall(choices);\n        if (packageToInstall) {\n          // Example run: `ng add @angular-eslint/schematics`.\n          const binPath = (0, path_1.resolve)(__dirname, '../../bin/ng.js');\n          const {\n            error\n          } = (0, child_process_1.spawnSync)(process.execPath, [binPath, 'add', packageToInstall], {\n            stdio: 'inherit'\n          });\n          if (error) {\n            throw error;\n          }\n        }\n      } else {\n        // Non TTY display error message.\n        logger.error(missingTargetMessage);\n      }\n      return 1;\n    })();\n  }\n  getMissingTargetPackageToInstall(choices) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      if (choices.length === 1) {\n        // Single choice\n        const {\n          name,\n          value\n        } = choices[0];\n        if (yield (0, prompt_1.askConfirmation)(`Would you like to add ${name} now?`, true, false)) {\n          return value;\n        }\n        return null;\n      }\n      // Multiple choice\n      return (0, prompt_1.askQuestion)(`Would you like to add a package with \"${_this4.getArchitectTarget()}\" capabilities now?`, [{\n        name: 'No',\n        value: null\n      }, ...choices], 0, null);\n    })();\n  }\n}\nexports.ArchitectBaseCommandModule = ArchitectBaseCommandModule;","map":{"version":3,"names":["Object","defineProperty","exports","value","ArchitectBaseCommandModule","architect_1","require","node_1","core_1","child_process_1","fs_1","path_1","analytics_1","analytics_parameters_1","error_1","prompt_1","tty_1","command_module_1","json_schema_1","CommandModule","constructor","arguments","scope","CommandScope","In","runSingleTarget","target","options","architectHost","getArchitectHost","builderName","getBuilderNameForTarget","e","assertIsError","onMissingTarget","message","logger","context","run","getArchitect","scheduleTarget","analytics","isPackageNameSafeForAnalytics","getAnalytics","undefined","outputSubscription","reportArchitectRunEvent","EventCustomDimension","BuilderTarget","firstRun","output","subscribe","stats","parameters","builderStatsToAnalyticsParameters","reportBuildRunEvent","reportRebuildRunEvent","error","success","toPromise","stop","unsubscribe","optimization","allChunksCount","aot","lazyChunksCount","initialChunksCount","durationInMs","changedChunksCount","cssSizeInBytes","jsSizeInBytes","ngComponentCount","Aot","Optimization","EventCustomMetric","AllChunksCount","LazyChunksCount","InitialChunksCount","ChangedChunksCount","DurationInMs","JsSizeInBytes","CssSizeInBytes","NgComponentCount","_architectHost","workspace","getWorkspaceOrThrow","WorkspaceNodeModulesArchitectHost","basePath","_architect","registry","json","schema","CoreSchemaRegistry","addPostTransform","transforms","addUndefinedDefaults","useXDeprecatedProvider","msg","warn","Architect","getArchitectTargetOptions","builderConf","_a","builderDesc","resolveBuilder","code","warnOnMissingNodeModules","CommandModuleError","parseJsonSchemaToOptions","optionSchema","existsSync","resolve","packageManager","name","getArchitectTarget","commandName","defaultMessage","choices","missingTargetChoices","length","missingTargetMessage","map","join","isTTY","packageToInstall","getMissingTargetPackageToInstall","binPath","__dirname","spawnSync","process","execPath","stdio","askConfirmation","askQuestion"],"sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/@angular/cli/src/command-builder/architect-base-command-module.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ArchitectBaseCommandModule = void 0;\nconst architect_1 = require(\"@angular-devkit/architect\");\nconst node_1 = require(\"@angular-devkit/architect/node\");\nconst core_1 = require(\"@angular-devkit/core\");\nconst child_process_1 = require(\"child_process\");\nconst fs_1 = require(\"fs\");\nconst path_1 = require(\"path\");\nconst analytics_1 = require(\"../analytics/analytics\");\nconst analytics_parameters_1 = require(\"../analytics/analytics-parameters\");\nconst error_1 = require(\"../utilities/error\");\nconst prompt_1 = require(\"../utilities/prompt\");\nconst tty_1 = require(\"../utilities/tty\");\nconst command_module_1 = require(\"./command-module\");\nconst json_schema_1 = require(\"./utilities/json-schema\");\nclass ArchitectBaseCommandModule extends command_module_1.CommandModule {\n    constructor() {\n        super(...arguments);\n        this.scope = command_module_1.CommandScope.In;\n    }\n    async runSingleTarget(target, options) {\n        const architectHost = await this.getArchitectHost();\n        let builderName;\n        try {\n            builderName = await architectHost.getBuilderNameForTarget(target);\n        }\n        catch (e) {\n            (0, error_1.assertIsError)(e);\n            return this.onMissingTarget(e.message);\n        }\n        const { logger } = this.context;\n        const run = await this.getArchitect().scheduleTarget(target, options, {\n            logger,\n        });\n        const analytics = (0, analytics_1.isPackageNameSafeForAnalytics)(builderName)\n            ? await this.getAnalytics()\n            : undefined;\n        let outputSubscription;\n        if (analytics) {\n            analytics.reportArchitectRunEvent({\n                [analytics_parameters_1.EventCustomDimension.BuilderTarget]: builderName,\n            });\n            let firstRun = true;\n            outputSubscription = run.output.subscribe(({ stats }) => {\n                const parameters = this.builderStatsToAnalyticsParameters(stats, builderName);\n                if (!parameters) {\n                    return;\n                }\n                if (firstRun) {\n                    firstRun = false;\n                    analytics.reportBuildRunEvent(parameters);\n                }\n                else {\n                    analytics.reportRebuildRunEvent(parameters);\n                }\n            });\n        }\n        try {\n            const { error, success } = await run.output.toPromise();\n            if (error) {\n                logger.error(error);\n            }\n            return success ? 0 : 1;\n        }\n        finally {\n            await run.stop();\n            outputSubscription === null || outputSubscription === void 0 ? void 0 : outputSubscription.unsubscribe();\n        }\n    }\n    builderStatsToAnalyticsParameters(stats, builderName) {\n        if (!stats || typeof stats !== 'object' || !('durationInMs' in stats)) {\n            return undefined;\n        }\n        const { optimization, allChunksCount, aot, lazyChunksCount, initialChunksCount, durationInMs, changedChunksCount, cssSizeInBytes, jsSizeInBytes, ngComponentCount, } = stats;\n        return {\n            [analytics_parameters_1.EventCustomDimension.BuilderTarget]: builderName,\n            [analytics_parameters_1.EventCustomDimension.Aot]: aot,\n            [analytics_parameters_1.EventCustomDimension.Optimization]: optimization,\n            [analytics_parameters_1.EventCustomMetric.AllChunksCount]: allChunksCount,\n            [analytics_parameters_1.EventCustomMetric.LazyChunksCount]: lazyChunksCount,\n            [analytics_parameters_1.EventCustomMetric.InitialChunksCount]: initialChunksCount,\n            [analytics_parameters_1.EventCustomMetric.ChangedChunksCount]: changedChunksCount,\n            [analytics_parameters_1.EventCustomMetric.DurationInMs]: durationInMs,\n            [analytics_parameters_1.EventCustomMetric.JsSizeInBytes]: jsSizeInBytes,\n            [analytics_parameters_1.EventCustomMetric.CssSizeInBytes]: cssSizeInBytes,\n            [analytics_parameters_1.EventCustomMetric.NgComponentCount]: ngComponentCount,\n        };\n    }\n    getArchitectHost() {\n        if (this._architectHost) {\n            return this._architectHost;\n        }\n        const workspace = this.getWorkspaceOrThrow();\n        return (this._architectHost = new node_1.WorkspaceNodeModulesArchitectHost(workspace, workspace.basePath));\n    }\n    getArchitect() {\n        if (this._architect) {\n            return this._architect;\n        }\n        const registry = new core_1.json.schema.CoreSchemaRegistry();\n        registry.addPostTransform(core_1.json.schema.transforms.addUndefinedDefaults);\n        registry.useXDeprecatedProvider((msg) => this.context.logger.warn(msg));\n        const architectHost = this.getArchitectHost();\n        return (this._architect = new architect_1.Architect(architectHost, registry));\n    }\n    async getArchitectTargetOptions(target) {\n        const architectHost = this.getArchitectHost();\n        let builderConf;\n        try {\n            builderConf = await architectHost.getBuilderNameForTarget(target);\n        }\n        catch (_a) {\n            return [];\n        }\n        let builderDesc;\n        try {\n            builderDesc = await architectHost.resolveBuilder(builderConf);\n        }\n        catch (e) {\n            (0, error_1.assertIsError)(e);\n            if (e.code === 'MODULE_NOT_FOUND') {\n                this.warnOnMissingNodeModules();\n                throw new command_module_1.CommandModuleError(`Could not find the '${builderConf}' builder's node package.`);\n            }\n            throw e;\n        }\n        return (0, json_schema_1.parseJsonSchemaToOptions)(new core_1.json.schema.CoreSchemaRegistry(), builderDesc.optionSchema, true);\n    }\n    warnOnMissingNodeModules() {\n        var _a;\n        const basePath = (_a = this.context.workspace) === null || _a === void 0 ? void 0 : _a.basePath;\n        if (!basePath) {\n            return;\n        }\n        // Check for a `node_modules` directory (npm, yarn non-PnP, etc.)\n        if ((0, fs_1.existsSync)((0, path_1.resolve)(basePath, 'node_modules'))) {\n            return;\n        }\n        // Check for yarn PnP files\n        if ((0, fs_1.existsSync)((0, path_1.resolve)(basePath, '.pnp.js')) ||\n            (0, fs_1.existsSync)((0, path_1.resolve)(basePath, '.pnp.cjs')) ||\n            (0, fs_1.existsSync)((0, path_1.resolve)(basePath, '.pnp.mjs'))) {\n            return;\n        }\n        this.context.logger.warn(`Node packages may not be installed. Try installing with '${this.context.packageManager.name} install'.`);\n    }\n    getArchitectTarget() {\n        return this.commandName;\n    }\n    async onMissingTarget(defaultMessage) {\n        const { logger } = this.context;\n        const choices = this.missingTargetChoices;\n        if (!(choices === null || choices === void 0 ? void 0 : choices.length)) {\n            logger.error(defaultMessage);\n            return 1;\n        }\n        const missingTargetMessage = `Cannot find \"${this.getArchitectTarget()}\" target for the specified project.\\n` +\n            `You can add a package that implements these capabilities.\\n\\n` +\n            `For example:\\n` +\n            choices.map(({ name, value }) => `  ${name}: ng add ${value}`).join('\\n') +\n            '\\n';\n        if ((0, tty_1.isTTY)()) {\n            // Use prompts to ask the user if they'd like to install a package.\n            logger.warn(missingTargetMessage);\n            const packageToInstall = await this.getMissingTargetPackageToInstall(choices);\n            if (packageToInstall) {\n                // Example run: `ng add @angular-eslint/schematics`.\n                const binPath = (0, path_1.resolve)(__dirname, '../../bin/ng.js');\n                const { error } = (0, child_process_1.spawnSync)(process.execPath, [binPath, 'add', packageToInstall], {\n                    stdio: 'inherit',\n                });\n                if (error) {\n                    throw error;\n                }\n            }\n        }\n        else {\n            // Non TTY display error message.\n            logger.error(missingTargetMessage);\n        }\n        return 1;\n    }\n    async getMissingTargetPackageToInstall(choices) {\n        if (choices.length === 1) {\n            // Single choice\n            const { name, value } = choices[0];\n            if (await (0, prompt_1.askConfirmation)(`Would you like to add ${name} now?`, true, false)) {\n                return value;\n            }\n            return null;\n        }\n        // Multiple choice\n        return (0, prompt_1.askQuestion)(`Would you like to add a package with \"${this.getArchitectTarget()}\" capabilities now?`, [\n            {\n                name: 'No',\n                value: null,\n            },\n            ...choices,\n        ], 0, null);\n    }\n}\nexports.ArchitectBaseCommandModule = ArchitectBaseCommandModule;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}