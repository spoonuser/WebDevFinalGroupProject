{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.test = void 0;\nconst path_1 = require(\"../path\");\nconst buffer_1 = require(\"./buffer\");\nconst memory_1 = require(\"./memory\");\nconst sync_1 = require(\"./sync\");\n// eslint-disable-next-line @typescript-eslint/no-namespace\nvar test;\n(function (test) {\n  class TestHost extends memory_1.SimpleMemoryHost {\n    constructor(map = {}) {\n      super();\n      this._records = [];\n      this._sync = null;\n      for (const filePath of Object.getOwnPropertyNames(map)) {\n        this._write((0, path_1.normalize)(filePath), (0, buffer_1.stringToFileBuffer)(map[filePath]));\n      }\n    }\n    get records() {\n      return [...this._records];\n    }\n    clearRecords() {\n      this._records = [];\n    }\n    get files() {\n      const sync = this.sync;\n      function _visit(p) {\n        return sync.list(p).map(fragment => (0, path_1.join)(p, fragment)).reduce((files, path) => {\n          if (sync.isDirectory(path)) {\n            return files.concat(_visit(path));\n          } else {\n            return files.concat(path);\n          }\n        }, []);\n      }\n      return _visit((0, path_1.normalize)('/'));\n    }\n    get sync() {\n      if (!this._sync) {\n        this._sync = new sync_1.SyncDelegateHost(this);\n      }\n      return this._sync;\n    }\n    clone() {\n      const newHost = new TestHost();\n      newHost._cache = new Map(this._cache);\n      return newHost;\n    }\n    // Override parents functions to keep a record of all operators that were done.\n    _write(path, content) {\n      this._records.push({\n        kind: 'write',\n        path\n      });\n      return super._write(path, content);\n    }\n    _read(path) {\n      this._records.push({\n        kind: 'read',\n        path\n      });\n      return super._read(path);\n    }\n    _delete(path) {\n      this._records.push({\n        kind: 'delete',\n        path\n      });\n      return super._delete(path);\n    }\n    _rename(from, to) {\n      this._records.push({\n        kind: 'rename',\n        from,\n        to\n      });\n      return super._rename(from, to);\n    }\n    _list(path) {\n      this._records.push({\n        kind: 'list',\n        path\n      });\n      return super._list(path);\n    }\n    _exists(path) {\n      this._records.push({\n        kind: 'exists',\n        path\n      });\n      return super._exists(path);\n    }\n    _isDirectory(path) {\n      this._records.push({\n        kind: 'isDirectory',\n        path\n      });\n      return super._isDirectory(path);\n    }\n    _isFile(path) {\n      this._records.push({\n        kind: 'isFile',\n        path\n      });\n      return super._isFile(path);\n    }\n    _stat(path) {\n      this._records.push({\n        kind: 'stat',\n        path\n      });\n      return super._stat(path);\n    }\n    _watch(path, options) {\n      this._records.push({\n        kind: 'watch',\n        path\n      });\n      return super._watch(path, options);\n    }\n    $write(path, content) {\n      return super._write((0, path_1.normalize)(path), (0, buffer_1.stringToFileBuffer)(content));\n    }\n    $read(path) {\n      return (0, buffer_1.fileBufferToString)(super._read((0, path_1.normalize)(path)));\n    }\n    $list(path) {\n      return super._list((0, path_1.normalize)(path));\n    }\n    $exists(path) {\n      return super._exists((0, path_1.normalize)(path));\n    }\n    $isDirectory(path) {\n      return super._isDirectory((0, path_1.normalize)(path));\n    }\n    $isFile(path) {\n      return super._isFile((0, path_1.normalize)(path));\n    }\n  }\n  test.TestHost = TestHost;\n})(test = exports.test || (exports.test = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","test","path_1","require","buffer_1","memory_1","sync_1","TestHost","SimpleMemoryHost","constructor","map","_records","_sync","filePath","getOwnPropertyNames","_write","normalize","stringToFileBuffer","records","clearRecords","files","sync","_visit","p","list","fragment","join","reduce","path","isDirectory","concat","SyncDelegateHost","clone","newHost","_cache","Map","content","push","kind","_read","_delete","_rename","from","to","_list","_exists","_isDirectory","_isFile","_stat","_watch","options","$write","$read","fileBufferToString","$list","$exists","$isDirectory","$isFile"],"sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/@angular/cli/node_modules/@angular-devkit/core/src/virtual-fs/host/test.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.test = void 0;\nconst path_1 = require(\"../path\");\nconst buffer_1 = require(\"./buffer\");\nconst memory_1 = require(\"./memory\");\nconst sync_1 = require(\"./sync\");\n// eslint-disable-next-line @typescript-eslint/no-namespace\nvar test;\n(function (test) {\n    class TestHost extends memory_1.SimpleMemoryHost {\n        constructor(map = {}) {\n            super();\n            this._records = [];\n            this._sync = null;\n            for (const filePath of Object.getOwnPropertyNames(map)) {\n                this._write((0, path_1.normalize)(filePath), (0, buffer_1.stringToFileBuffer)(map[filePath]));\n            }\n        }\n        get records() {\n            return [...this._records];\n        }\n        clearRecords() {\n            this._records = [];\n        }\n        get files() {\n            const sync = this.sync;\n            function _visit(p) {\n                return sync\n                    .list(p)\n                    .map((fragment) => (0, path_1.join)(p, fragment))\n                    .reduce((files, path) => {\n                    if (sync.isDirectory(path)) {\n                        return files.concat(_visit(path));\n                    }\n                    else {\n                        return files.concat(path);\n                    }\n                }, []);\n            }\n            return _visit((0, path_1.normalize)('/'));\n        }\n        get sync() {\n            if (!this._sync) {\n                this._sync = new sync_1.SyncDelegateHost(this);\n            }\n            return this._sync;\n        }\n        clone() {\n            const newHost = new TestHost();\n            newHost._cache = new Map(this._cache);\n            return newHost;\n        }\n        // Override parents functions to keep a record of all operators that were done.\n        _write(path, content) {\n            this._records.push({ kind: 'write', path });\n            return super._write(path, content);\n        }\n        _read(path) {\n            this._records.push({ kind: 'read', path });\n            return super._read(path);\n        }\n        _delete(path) {\n            this._records.push({ kind: 'delete', path });\n            return super._delete(path);\n        }\n        _rename(from, to) {\n            this._records.push({ kind: 'rename', from, to });\n            return super._rename(from, to);\n        }\n        _list(path) {\n            this._records.push({ kind: 'list', path });\n            return super._list(path);\n        }\n        _exists(path) {\n            this._records.push({ kind: 'exists', path });\n            return super._exists(path);\n        }\n        _isDirectory(path) {\n            this._records.push({ kind: 'isDirectory', path });\n            return super._isDirectory(path);\n        }\n        _isFile(path) {\n            this._records.push({ kind: 'isFile', path });\n            return super._isFile(path);\n        }\n        _stat(path) {\n            this._records.push({ kind: 'stat', path });\n            return super._stat(path);\n        }\n        _watch(path, options) {\n            this._records.push({ kind: 'watch', path });\n            return super._watch(path, options);\n        }\n        $write(path, content) {\n            return super._write((0, path_1.normalize)(path), (0, buffer_1.stringToFileBuffer)(content));\n        }\n        $read(path) {\n            return (0, buffer_1.fileBufferToString)(super._read((0, path_1.normalize)(path)));\n        }\n        $list(path) {\n            return super._list((0, path_1.normalize)(path));\n        }\n        $exists(path) {\n            return super._exists((0, path_1.normalize)(path));\n        }\n        $isDirectory(path) {\n            return super._isDirectory((0, path_1.normalize)(path));\n        }\n        $isFile(path) {\n            return super._isFile((0, path_1.normalize)(path));\n        }\n    }\n    test.TestHost = TestHost;\n})(test = exports.test || (exports.test = {}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}