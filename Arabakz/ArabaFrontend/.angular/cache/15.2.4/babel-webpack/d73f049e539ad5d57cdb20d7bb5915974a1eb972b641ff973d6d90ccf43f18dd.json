{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createDispatcher = void 0;\nconst api_1 = require(\"./api\");\nconst exception_1 = require(\"./exception\");\n/**\n * OnReady a dispatcher that can dispatch to a sub job, depending on conditions.\n * @param options\n */\nfunction createDispatcher(options = {}) {\n  let defaultDelegate = null;\n  const conditionalDelegateList = [];\n  const job = Object.assign((argument, context) => {\n    const maybeDelegate = conditionalDelegateList.find(([predicate]) => predicate(argument));\n    let delegate = null;\n    if (maybeDelegate) {\n      delegate = context.scheduler.schedule(maybeDelegate[1], argument);\n    } else if (defaultDelegate) {\n      delegate = context.scheduler.schedule(defaultDelegate, argument);\n    } else {\n      throw new exception_1.JobDoesNotExistException('<null>');\n    }\n    context.inboundBus.subscribe(delegate.inboundBus);\n    return delegate.outboundBus;\n  }, {\n    jobDescription: options\n  });\n  return Object.assign(job, {\n    setDefaultJob(name) {\n      if ((0, api_1.isJobHandler)(name)) {\n        name = name.jobDescription.name === undefined ? null : name.jobDescription.name;\n      }\n      defaultDelegate = name;\n    },\n    addConditionalJob(predicate, name) {\n      conditionalDelegateList.push([predicate, name]);\n    }\n    // TODO: Remove return-only generic from createDispatcher() API.\n  });\n}\n\nexports.createDispatcher = createDispatcher;","map":{"version":3,"names":["Object","defineProperty","exports","value","createDispatcher","api_1","require","exception_1","options","defaultDelegate","conditionalDelegateList","job","assign","argument","context","maybeDelegate","find","predicate","delegate","scheduler","schedule","JobDoesNotExistException","inboundBus","subscribe","outboundBus","jobDescription","setDefaultJob","name","isJobHandler","undefined","addConditionalJob","push"],"sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/@angular/cli/node_modules/@angular-devkit/architect/src/jobs/dispatcher.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDispatcher = void 0;\nconst api_1 = require(\"./api\");\nconst exception_1 = require(\"./exception\");\n/**\n * OnReady a dispatcher that can dispatch to a sub job, depending on conditions.\n * @param options\n */\nfunction createDispatcher(options = {}) {\n    let defaultDelegate = null;\n    const conditionalDelegateList = [];\n    const job = Object.assign((argument, context) => {\n        const maybeDelegate = conditionalDelegateList.find(([predicate]) => predicate(argument));\n        let delegate = null;\n        if (maybeDelegate) {\n            delegate = context.scheduler.schedule(maybeDelegate[1], argument);\n        }\n        else if (defaultDelegate) {\n            delegate = context.scheduler.schedule(defaultDelegate, argument);\n        }\n        else {\n            throw new exception_1.JobDoesNotExistException('<null>');\n        }\n        context.inboundBus.subscribe(delegate.inboundBus);\n        return delegate.outboundBus;\n    }, {\n        jobDescription: options,\n    });\n    return Object.assign(job, {\n        setDefaultJob(name) {\n            if ((0, api_1.isJobHandler)(name)) {\n                name = name.jobDescription.name === undefined ? null : name.jobDescription.name;\n            }\n            defaultDelegate = name;\n        },\n        addConditionalJob(predicate, name) {\n            conditionalDelegateList.push([predicate, name]);\n        },\n        // TODO: Remove return-only generic from createDispatcher() API.\n    });\n}\nexports.createDispatcher = createDispatcher;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,gBAAgB,GAAG,KAAK,CAAC;AACjC,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;AAC9B,MAAMC,WAAW,GAAGD,OAAO,CAAC,aAAa,CAAC;AAC1C;AACA;AACA;AACA;AACA,SAASF,gBAAgB,CAACI,OAAO,GAAG,CAAC,CAAC,EAAE;EACpC,IAAIC,eAAe,GAAG,IAAI;EAC1B,MAAMC,uBAAuB,GAAG,EAAE;EAClC,MAAMC,GAAG,GAAGX,MAAM,CAACY,MAAM,CAAC,CAACC,QAAQ,EAAEC,OAAO,KAAK;IAC7C,MAAMC,aAAa,GAAGL,uBAAuB,CAACM,IAAI,CAAC,CAAC,CAACC,SAAS,CAAC,KAAKA,SAAS,CAACJ,QAAQ,CAAC,CAAC;IACxF,IAAIK,QAAQ,GAAG,IAAI;IACnB,IAAIH,aAAa,EAAE;MACfG,QAAQ,GAAGJ,OAAO,CAACK,SAAS,CAACC,QAAQ,CAACL,aAAa,CAAC,CAAC,CAAC,EAAEF,QAAQ,CAAC;IACrE,CAAC,MACI,IAAIJ,eAAe,EAAE;MACtBS,QAAQ,GAAGJ,OAAO,CAACK,SAAS,CAACC,QAAQ,CAACX,eAAe,EAAEI,QAAQ,CAAC;IACpE,CAAC,MACI;MACD,MAAM,IAAIN,WAAW,CAACc,wBAAwB,CAAC,QAAQ,CAAC;IAC5D;IACAP,OAAO,CAACQ,UAAU,CAACC,SAAS,CAACL,QAAQ,CAACI,UAAU,CAAC;IACjD,OAAOJ,QAAQ,CAACM,WAAW;EAC/B,CAAC,EAAE;IACCC,cAAc,EAAEjB;EACpB,CAAC,CAAC;EACF,OAAOR,MAAM,CAACY,MAAM,CAACD,GAAG,EAAE;IACtBe,aAAa,CAACC,IAAI,EAAE;MAChB,IAAI,CAAC,CAAC,EAAEtB,KAAK,CAACuB,YAAY,EAAED,IAAI,CAAC,EAAE;QAC/BA,IAAI,GAAGA,IAAI,CAACF,cAAc,CAACE,IAAI,KAAKE,SAAS,GAAG,IAAI,GAAGF,IAAI,CAACF,cAAc,CAACE,IAAI;MACnF;MACAlB,eAAe,GAAGkB,IAAI;IAC1B,CAAC;IACDG,iBAAiB,CAACb,SAAS,EAAEU,IAAI,EAAE;MAC/BjB,uBAAuB,CAACqB,IAAI,CAAC,CAACd,SAAS,EAAEU,IAAI,CAAC,CAAC;IACnD;IACA;EACJ,CAAC,CAAC;AACN;;AACAzB,OAAO,CAACE,gBAAgB,GAAGA,gBAAgB"},"metadata":{},"sourceType":"script","externalDependencies":[]}