{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isContentAction = exports.ActionList = exports.UnknownActionException = void 0;\nconst core_1 = require(\"@angular-devkit/core\");\nclass UnknownActionException extends core_1.BaseException {\n  constructor(action) {\n    super(`Unknown action: \"${action.kind}\".`);\n  }\n}\nexports.UnknownActionException = UnknownActionException;\nlet _id = 1;\nclass ActionList {\n  constructor() {\n    this._actions = [];\n  }\n  _action(action) {\n    var _a, _b;\n    this._actions.push({\n      ...action,\n      id: _id++,\n      parent: (_b = (_a = this._actions[this._actions.length - 1]) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : 0\n    });\n  }\n  create(path, content) {\n    this._action({\n      kind: 'c',\n      path,\n      content\n    });\n  }\n  overwrite(path, content) {\n    this._action({\n      kind: 'o',\n      path,\n      content\n    });\n  }\n  rename(path, to) {\n    this._action({\n      kind: 'r',\n      path,\n      to\n    });\n  }\n  delete(path) {\n    this._action({\n      kind: 'd',\n      path\n    });\n  }\n  optimize() {\n    const toCreate = new Map();\n    const toRename = new Map();\n    const toOverwrite = new Map();\n    const toDelete = new Set();\n    for (const action of this._actions) {\n      switch (action.kind) {\n        case 'c':\n          toCreate.set(action.path, action.content);\n          break;\n        case 'o':\n          if (toCreate.has(action.path)) {\n            toCreate.set(action.path, action.content);\n          } else {\n            toOverwrite.set(action.path, action.content);\n          }\n          break;\n        case 'd':\n          toDelete.add(action.path);\n          break;\n        case 'r':\n          const maybeCreate = toCreate.get(action.path);\n          const maybeOverwrite = toOverwrite.get(action.path);\n          if (maybeCreate) {\n            toCreate.delete(action.path);\n            toCreate.set(action.to, maybeCreate);\n          }\n          if (maybeOverwrite) {\n            toOverwrite.delete(action.path);\n            toOverwrite.set(action.to, maybeOverwrite);\n          }\n          let maybeRename = undefined;\n          for (const [from, to] of toRename.entries()) {\n            if (to == action.path) {\n              maybeRename = from;\n              break;\n            }\n          }\n          if (maybeRename) {\n            toRename.set(maybeRename, action.to);\n          }\n          if (!maybeCreate && !maybeOverwrite && !maybeRename) {\n            toRename.set(action.path, action.to);\n          }\n          break;\n      }\n    }\n    this._actions = [];\n    toDelete.forEach(x => {\n      this.delete(x);\n    });\n    toRename.forEach((to, from) => {\n      this.rename(from, to);\n    });\n    toCreate.forEach((content, path) => {\n      this.create(path, content);\n    });\n    toOverwrite.forEach((content, path) => {\n      this.overwrite(path, content);\n    });\n  }\n  push(action) {\n    this._actions.push(action);\n  }\n  get(i) {\n    return this._actions[i];\n  }\n  has(action) {\n    for (let i = 0; i < this._actions.length; i++) {\n      const a = this._actions[i];\n      if (a.id == action.id) {\n        return true;\n      }\n      if (a.id > action.id) {\n        return false;\n      }\n    }\n    return false;\n  }\n  find(predicate) {\n    return this._actions.find(predicate) || null;\n  }\n  forEach(fn, thisArg) {\n    this._actions.forEach(fn, thisArg);\n  }\n  get length() {\n    return this._actions.length;\n  }\n  [Symbol.iterator]() {\n    return this._actions[Symbol.iterator]();\n  }\n}\nexports.ActionList = ActionList;\nfunction isContentAction(action) {\n  return action.kind == 'c' || action.kind == 'o';\n}\nexports.isContentAction = isContentAction;","map":{"version":3,"names":["Object","defineProperty","exports","value","isContentAction","ActionList","UnknownActionException","core_1","require","BaseException","constructor","action","kind","_id","_actions","_action","_a","_b","push","id","parent","length","create","path","content","overwrite","rename","to","delete","optimize","toCreate","Map","toRename","toOverwrite","toDelete","Set","set","has","add","maybeCreate","get","maybeOverwrite","maybeRename","undefined","from","entries","forEach","x","i","a","find","predicate","fn","thisArg","Symbol","iterator"],"sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/@angular-devkit/schematics/src/tree/action.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isContentAction = exports.ActionList = exports.UnknownActionException = void 0;\nconst core_1 = require(\"@angular-devkit/core\");\nclass UnknownActionException extends core_1.BaseException {\n    constructor(action) {\n        super(`Unknown action: \"${action.kind}\".`);\n    }\n}\nexports.UnknownActionException = UnknownActionException;\nlet _id = 1;\nclass ActionList {\n    constructor() {\n        this._actions = [];\n    }\n    _action(action) {\n        var _a, _b;\n        this._actions.push({\n            ...action,\n            id: _id++,\n            parent: (_b = (_a = this._actions[this._actions.length - 1]) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : 0,\n        });\n    }\n    create(path, content) {\n        this._action({ kind: 'c', path, content });\n    }\n    overwrite(path, content) {\n        this._action({ kind: 'o', path, content });\n    }\n    rename(path, to) {\n        this._action({ kind: 'r', path, to });\n    }\n    delete(path) {\n        this._action({ kind: 'd', path });\n    }\n    optimize() {\n        const toCreate = new Map();\n        const toRename = new Map();\n        const toOverwrite = new Map();\n        const toDelete = new Set();\n        for (const action of this._actions) {\n            switch (action.kind) {\n                case 'c':\n                    toCreate.set(action.path, action.content);\n                    break;\n                case 'o':\n                    if (toCreate.has(action.path)) {\n                        toCreate.set(action.path, action.content);\n                    }\n                    else {\n                        toOverwrite.set(action.path, action.content);\n                    }\n                    break;\n                case 'd':\n                    toDelete.add(action.path);\n                    break;\n                case 'r':\n                    const maybeCreate = toCreate.get(action.path);\n                    const maybeOverwrite = toOverwrite.get(action.path);\n                    if (maybeCreate) {\n                        toCreate.delete(action.path);\n                        toCreate.set(action.to, maybeCreate);\n                    }\n                    if (maybeOverwrite) {\n                        toOverwrite.delete(action.path);\n                        toOverwrite.set(action.to, maybeOverwrite);\n                    }\n                    let maybeRename = undefined;\n                    for (const [from, to] of toRename.entries()) {\n                        if (to == action.path) {\n                            maybeRename = from;\n                            break;\n                        }\n                    }\n                    if (maybeRename) {\n                        toRename.set(maybeRename, action.to);\n                    }\n                    if (!maybeCreate && !maybeOverwrite && !maybeRename) {\n                        toRename.set(action.path, action.to);\n                    }\n                    break;\n            }\n        }\n        this._actions = [];\n        toDelete.forEach((x) => {\n            this.delete(x);\n        });\n        toRename.forEach((to, from) => {\n            this.rename(from, to);\n        });\n        toCreate.forEach((content, path) => {\n            this.create(path, content);\n        });\n        toOverwrite.forEach((content, path) => {\n            this.overwrite(path, content);\n        });\n    }\n    push(action) {\n        this._actions.push(action);\n    }\n    get(i) {\n        return this._actions[i];\n    }\n    has(action) {\n        for (let i = 0; i < this._actions.length; i++) {\n            const a = this._actions[i];\n            if (a.id == action.id) {\n                return true;\n            }\n            if (a.id > action.id) {\n                return false;\n            }\n        }\n        return false;\n    }\n    find(predicate) {\n        return this._actions.find(predicate) || null;\n    }\n    forEach(fn, thisArg) {\n        this._actions.forEach(fn, thisArg);\n    }\n    get length() {\n        return this._actions.length;\n    }\n    [Symbol.iterator]() {\n        return this._actions[Symbol.iterator]();\n    }\n}\nexports.ActionList = ActionList;\nfunction isContentAction(action) {\n    return action.kind == 'c' || action.kind == 'o';\n}\nexports.isContentAction = isContentAction;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}