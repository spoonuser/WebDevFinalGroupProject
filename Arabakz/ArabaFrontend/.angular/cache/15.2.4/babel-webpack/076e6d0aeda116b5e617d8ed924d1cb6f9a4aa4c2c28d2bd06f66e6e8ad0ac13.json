{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addUndefinedDefaults = void 0;\nconst utils_1 = require(\"../utils\");\nconst utility_1 = require(\"./utility\");\nfunction addUndefinedDefaults(value, _pointer, schema) {\n  if (typeof schema === 'boolean' || schema === undefined) {\n    return value;\n  }\n  value !== null && value !== void 0 ? value : value = schema.default;\n  const types = (0, utility_1.getTypesOfSchema)(schema);\n  if (types.size === 0) {\n    return value;\n  }\n  let type;\n  if (types.size === 1) {\n    // only one potential type\n    type = Array.from(types)[0];\n  } else if (types.size === 2 && types.has('array') && types.has('object')) {\n    // need to create one of them and array is simpler\n    type = 'array';\n  } else if (schema.properties && types.has('object')) {\n    // assume object\n    type = 'object';\n  } else if (schema.items && types.has('array')) {\n    // assume array\n    type = 'array';\n  } else {\n    // anything else needs to be checked by the consumer anyway\n    return value;\n  }\n  if (type === 'array') {\n    return value == undefined ? [] : value;\n  }\n  if (type === 'object') {\n    let newValue;\n    if (value == undefined) {\n      newValue = {};\n    } else if ((0, utils_1.isJsonObject)(value)) {\n      newValue = value;\n    } else {\n      return value;\n    }\n    if (!(0, utils_1.isJsonObject)(schema.properties)) {\n      return newValue;\n    }\n    for (const [propName, schemaObject] of Object.entries(schema.properties)) {\n      if (propName === '$schema' || !(0, utils_1.isJsonObject)(schemaObject)) {\n        continue;\n      }\n      const value = newValue[propName];\n      if (value === undefined) {\n        newValue[propName] = schemaObject.default;\n      } else if ((0, utils_1.isJsonObject)(value)) {\n        // Basic support for oneOf and anyOf.\n        const propertySchemas = schemaObject.oneOf || schemaObject.anyOf;\n        const allProperties = Object.keys(value);\n        // Locate a schema which declares all the properties that the object contains.\n        const adjustedSchema = (0, utils_1.isJsonArray)(propertySchemas) && propertySchemas.find(s => {\n          if (!(0, utils_1.isJsonObject)(s)) {\n            return false;\n          }\n          const schemaType = (0, utility_1.getTypesOfSchema)(s);\n          if (schemaType.size === 1 && schemaType.has('object') && (0, utils_1.isJsonObject)(s.properties)) {\n            const properties = Object.keys(s.properties);\n            return allProperties.every(key => properties.includes(key));\n          }\n          return false;\n        });\n        if (adjustedSchema && (0, utils_1.isJsonObject)(adjustedSchema)) {\n          newValue[propName] = addUndefinedDefaults(value, _pointer, adjustedSchema);\n        }\n      }\n    }\n    return newValue;\n  }\n  return value;\n}\nexports.addUndefinedDefaults = addUndefinedDefaults;","map":{"version":3,"names":["Object","defineProperty","exports","value","addUndefinedDefaults","utils_1","require","utility_1","_pointer","schema","undefined","default","types","getTypesOfSchema","size","type","Array","from","has","properties","items","newValue","isJsonObject","propName","schemaObject","entries","propertySchemas","oneOf","anyOf","allProperties","keys","adjustedSchema","isJsonArray","find","s","schemaType","every","key","includes"],"sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/@angular/cli/node_modules/@angular-devkit/core/src/json/schema/transforms.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addUndefinedDefaults = void 0;\nconst utils_1 = require(\"../utils\");\nconst utility_1 = require(\"./utility\");\nfunction addUndefinedDefaults(value, _pointer, schema) {\n    if (typeof schema === 'boolean' || schema === undefined) {\n        return value;\n    }\n    value !== null && value !== void 0 ? value : (value = schema.default);\n    const types = (0, utility_1.getTypesOfSchema)(schema);\n    if (types.size === 0) {\n        return value;\n    }\n    let type;\n    if (types.size === 1) {\n        // only one potential type\n        type = Array.from(types)[0];\n    }\n    else if (types.size === 2 && types.has('array') && types.has('object')) {\n        // need to create one of them and array is simpler\n        type = 'array';\n    }\n    else if (schema.properties && types.has('object')) {\n        // assume object\n        type = 'object';\n    }\n    else if (schema.items && types.has('array')) {\n        // assume array\n        type = 'array';\n    }\n    else {\n        // anything else needs to be checked by the consumer anyway\n        return value;\n    }\n    if (type === 'array') {\n        return value == undefined ? [] : value;\n    }\n    if (type === 'object') {\n        let newValue;\n        if (value == undefined) {\n            newValue = {};\n        }\n        else if ((0, utils_1.isJsonObject)(value)) {\n            newValue = value;\n        }\n        else {\n            return value;\n        }\n        if (!(0, utils_1.isJsonObject)(schema.properties)) {\n            return newValue;\n        }\n        for (const [propName, schemaObject] of Object.entries(schema.properties)) {\n            if (propName === '$schema' || !(0, utils_1.isJsonObject)(schemaObject)) {\n                continue;\n            }\n            const value = newValue[propName];\n            if (value === undefined) {\n                newValue[propName] = schemaObject.default;\n            }\n            else if ((0, utils_1.isJsonObject)(value)) {\n                // Basic support for oneOf and anyOf.\n                const propertySchemas = schemaObject.oneOf || schemaObject.anyOf;\n                const allProperties = Object.keys(value);\n                // Locate a schema which declares all the properties that the object contains.\n                const adjustedSchema = (0, utils_1.isJsonArray)(propertySchemas) &&\n                    propertySchemas.find((s) => {\n                        if (!(0, utils_1.isJsonObject)(s)) {\n                            return false;\n                        }\n                        const schemaType = (0, utility_1.getTypesOfSchema)(s);\n                        if (schemaType.size === 1 && schemaType.has('object') && (0, utils_1.isJsonObject)(s.properties)) {\n                            const properties = Object.keys(s.properties);\n                            return allProperties.every((key) => properties.includes(key));\n                        }\n                        return false;\n                    });\n                if (adjustedSchema && (0, utils_1.isJsonObject)(adjustedSchema)) {\n                    newValue[propName] = addUndefinedDefaults(value, _pointer, adjustedSchema);\n                }\n            }\n        }\n        return newValue;\n    }\n    return value;\n}\nexports.addUndefinedDefaults = addUndefinedDefaults;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}