{"ast":null,"code":"/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nconst util = require(\"./util\");\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  const lineA = mappingA.generatedLine;\n  const lineB = mappingB.generatedLine;\n  const columnA = mappingA.generatedColumn;\n  const columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA || util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a negligible overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nclass MappingList {\n  constructor() {\n    this._array = [];\n    this._sorted = true;\n    // Serves as infimum\n    this._last = {\n      generatedLine: -1,\n      generatedColumn: 0\n    };\n  }\n\n  /**\n   * Iterate through internal items. This method takes the same arguments that\n   * `Array.prototype.forEach` takes.\n   *\n   * NOTE: The order of the mappings is NOT guaranteed.\n   */\n  unsortedForEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  }\n\n  /**\n   * Add the given source mapping.\n   *\n   * @param Object aMapping\n   */\n  add(aMapping) {\n    if (generatedPositionAfter(this._last, aMapping)) {\n      this._last = aMapping;\n      this._array.push(aMapping);\n    } else {\n      this._sorted = false;\n      this._array.push(aMapping);\n    }\n  }\n\n  /**\n   * Returns the flat, sorted array of mappings. The mappings are sorted by\n   * generated position.\n   *\n   * WARNING: This method returns internal data without copying, for\n   * performance. The return value must NOT be mutated, and should be treated as\n   * an immutable borrow. If you want to take ownership, you must make your own\n   * copy.\n   */\n  toArray() {\n    if (!this._sorted) {\n      this._array.sort(util.compareByGeneratedPositionsInflated);\n      this._sorted = true;\n    }\n    return this._array;\n  }\n}\nexports.MappingList = MappingList;","map":{"version":3,"names":["util","require","generatedPositionAfter","mappingA","mappingB","lineA","generatedLine","lineB","columnA","generatedColumn","columnB","compareByGeneratedPositionsInflated","MappingList","constructor","_array","_sorted","_last","unsortedForEach","aCallback","aThisArg","forEach","add","aMapping","push","toArray","sort","exports"],"sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/source-map/lib/mapping-list.js"],"sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nconst util = require(\"./util\");\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  const lineA = mappingA.generatedLine;\n  const lineB = mappingB.generatedLine;\n  const columnA = mappingA.generatedColumn;\n  const columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a negligible overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nclass MappingList {\n  constructor() {\n    this._array = [];\n    this._sorted = true;\n    // Serves as infimum\n    this._last = {generatedLine: -1, generatedColumn: 0};\n  }\n\n  /**\n   * Iterate through internal items. This method takes the same arguments that\n   * `Array.prototype.forEach` takes.\n   *\n   * NOTE: The order of the mappings is NOT guaranteed.\n   */\n  unsortedForEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  }\n\n  /**\n   * Add the given source mapping.\n   *\n   * @param Object aMapping\n   */\n  add(aMapping) {\n    if (generatedPositionAfter(this._last, aMapping)) {\n      this._last = aMapping;\n      this._array.push(aMapping);\n    } else {\n      this._sorted = false;\n      this._array.push(aMapping);\n    }\n  }\n\n  /**\n   * Returns the flat, sorted array of mappings. The mappings are sorted by\n   * generated position.\n   *\n   * WARNING: This method returns internal data without copying, for\n   * performance. The return value must NOT be mutated, and should be treated as\n   * an immutable borrow. If you want to take ownership, you must make your own\n   * copy.\n   */\n  toArray() {\n    if (!this._sorted) {\n      this._array.sort(util.compareByGeneratedPositionsInflated);\n      this._sorted = true;\n    }\n    return this._array;\n  }\n}\n\nexports.MappingList = MappingList;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAQ,CAAC;;AAE9B;AACA;AACA;AACA;AACA,SAASC,sBAAsB,CAACC,QAAQ,EAAEC,QAAQ,EAAE;EAClD;EACA,MAAMC,KAAK,GAAGF,QAAQ,CAACG,aAAa;EACpC,MAAMC,KAAK,GAAGH,QAAQ,CAACE,aAAa;EACpC,MAAME,OAAO,GAAGL,QAAQ,CAACM,eAAe;EACxC,MAAMC,OAAO,GAAGN,QAAQ,CAACK,eAAe;EACxC,OAAOF,KAAK,GAAGF,KAAK,IAAIE,KAAK,IAAIF,KAAK,IAAIK,OAAO,IAAIF,OAAO,IACrDR,IAAI,CAACW,mCAAmC,CAACR,QAAQ,EAAEC,QAAQ,CAAC,IAAI,CAAC;AAC1E;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAMQ,WAAW,CAAC;EAChBC,WAAW,GAAG;IACZ,IAAI,CAACC,MAAM,GAAG,EAAE;IAChB,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB;IACA,IAAI,CAACC,KAAK,GAAG;MAACV,aAAa,EAAE,CAAC,CAAC;MAAEG,eAAe,EAAE;IAAC,CAAC;EACtD;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEQ,eAAe,CAACC,SAAS,EAAEC,QAAQ,EAAE;IACnC,IAAI,CAACL,MAAM,CAACM,OAAO,CAACF,SAAS,EAAEC,QAAQ,CAAC;EAC1C;;EAEA;AACF;AACA;AACA;AACA;EACEE,GAAG,CAACC,QAAQ,EAAE;IACZ,IAAIpB,sBAAsB,CAAC,IAAI,CAACc,KAAK,EAAEM,QAAQ,CAAC,EAAE;MAChD,IAAI,CAACN,KAAK,GAAGM,QAAQ;MACrB,IAAI,CAACR,MAAM,CAACS,IAAI,CAACD,QAAQ,CAAC;IAC5B,CAAC,MAAM;MACL,IAAI,CAACP,OAAO,GAAG,KAAK;MACpB,IAAI,CAACD,MAAM,CAACS,IAAI,CAACD,QAAQ,CAAC;IAC5B;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEE,OAAO,GAAG;IACR,IAAI,CAAC,IAAI,CAACT,OAAO,EAAE;MACjB,IAAI,CAACD,MAAM,CAACW,IAAI,CAACzB,IAAI,CAACW,mCAAmC,CAAC;MAC1D,IAAI,CAACI,OAAO,GAAG,IAAI;IACrB;IACA,OAAO,IAAI,CAACD,MAAM;EACpB;AACF;AAEAY,OAAO,CAACd,WAAW,GAAGA,WAAW"},"metadata":{},"sourceType":"script","externalDependencies":[]}