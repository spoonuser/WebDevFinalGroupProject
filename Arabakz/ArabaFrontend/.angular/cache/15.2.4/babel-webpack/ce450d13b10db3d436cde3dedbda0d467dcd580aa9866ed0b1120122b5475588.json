{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst codegen_1 = require(\"../../compile/codegen\");\nconst ops = codegen_1.operators;\nconst KWDs = {\n  maximum: {\n    okStr: \"<=\",\n    ok: ops.LTE,\n    fail: ops.GT\n  },\n  minimum: {\n    okStr: \">=\",\n    ok: ops.GTE,\n    fail: ops.LT\n  },\n  exclusiveMaximum: {\n    okStr: \"<\",\n    ok: ops.LT,\n    fail: ops.GTE\n  },\n  exclusiveMinimum: {\n    okStr: \">\",\n    ok: ops.GT,\n    fail: ops.LTE\n  }\n};\nconst error = {\n  message: ({\n    keyword,\n    schemaCode\n  }) => (0, codegen_1.str)`must be ${KWDs[keyword].okStr} ${schemaCode}`,\n  params: ({\n    keyword,\n    schemaCode\n  }) => (0, codegen_1._)`{comparison: ${KWDs[keyword].okStr}, limit: ${schemaCode}}`\n};\nconst def = {\n  keyword: Object.keys(KWDs),\n  type: \"number\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt) {\n    const {\n      keyword,\n      data,\n      schemaCode\n    } = cxt;\n    cxt.fail$data((0, codegen_1._)`${data} ${KWDs[keyword].fail} ${schemaCode} || isNaN(${data})`);\n  }\n};\nexports.default = def;","map":{"version":3,"names":["Object","defineProperty","exports","value","codegen_1","require","ops","operators","KWDs","maximum","okStr","ok","LTE","fail","GT","minimum","GTE","LT","exclusiveMaximum","exclusiveMinimum","error","message","keyword","schemaCode","str","params","_","def","keys","type","schemaType","$data","code","cxt","data","fail$data","default"],"sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/ajv/dist/vocabularies/validation/limitNumber.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst ops = codegen_1.operators;\nconst KWDs = {\n    maximum: { okStr: \"<=\", ok: ops.LTE, fail: ops.GT },\n    minimum: { okStr: \">=\", ok: ops.GTE, fail: ops.LT },\n    exclusiveMaximum: { okStr: \"<\", ok: ops.LT, fail: ops.GTE },\n    exclusiveMinimum: { okStr: \">\", ok: ops.GT, fail: ops.LTE },\n};\nconst error = {\n    message: ({ keyword, schemaCode }) => (0, codegen_1.str) `must be ${KWDs[keyword].okStr} ${schemaCode}`,\n    params: ({ keyword, schemaCode }) => (0, codegen_1._) `{comparison: ${KWDs[keyword].okStr}, limit: ${schemaCode}}`,\n};\nconst def = {\n    keyword: Object.keys(KWDs),\n    type: \"number\",\n    schemaType: \"number\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { keyword, data, schemaCode } = cxt;\n        cxt.fail$data((0, codegen_1._) `${data} ${KWDs[keyword].fail} ${schemaCode} || isNaN(${data})`);\n    },\n};\nexports.default = def;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,SAAS,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AAClD,MAAMC,GAAG,GAAGF,SAAS,CAACG,SAAS;AAC/B,MAAMC,IAAI,GAAG;EACTC,OAAO,EAAE;IAAEC,KAAK,EAAE,IAAI;IAAEC,EAAE,EAAEL,GAAG,CAACM,GAAG;IAAEC,IAAI,EAAEP,GAAG,CAACQ;EAAG,CAAC;EACnDC,OAAO,EAAE;IAAEL,KAAK,EAAE,IAAI;IAAEC,EAAE,EAAEL,GAAG,CAACU,GAAG;IAAEH,IAAI,EAAEP,GAAG,CAACW;EAAG,CAAC;EACnDC,gBAAgB,EAAE;IAAER,KAAK,EAAE,GAAG;IAAEC,EAAE,EAAEL,GAAG,CAACW,EAAE;IAAEJ,IAAI,EAAEP,GAAG,CAACU;EAAI,CAAC;EAC3DG,gBAAgB,EAAE;IAAET,KAAK,EAAE,GAAG;IAAEC,EAAE,EAAEL,GAAG,CAACQ,EAAE;IAAED,IAAI,EAAEP,GAAG,CAACM;EAAI;AAC9D,CAAC;AACD,MAAMQ,KAAK,GAAG;EACVC,OAAO,EAAE,CAAC;IAAEC,OAAO;IAAEC;EAAW,CAAC,KAAK,CAAC,CAAC,EAAEnB,SAAS,CAACoB,GAAG,CAAG,WAAUhB,IAAI,CAACc,OAAO,CAAC,CAACZ,KAAM,IAAGa,UAAW,EAAC;EACvGE,MAAM,EAAE,CAAC;IAAEH,OAAO;IAAEC;EAAW,CAAC,KAAK,CAAC,CAAC,EAAEnB,SAAS,CAACsB,CAAC,CAAG,gBAAelB,IAAI,CAACc,OAAO,CAAC,CAACZ,KAAM,YAAWa,UAAW;AACpH,CAAC;AACD,MAAMI,GAAG,GAAG;EACRL,OAAO,EAAEtB,MAAM,CAAC4B,IAAI,CAACpB,IAAI,CAAC;EAC1BqB,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE,QAAQ;EACpBC,KAAK,EAAE,IAAI;EACXX,KAAK;EACLY,IAAI,CAACC,GAAG,EAAE;IACN,MAAM;MAAEX,OAAO;MAAEY,IAAI;MAAEX;IAAW,CAAC,GAAGU,GAAG;IACzCA,GAAG,CAACE,SAAS,CAAC,CAAC,CAAC,EAAE/B,SAAS,CAACsB,CAAC,CAAG,GAAEQ,IAAK,IAAG1B,IAAI,CAACc,OAAO,CAAC,CAACT,IAAK,IAAGU,UAAW,aAAYW,IAAK,GAAE,CAAC;EACnG;AACJ,CAAC;AACDhC,OAAO,CAACkC,OAAO,GAAGT,GAAG"},"metadata":{},"sourceType":"script","externalDependencies":[]}