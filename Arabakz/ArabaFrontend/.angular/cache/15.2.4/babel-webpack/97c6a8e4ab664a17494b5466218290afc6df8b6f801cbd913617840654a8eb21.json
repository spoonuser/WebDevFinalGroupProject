{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _asyncToGenerator = require(\"/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnalyticsCollector = void 0;\nconst crypto_1 = require(\"crypto\");\nconst https = __importStar(require(\"https\"));\nconst os = __importStar(require(\"os\"));\nconst querystring = __importStar(require(\"querystring\"));\nconst semver = __importStar(require(\"semver\"));\nconst environment_options_1 = require(\"../utilities/environment-options\");\nconst error_1 = require(\"../utilities/error\");\nconst version_1 = require(\"../utilities/version\");\nconst analytics_parameters_1 = require(\"./analytics-parameters\");\nconst TRACKING_ID_PROD = 'G-VETNJBW8L4';\nconst TRACKING_ID_STAGING = 'G-TBMPRL1BTM';\nclass AnalyticsCollector {\n  constructor(context, userId) {\n    this.context = context;\n    const requestParameters = {\n      [analytics_parameters_1.RequestParameter.ProtocolVersion]: 2,\n      [analytics_parameters_1.RequestParameter.ClientId]: userId,\n      [analytics_parameters_1.RequestParameter.UserId]: userId,\n      [analytics_parameters_1.RequestParameter.TrackingId]: /^\\d+\\.\\d+\\.\\d+$/.test(version_1.VERSION.full) && version_1.VERSION.full !== '0.0.0' ? TRACKING_ID_PROD : TRACKING_ID_STAGING,\n      // Built-in user properties\n      [analytics_parameters_1.RequestParameter.SessionId]: (0, crypto_1.randomUUID)(),\n      [analytics_parameters_1.RequestParameter.UserAgentArchitecture]: os.arch(),\n      [analytics_parameters_1.RequestParameter.UserAgentPlatform]: os.platform(),\n      [analytics_parameters_1.RequestParameter.UserAgentPlatformVersion]: os.release(),\n      [analytics_parameters_1.RequestParameter.SessionEngaged]: 1\n    };\n    if (environment_options_1.ngDebug) {\n      requestParameters[analytics_parameters_1.RequestParameter.DebugView] = 1;\n    }\n    this.requestParameterStringified = querystring.stringify(requestParameters);\n    const parsedVersion = semver.parse(process.version);\n    const packageManagerVersion = context.packageManager.version;\n    this.userParameters = {\n      // While architecture is being collect by GA as UserAgentArchitecture.\n      // It doesn't look like there is a way to query this. Therefore we collect this as a custom user dimension too.\n      [analytics_parameters_1.UserCustomDimension.OsArchitecture]: os.arch(),\n      // While User ID is being collected by GA, this is not visible in reports/for filtering.\n      [analytics_parameters_1.UserCustomDimension.UserId]: userId,\n      [analytics_parameters_1.UserCustomDimension.NodeVersion]: parsedVersion ? `${parsedVersion.major}.${parsedVersion.minor}.${parsedVersion.patch}` : 'other',\n      [analytics_parameters_1.UserCustomDimension.NodeMajorVersion]: parsedVersion === null || parsedVersion === void 0 ? void 0 : parsedVersion.major,\n      [analytics_parameters_1.UserCustomDimension.PackageManager]: context.packageManager.name,\n      [analytics_parameters_1.UserCustomDimension.PackageManagerVersion]: packageManagerVersion,\n      [analytics_parameters_1.UserCustomDimension.PackageManagerMajorVersion]: packageManagerVersion ? +packageManagerVersion.split('.', 1)[0] : undefined,\n      [analytics_parameters_1.UserCustomDimension.AngularCLIVersion]: version_1.VERSION.full,\n      [analytics_parameters_1.UserCustomDimension.AngularCLIMajorVersion]: version_1.VERSION.major\n    };\n  }\n  reportWorkspaceInfoEvent(parameters) {\n    this.event('workspace_info', parameters);\n  }\n  reportRebuildRunEvent(parameters) {\n    this.event('run_rebuild', parameters);\n  }\n  reportBuildRunEvent(parameters) {\n    this.event('run_build', parameters);\n  }\n  reportArchitectRunEvent(parameters) {\n    this.event('run_architect', parameters);\n  }\n  reportSchematicRunEvent(parameters) {\n    this.event('run_schematic', parameters);\n  }\n  reportCommandRunEvent(command) {\n    this.event('run_command', {\n      [analytics_parameters_1.EventCustomDimension.Command]: command\n    });\n  }\n  event(eventName, parameters) {\n    var _a;\n    (_a = this.trackingEventsQueue) !== null && _a !== void 0 ? _a : this.trackingEventsQueue = [];\n    this.trackingEventsQueue.push({\n      ...this.userParameters,\n      ...parameters,\n      'en': eventName\n    });\n  }\n  /**\n   * Flush on an interval (if the event loop is waiting).\n   *\n   * @returns a method that when called will terminate the periodic\n   * flush and call flush one last time.\n   */\n  periodFlush() {\n    let analyticsFlushPromise = Promise.resolve();\n    const analyticsFlushInterval = setInterval(() => {\n      var _a;\n      if ((_a = this.trackingEventsQueue) === null || _a === void 0 ? void 0 : _a.length) {\n        analyticsFlushPromise = analyticsFlushPromise.then(() => this.flush());\n      }\n    }, 4000);\n    return () => {\n      clearInterval(analyticsFlushInterval);\n      // Flush one last time.\n      return analyticsFlushPromise.then(() => this.flush());\n    };\n  }\n  flush() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const pendingTrackingEvents = _this.trackingEventsQueue;\n      _this.context.logger.debug(`Analytics flush size. ${pendingTrackingEvents === null || pendingTrackingEvents === void 0 ? void 0 : pendingTrackingEvents.length}.`);\n      if (!(pendingTrackingEvents === null || pendingTrackingEvents === void 0 ? void 0 : pendingTrackingEvents.length)) {\n        return;\n      }\n      // The below is needed so that if flush is called multiple times,\n      // we don't report the same event multiple times.\n      _this.trackingEventsQueue = undefined;\n      try {\n        yield _this.send(pendingTrackingEvents);\n      } catch (error) {\n        // Failure to report analytics shouldn't crash the CLI.\n        (0, error_1.assertIsError)(error);\n        _this.context.logger.debug(`Send analytics error. ${error.message}.`);\n      }\n    })();\n  }\n  send(data) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      return new Promise((resolve, reject) => {\n        const request = https.request({\n          host: 'www.google-analytics.com',\n          method: 'POST',\n          path: '/g/collect?' + _this2.requestParameterStringified\n        }, response => {\n          if (response.statusCode !== 200 && response.statusCode !== 204) {\n            reject(new Error(`Analytics reporting failed with status code: ${response.statusCode}.`));\n          } else {\n            resolve();\n          }\n        });\n        request.on('error', reject);\n        const queryParameters = data.map(p => querystring.stringify(p)).join('\\n');\n        request.write(queryParameters);\n        request.end();\n      });\n    })();\n  }\n}\nexports.AnalyticsCollector = AnalyticsCollector;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","exports","AnalyticsCollector","crypto_1","require","https","os","querystring","semver","environment_options_1","error_1","version_1","analytics_parameters_1","TRACKING_ID_PROD","TRACKING_ID_STAGING","constructor","context","userId","requestParameters","RequestParameter","ProtocolVersion","ClientId","UserId","TrackingId","test","VERSION","full","SessionId","randomUUID","UserAgentArchitecture","arch","UserAgentPlatform","platform","UserAgentPlatformVersion","release","SessionEngaged","ngDebug","DebugView","requestParameterStringified","stringify","parsedVersion","parse","process","version","packageManagerVersion","packageManager","userParameters","UserCustomDimension","OsArchitecture","NodeVersion","major","minor","patch","NodeMajorVersion","PackageManager","name","PackageManagerVersion","PackageManagerMajorVersion","split","AngularCLIVersion","AngularCLIMajorVersion","reportWorkspaceInfoEvent","parameters","event","reportRebuildRunEvent","reportBuildRunEvent","reportArchitectRunEvent","reportSchematicRunEvent","reportCommandRunEvent","command","EventCustomDimension","Command","eventName","_a","trackingEventsQueue","push","periodFlush","analyticsFlushPromise","Promise","resolve","analyticsFlushInterval","setInterval","length","then","flush","clearInterval","pendingTrackingEvents","logger","debug","send","error","assertIsError","message","data","reject","request","host","method","path","response","statusCode","Error","on","queryParameters","map","p","join","write","end"],"sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/@angular/cli/src/analytics/analytics-collector.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AnalyticsCollector = void 0;\nconst crypto_1 = require(\"crypto\");\nconst https = __importStar(require(\"https\"));\nconst os = __importStar(require(\"os\"));\nconst querystring = __importStar(require(\"querystring\"));\nconst semver = __importStar(require(\"semver\"));\nconst environment_options_1 = require(\"../utilities/environment-options\");\nconst error_1 = require(\"../utilities/error\");\nconst version_1 = require(\"../utilities/version\");\nconst analytics_parameters_1 = require(\"./analytics-parameters\");\nconst TRACKING_ID_PROD = 'G-VETNJBW8L4';\nconst TRACKING_ID_STAGING = 'G-TBMPRL1BTM';\nclass AnalyticsCollector {\n    constructor(context, userId) {\n        this.context = context;\n        const requestParameters = {\n            [analytics_parameters_1.RequestParameter.ProtocolVersion]: 2,\n            [analytics_parameters_1.RequestParameter.ClientId]: userId,\n            [analytics_parameters_1.RequestParameter.UserId]: userId,\n            [analytics_parameters_1.RequestParameter.TrackingId]: /^\\d+\\.\\d+\\.\\d+$/.test(version_1.VERSION.full) && version_1.VERSION.full !== '0.0.0'\n                ? TRACKING_ID_PROD\n                : TRACKING_ID_STAGING,\n            // Built-in user properties\n            [analytics_parameters_1.RequestParameter.SessionId]: (0, crypto_1.randomUUID)(),\n            [analytics_parameters_1.RequestParameter.UserAgentArchitecture]: os.arch(),\n            [analytics_parameters_1.RequestParameter.UserAgentPlatform]: os.platform(),\n            [analytics_parameters_1.RequestParameter.UserAgentPlatformVersion]: os.release(),\n            [analytics_parameters_1.RequestParameter.SessionEngaged]: 1,\n        };\n        if (environment_options_1.ngDebug) {\n            requestParameters[analytics_parameters_1.RequestParameter.DebugView] = 1;\n        }\n        this.requestParameterStringified = querystring.stringify(requestParameters);\n        const parsedVersion = semver.parse(process.version);\n        const packageManagerVersion = context.packageManager.version;\n        this.userParameters = {\n            // While architecture is being collect by GA as UserAgentArchitecture.\n            // It doesn't look like there is a way to query this. Therefore we collect this as a custom user dimension too.\n            [analytics_parameters_1.UserCustomDimension.OsArchitecture]: os.arch(),\n            // While User ID is being collected by GA, this is not visible in reports/for filtering.\n            [analytics_parameters_1.UserCustomDimension.UserId]: userId,\n            [analytics_parameters_1.UserCustomDimension.NodeVersion]: parsedVersion\n                ? `${parsedVersion.major}.${parsedVersion.minor}.${parsedVersion.patch}`\n                : 'other',\n            [analytics_parameters_1.UserCustomDimension.NodeMajorVersion]: parsedVersion === null || parsedVersion === void 0 ? void 0 : parsedVersion.major,\n            [analytics_parameters_1.UserCustomDimension.PackageManager]: context.packageManager.name,\n            [analytics_parameters_1.UserCustomDimension.PackageManagerVersion]: packageManagerVersion,\n            [analytics_parameters_1.UserCustomDimension.PackageManagerMajorVersion]: packageManagerVersion\n                ? +packageManagerVersion.split('.', 1)[0]\n                : undefined,\n            [analytics_parameters_1.UserCustomDimension.AngularCLIVersion]: version_1.VERSION.full,\n            [analytics_parameters_1.UserCustomDimension.AngularCLIMajorVersion]: version_1.VERSION.major,\n        };\n    }\n    reportWorkspaceInfoEvent(parameters) {\n        this.event('workspace_info', parameters);\n    }\n    reportRebuildRunEvent(parameters) {\n        this.event('run_rebuild', parameters);\n    }\n    reportBuildRunEvent(parameters) {\n        this.event('run_build', parameters);\n    }\n    reportArchitectRunEvent(parameters) {\n        this.event('run_architect', parameters);\n    }\n    reportSchematicRunEvent(parameters) {\n        this.event('run_schematic', parameters);\n    }\n    reportCommandRunEvent(command) {\n        this.event('run_command', { [analytics_parameters_1.EventCustomDimension.Command]: command });\n    }\n    event(eventName, parameters) {\n        var _a;\n        (_a = this.trackingEventsQueue) !== null && _a !== void 0 ? _a : (this.trackingEventsQueue = []);\n        this.trackingEventsQueue.push({\n            ...this.userParameters,\n            ...parameters,\n            'en': eventName,\n        });\n    }\n    /**\n     * Flush on an interval (if the event loop is waiting).\n     *\n     * @returns a method that when called will terminate the periodic\n     * flush and call flush one last time.\n     */\n    periodFlush() {\n        let analyticsFlushPromise = Promise.resolve();\n        const analyticsFlushInterval = setInterval(() => {\n            var _a;\n            if ((_a = this.trackingEventsQueue) === null || _a === void 0 ? void 0 : _a.length) {\n                analyticsFlushPromise = analyticsFlushPromise.then(() => this.flush());\n            }\n        }, 4000);\n        return () => {\n            clearInterval(analyticsFlushInterval);\n            // Flush one last time.\n            return analyticsFlushPromise.then(() => this.flush());\n        };\n    }\n    async flush() {\n        const pendingTrackingEvents = this.trackingEventsQueue;\n        this.context.logger.debug(`Analytics flush size. ${pendingTrackingEvents === null || pendingTrackingEvents === void 0 ? void 0 : pendingTrackingEvents.length}.`);\n        if (!(pendingTrackingEvents === null || pendingTrackingEvents === void 0 ? void 0 : pendingTrackingEvents.length)) {\n            return;\n        }\n        // The below is needed so that if flush is called multiple times,\n        // we don't report the same event multiple times.\n        this.trackingEventsQueue = undefined;\n        try {\n            await this.send(pendingTrackingEvents);\n        }\n        catch (error) {\n            // Failure to report analytics shouldn't crash the CLI.\n            (0, error_1.assertIsError)(error);\n            this.context.logger.debug(`Send analytics error. ${error.message}.`);\n        }\n    }\n    async send(data) {\n        return new Promise((resolve, reject) => {\n            const request = https.request({\n                host: 'www.google-analytics.com',\n                method: 'POST',\n                path: '/g/collect?' + this.requestParameterStringified,\n            }, (response) => {\n                if (response.statusCode !== 200 && response.statusCode !== 204) {\n                    reject(new Error(`Analytics reporting failed with status code: ${response.statusCode}.`));\n                }\n                else {\n                    resolve();\n                }\n            });\n            request.on('error', reject);\n            const queryParameters = data.map((p) => querystring.stringify(p)).join('\\n');\n            request.write(queryParameters);\n            request.end();\n        });\n    }\n}\nexports.AnalyticsCollector = AnalyticsCollector;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}