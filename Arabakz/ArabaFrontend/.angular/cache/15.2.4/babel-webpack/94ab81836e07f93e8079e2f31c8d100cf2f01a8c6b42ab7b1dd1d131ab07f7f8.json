{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ScopedTree = void 0;\nconst core_1 = require(\"@angular-devkit/core\");\nconst delegate_1 = require(\"./delegate\");\nconst interface_1 = require(\"./interface\");\nclass ScopedFileEntry {\n  constructor(_base, scope) {\n    this._base = _base;\n    this.scope = scope;\n  }\n  get path() {\n    return (0, core_1.join)(core_1.NormalizedRoot, (0, core_1.relative)(this.scope, this._base.path));\n  }\n  get content() {\n    return this._base.content;\n  }\n}\nclass ScopedDirEntry {\n  constructor(_base, scope) {\n    this._base = _base;\n    this.scope = scope;\n  }\n  get parent() {\n    if (!this._base.parent || this._base.path == this.scope) {\n      return null;\n    }\n    return new ScopedDirEntry(this._base.parent, this.scope);\n  }\n  get path() {\n    return (0, core_1.join)(core_1.NormalizedRoot, (0, core_1.relative)(this.scope, this._base.path));\n  }\n  get subdirs() {\n    return this._base.subdirs;\n  }\n  get subfiles() {\n    return this._base.subfiles;\n  }\n  dir(name) {\n    const entry = this._base.dir(name);\n    return entry && new ScopedDirEntry(entry, this.scope);\n  }\n  file(name) {\n    const entry = this._base.file(name);\n    return entry && new ScopedFileEntry(entry, this.scope);\n  }\n  visit(visitor) {\n    return this._base.visit((path, entry) => {\n      visitor((0, core_1.join)(core_1.NormalizedRoot, (0, core_1.relative)(this.scope, path)), entry && new ScopedFileEntry(entry, this.scope));\n    });\n  }\n}\nclass ScopedTree {\n  constructor(_base, scope) {\n    this._base = _base;\n    const normalizedScope = (0, core_1.normalize)('/' + scope);\n    this._root = new ScopedDirEntry(this._base.getDir(normalizedScope), normalizedScope);\n  }\n  get root() {\n    return this._root;\n  }\n  branch() {\n    return new ScopedTree(this._base.branch(), this._root.scope);\n  }\n  merge(other, strategy) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this;\n    const delegate = new class extends delegate_1.DelegateTree {\n      get actions() {\n        return other.actions.map(action => self._fullPathAction(action));\n      }\n    }(other);\n    this._base.merge(delegate, strategy);\n  }\n  // Readonly.\n  read(path) {\n    return this._base.read(this._fullPath(path));\n  }\n  readText(path) {\n    return this._base.readText(this._fullPath(path));\n  }\n  readJson(path) {\n    return this._base.readJson(this._fullPath(path));\n  }\n  exists(path) {\n    return this._base.exists(this._fullPath(path));\n  }\n  get(path) {\n    const entry = this._base.get(this._fullPath(path));\n    return entry && new ScopedFileEntry(entry, this._root.scope);\n  }\n  getDir(path) {\n    const entry = this._base.getDir(this._fullPath(path));\n    return entry && new ScopedDirEntry(entry, this._root.scope);\n  }\n  visit(visitor) {\n    return this._root.visit(visitor);\n  }\n  // Change content of host files.\n  overwrite(path, content) {\n    return this._base.overwrite(this._fullPath(path), content);\n  }\n  beginUpdate(path) {\n    return this._base.beginUpdate(this._fullPath(path));\n  }\n  commitUpdate(record) {\n    return this._base.commitUpdate(record);\n  }\n  // Structural methods.\n  create(path, content) {\n    return this._base.create(this._fullPath(path), content);\n  }\n  delete(path) {\n    return this._base.delete(this._fullPath(path));\n  }\n  rename(from, to) {\n    return this._base.rename(this._fullPath(from), this._fullPath(to));\n  }\n  apply(action, strategy) {\n    return this._base.apply(this._fullPathAction(action), strategy);\n  }\n  get actions() {\n    const scopedActions = [];\n    for (const action of this._base.actions) {\n      if (!action.path.startsWith(this._root.scope + '/')) {\n        continue;\n      }\n      if (action.kind !== 'r') {\n        scopedActions.push({\n          ...action,\n          path: (0, core_1.join)(core_1.NormalizedRoot, (0, core_1.relative)(this._root.scope, action.path))\n        });\n      } else if (action.to.startsWith(this._root.scope + '/')) {\n        scopedActions.push({\n          ...action,\n          path: (0, core_1.join)(core_1.NormalizedRoot, (0, core_1.relative)(this._root.scope, action.path)),\n          to: (0, core_1.join)(core_1.NormalizedRoot, (0, core_1.relative)(this._root.scope, action.to))\n        });\n      }\n    }\n    return scopedActions;\n  }\n  [interface_1.TreeSymbol]() {\n    return this;\n  }\n  _fullPath(path) {\n    return (0, core_1.join)(this._root.scope, (0, core_1.normalize)('/' + path));\n  }\n  _fullPathAction(action) {\n    let fullPathAction;\n    if (action.kind === 'r') {\n      fullPathAction = {\n        ...action,\n        path: this._fullPath(action.path),\n        to: this._fullPath(action.to)\n      };\n    } else {\n      fullPathAction = {\n        ...action,\n        path: this._fullPath(action.path)\n      };\n    }\n    return fullPathAction;\n  }\n}\nexports.ScopedTree = ScopedTree;","map":{"version":3,"names":["Object","defineProperty","exports","value","ScopedTree","core_1","require","delegate_1","interface_1","ScopedFileEntry","constructor","_base","scope","path","join","NormalizedRoot","relative","content","ScopedDirEntry","parent","subdirs","subfiles","dir","name","entry","file","visit","visitor","normalizedScope","normalize","_root","getDir","root","branch","merge","other","strategy","self","delegate","DelegateTree","actions","map","action","_fullPathAction","read","_fullPath","readText","readJson","exists","get","overwrite","beginUpdate","commitUpdate","record","create","delete","rename","from","to","apply","scopedActions","startsWith","kind","push","TreeSymbol","fullPathAction"],"sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/@angular-devkit/schematics/src/tree/scoped.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ScopedTree = void 0;\nconst core_1 = require(\"@angular-devkit/core\");\nconst delegate_1 = require(\"./delegate\");\nconst interface_1 = require(\"./interface\");\nclass ScopedFileEntry {\n    constructor(_base, scope) {\n        this._base = _base;\n        this.scope = scope;\n    }\n    get path() {\n        return (0, core_1.join)(core_1.NormalizedRoot, (0, core_1.relative)(this.scope, this._base.path));\n    }\n    get content() {\n        return this._base.content;\n    }\n}\nclass ScopedDirEntry {\n    constructor(_base, scope) {\n        this._base = _base;\n        this.scope = scope;\n    }\n    get parent() {\n        if (!this._base.parent || this._base.path == this.scope) {\n            return null;\n        }\n        return new ScopedDirEntry(this._base.parent, this.scope);\n    }\n    get path() {\n        return (0, core_1.join)(core_1.NormalizedRoot, (0, core_1.relative)(this.scope, this._base.path));\n    }\n    get subdirs() {\n        return this._base.subdirs;\n    }\n    get subfiles() {\n        return this._base.subfiles;\n    }\n    dir(name) {\n        const entry = this._base.dir(name);\n        return entry && new ScopedDirEntry(entry, this.scope);\n    }\n    file(name) {\n        const entry = this._base.file(name);\n        return entry && new ScopedFileEntry(entry, this.scope);\n    }\n    visit(visitor) {\n        return this._base.visit((path, entry) => {\n            visitor((0, core_1.join)(core_1.NormalizedRoot, (0, core_1.relative)(this.scope, path)), entry && new ScopedFileEntry(entry, this.scope));\n        });\n    }\n}\nclass ScopedTree {\n    constructor(_base, scope) {\n        this._base = _base;\n        const normalizedScope = (0, core_1.normalize)('/' + scope);\n        this._root = new ScopedDirEntry(this._base.getDir(normalizedScope), normalizedScope);\n    }\n    get root() {\n        return this._root;\n    }\n    branch() {\n        return new ScopedTree(this._base.branch(), this._root.scope);\n    }\n    merge(other, strategy) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const self = this;\n        const delegate = new (class extends delegate_1.DelegateTree {\n            get actions() {\n                return other.actions.map((action) => self._fullPathAction(action));\n            }\n        })(other);\n        this._base.merge(delegate, strategy);\n    }\n    // Readonly.\n    read(path) {\n        return this._base.read(this._fullPath(path));\n    }\n    readText(path) {\n        return this._base.readText(this._fullPath(path));\n    }\n    readJson(path) {\n        return this._base.readJson(this._fullPath(path));\n    }\n    exists(path) {\n        return this._base.exists(this._fullPath(path));\n    }\n    get(path) {\n        const entry = this._base.get(this._fullPath(path));\n        return entry && new ScopedFileEntry(entry, this._root.scope);\n    }\n    getDir(path) {\n        const entry = this._base.getDir(this._fullPath(path));\n        return entry && new ScopedDirEntry(entry, this._root.scope);\n    }\n    visit(visitor) {\n        return this._root.visit(visitor);\n    }\n    // Change content of host files.\n    overwrite(path, content) {\n        return this._base.overwrite(this._fullPath(path), content);\n    }\n    beginUpdate(path) {\n        return this._base.beginUpdate(this._fullPath(path));\n    }\n    commitUpdate(record) {\n        return this._base.commitUpdate(record);\n    }\n    // Structural methods.\n    create(path, content) {\n        return this._base.create(this._fullPath(path), content);\n    }\n    delete(path) {\n        return this._base.delete(this._fullPath(path));\n    }\n    rename(from, to) {\n        return this._base.rename(this._fullPath(from), this._fullPath(to));\n    }\n    apply(action, strategy) {\n        return this._base.apply(this._fullPathAction(action), strategy);\n    }\n    get actions() {\n        const scopedActions = [];\n        for (const action of this._base.actions) {\n            if (!action.path.startsWith(this._root.scope + '/')) {\n                continue;\n            }\n            if (action.kind !== 'r') {\n                scopedActions.push({\n                    ...action,\n                    path: (0, core_1.join)(core_1.NormalizedRoot, (0, core_1.relative)(this._root.scope, action.path)),\n                });\n            }\n            else if (action.to.startsWith(this._root.scope + '/')) {\n                scopedActions.push({\n                    ...action,\n                    path: (0, core_1.join)(core_1.NormalizedRoot, (0, core_1.relative)(this._root.scope, action.path)),\n                    to: (0, core_1.join)(core_1.NormalizedRoot, (0, core_1.relative)(this._root.scope, action.to)),\n                });\n            }\n        }\n        return scopedActions;\n    }\n    [interface_1.TreeSymbol]() {\n        return this;\n    }\n    _fullPath(path) {\n        return (0, core_1.join)(this._root.scope, (0, core_1.normalize)('/' + path));\n    }\n    _fullPathAction(action) {\n        let fullPathAction;\n        if (action.kind === 'r') {\n            fullPathAction = {\n                ...action,\n                path: this._fullPath(action.path),\n                to: this._fullPath(action.to),\n            };\n        }\n        else {\n            fullPathAction = {\n                ...action,\n                path: this._fullPath(action.path),\n            };\n        }\n        return fullPathAction;\n    }\n}\nexports.ScopedTree = ScopedTree;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,UAAU,GAAG,KAAK,CAAC;AAC3B,MAAMC,MAAM,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AAC9C,MAAMC,UAAU,GAAGD,OAAO,CAAC,YAAY,CAAC;AACxC,MAAME,WAAW,GAAGF,OAAO,CAAC,aAAa,CAAC;AAC1C,MAAMG,eAAe,CAAC;EAClBC,WAAW,CAACC,KAAK,EAAEC,KAAK,EAAE;IACtB,IAAI,CAACD,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,KAAK,GAAGA,KAAK;EACtB;EACA,IAAIC,IAAI,GAAG;IACP,OAAO,CAAC,CAAC,EAAER,MAAM,CAACS,IAAI,EAAET,MAAM,CAACU,cAAc,EAAE,CAAC,CAAC,EAAEV,MAAM,CAACW,QAAQ,EAAE,IAAI,CAACJ,KAAK,EAAE,IAAI,CAACD,KAAK,CAACE,IAAI,CAAC,CAAC;EACrG;EACA,IAAII,OAAO,GAAG;IACV,OAAO,IAAI,CAACN,KAAK,CAACM,OAAO;EAC7B;AACJ;AACA,MAAMC,cAAc,CAAC;EACjBR,WAAW,CAACC,KAAK,EAAEC,KAAK,EAAE;IACtB,IAAI,CAACD,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,KAAK,GAAGA,KAAK;EACtB;EACA,IAAIO,MAAM,GAAG;IACT,IAAI,CAAC,IAAI,CAACR,KAAK,CAACQ,MAAM,IAAI,IAAI,CAACR,KAAK,CAACE,IAAI,IAAI,IAAI,CAACD,KAAK,EAAE;MACrD,OAAO,IAAI;IACf;IACA,OAAO,IAAIM,cAAc,CAAC,IAAI,CAACP,KAAK,CAACQ,MAAM,EAAE,IAAI,CAACP,KAAK,CAAC;EAC5D;EACA,IAAIC,IAAI,GAAG;IACP,OAAO,CAAC,CAAC,EAAER,MAAM,CAACS,IAAI,EAAET,MAAM,CAACU,cAAc,EAAE,CAAC,CAAC,EAAEV,MAAM,CAACW,QAAQ,EAAE,IAAI,CAACJ,KAAK,EAAE,IAAI,CAACD,KAAK,CAACE,IAAI,CAAC,CAAC;EACrG;EACA,IAAIO,OAAO,GAAG;IACV,OAAO,IAAI,CAACT,KAAK,CAACS,OAAO;EAC7B;EACA,IAAIC,QAAQ,GAAG;IACX,OAAO,IAAI,CAACV,KAAK,CAACU,QAAQ;EAC9B;EACAC,GAAG,CAACC,IAAI,EAAE;IACN,MAAMC,KAAK,GAAG,IAAI,CAACb,KAAK,CAACW,GAAG,CAACC,IAAI,CAAC;IAClC,OAAOC,KAAK,IAAI,IAAIN,cAAc,CAACM,KAAK,EAAE,IAAI,CAACZ,KAAK,CAAC;EACzD;EACAa,IAAI,CAACF,IAAI,EAAE;IACP,MAAMC,KAAK,GAAG,IAAI,CAACb,KAAK,CAACc,IAAI,CAACF,IAAI,CAAC;IACnC,OAAOC,KAAK,IAAI,IAAIf,eAAe,CAACe,KAAK,EAAE,IAAI,CAACZ,KAAK,CAAC;EAC1D;EACAc,KAAK,CAACC,OAAO,EAAE;IACX,OAAO,IAAI,CAAChB,KAAK,CAACe,KAAK,CAAC,CAACb,IAAI,EAAEW,KAAK,KAAK;MACrCG,OAAO,CAAC,CAAC,CAAC,EAAEtB,MAAM,CAACS,IAAI,EAAET,MAAM,CAACU,cAAc,EAAE,CAAC,CAAC,EAAEV,MAAM,CAACW,QAAQ,EAAE,IAAI,CAACJ,KAAK,EAAEC,IAAI,CAAC,CAAC,EAAEW,KAAK,IAAI,IAAIf,eAAe,CAACe,KAAK,EAAE,IAAI,CAACZ,KAAK,CAAC,CAAC;IAC7I,CAAC,CAAC;EACN;AACJ;AACA,MAAMR,UAAU,CAAC;EACbM,WAAW,CAACC,KAAK,EAAEC,KAAK,EAAE;IACtB,IAAI,CAACD,KAAK,GAAGA,KAAK;IAClB,MAAMiB,eAAe,GAAG,CAAC,CAAC,EAAEvB,MAAM,CAACwB,SAAS,EAAE,GAAG,GAAGjB,KAAK,CAAC;IAC1D,IAAI,CAACkB,KAAK,GAAG,IAAIZ,cAAc,CAAC,IAAI,CAACP,KAAK,CAACoB,MAAM,CAACH,eAAe,CAAC,EAAEA,eAAe,CAAC;EACxF;EACA,IAAII,IAAI,GAAG;IACP,OAAO,IAAI,CAACF,KAAK;EACrB;EACAG,MAAM,GAAG;IACL,OAAO,IAAI7B,UAAU,CAAC,IAAI,CAACO,KAAK,CAACsB,MAAM,EAAE,EAAE,IAAI,CAACH,KAAK,CAAClB,KAAK,CAAC;EAChE;EACAsB,KAAK,CAACC,KAAK,EAAEC,QAAQ,EAAE;IACnB;IACA,MAAMC,IAAI,GAAG,IAAI;IACjB,MAAMC,QAAQ,GAAG,IAAK,cAAc/B,UAAU,CAACgC,YAAY,CAAC;MACxD,IAAIC,OAAO,GAAG;QACV,OAAOL,KAAK,CAACK,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAKL,IAAI,CAACM,eAAe,CAACD,MAAM,CAAC,CAAC;MACtE;IACJ,CAAC,CAAEP,KAAK,CAAC;IACT,IAAI,CAACxB,KAAK,CAACuB,KAAK,CAACI,QAAQ,EAAEF,QAAQ,CAAC;EACxC;EACA;EACAQ,IAAI,CAAC/B,IAAI,EAAE;IACP,OAAO,IAAI,CAACF,KAAK,CAACiC,IAAI,CAAC,IAAI,CAACC,SAAS,CAAChC,IAAI,CAAC,CAAC;EAChD;EACAiC,QAAQ,CAACjC,IAAI,EAAE;IACX,OAAO,IAAI,CAACF,KAAK,CAACmC,QAAQ,CAAC,IAAI,CAACD,SAAS,CAAChC,IAAI,CAAC,CAAC;EACpD;EACAkC,QAAQ,CAAClC,IAAI,EAAE;IACX,OAAO,IAAI,CAACF,KAAK,CAACoC,QAAQ,CAAC,IAAI,CAACF,SAAS,CAAChC,IAAI,CAAC,CAAC;EACpD;EACAmC,MAAM,CAACnC,IAAI,EAAE;IACT,OAAO,IAAI,CAACF,KAAK,CAACqC,MAAM,CAAC,IAAI,CAACH,SAAS,CAAChC,IAAI,CAAC,CAAC;EAClD;EACAoC,GAAG,CAACpC,IAAI,EAAE;IACN,MAAMW,KAAK,GAAG,IAAI,CAACb,KAAK,CAACsC,GAAG,CAAC,IAAI,CAACJ,SAAS,CAAChC,IAAI,CAAC,CAAC;IAClD,OAAOW,KAAK,IAAI,IAAIf,eAAe,CAACe,KAAK,EAAE,IAAI,CAACM,KAAK,CAAClB,KAAK,CAAC;EAChE;EACAmB,MAAM,CAAClB,IAAI,EAAE;IACT,MAAMW,KAAK,GAAG,IAAI,CAACb,KAAK,CAACoB,MAAM,CAAC,IAAI,CAACc,SAAS,CAAChC,IAAI,CAAC,CAAC;IACrD,OAAOW,KAAK,IAAI,IAAIN,cAAc,CAACM,KAAK,EAAE,IAAI,CAACM,KAAK,CAAClB,KAAK,CAAC;EAC/D;EACAc,KAAK,CAACC,OAAO,EAAE;IACX,OAAO,IAAI,CAACG,KAAK,CAACJ,KAAK,CAACC,OAAO,CAAC;EACpC;EACA;EACAuB,SAAS,CAACrC,IAAI,EAAEI,OAAO,EAAE;IACrB,OAAO,IAAI,CAACN,KAAK,CAACuC,SAAS,CAAC,IAAI,CAACL,SAAS,CAAChC,IAAI,CAAC,EAAEI,OAAO,CAAC;EAC9D;EACAkC,WAAW,CAACtC,IAAI,EAAE;IACd,OAAO,IAAI,CAACF,KAAK,CAACwC,WAAW,CAAC,IAAI,CAACN,SAAS,CAAChC,IAAI,CAAC,CAAC;EACvD;EACAuC,YAAY,CAACC,MAAM,EAAE;IACjB,OAAO,IAAI,CAAC1C,KAAK,CAACyC,YAAY,CAACC,MAAM,CAAC;EAC1C;EACA;EACAC,MAAM,CAACzC,IAAI,EAAEI,OAAO,EAAE;IAClB,OAAO,IAAI,CAACN,KAAK,CAAC2C,MAAM,CAAC,IAAI,CAACT,SAAS,CAAChC,IAAI,CAAC,EAAEI,OAAO,CAAC;EAC3D;EACAsC,MAAM,CAAC1C,IAAI,EAAE;IACT,OAAO,IAAI,CAACF,KAAK,CAAC4C,MAAM,CAAC,IAAI,CAACV,SAAS,CAAChC,IAAI,CAAC,CAAC;EAClD;EACA2C,MAAM,CAACC,IAAI,EAAEC,EAAE,EAAE;IACb,OAAO,IAAI,CAAC/C,KAAK,CAAC6C,MAAM,CAAC,IAAI,CAACX,SAAS,CAACY,IAAI,CAAC,EAAE,IAAI,CAACZ,SAAS,CAACa,EAAE,CAAC,CAAC;EACtE;EACAC,KAAK,CAACjB,MAAM,EAAEN,QAAQ,EAAE;IACpB,OAAO,IAAI,CAACzB,KAAK,CAACgD,KAAK,CAAC,IAAI,CAAChB,eAAe,CAACD,MAAM,CAAC,EAAEN,QAAQ,CAAC;EACnE;EACA,IAAII,OAAO,GAAG;IACV,MAAMoB,aAAa,GAAG,EAAE;IACxB,KAAK,MAAMlB,MAAM,IAAI,IAAI,CAAC/B,KAAK,CAAC6B,OAAO,EAAE;MACrC,IAAI,CAACE,MAAM,CAAC7B,IAAI,CAACgD,UAAU,CAAC,IAAI,CAAC/B,KAAK,CAAClB,KAAK,GAAG,GAAG,CAAC,EAAE;QACjD;MACJ;MACA,IAAI8B,MAAM,CAACoB,IAAI,KAAK,GAAG,EAAE;QACrBF,aAAa,CAACG,IAAI,CAAC;UACf,GAAGrB,MAAM;UACT7B,IAAI,EAAE,CAAC,CAAC,EAAER,MAAM,CAACS,IAAI,EAAET,MAAM,CAACU,cAAc,EAAE,CAAC,CAAC,EAAEV,MAAM,CAACW,QAAQ,EAAE,IAAI,CAACc,KAAK,CAAClB,KAAK,EAAE8B,MAAM,CAAC7B,IAAI,CAAC;QACrG,CAAC,CAAC;MACN,CAAC,MACI,IAAI6B,MAAM,CAACgB,EAAE,CAACG,UAAU,CAAC,IAAI,CAAC/B,KAAK,CAAClB,KAAK,GAAG,GAAG,CAAC,EAAE;QACnDgD,aAAa,CAACG,IAAI,CAAC;UACf,GAAGrB,MAAM;UACT7B,IAAI,EAAE,CAAC,CAAC,EAAER,MAAM,CAACS,IAAI,EAAET,MAAM,CAACU,cAAc,EAAE,CAAC,CAAC,EAAEV,MAAM,CAACW,QAAQ,EAAE,IAAI,CAACc,KAAK,CAAClB,KAAK,EAAE8B,MAAM,CAAC7B,IAAI,CAAC,CAAC;UAClG6C,EAAE,EAAE,CAAC,CAAC,EAAErD,MAAM,CAACS,IAAI,EAAET,MAAM,CAACU,cAAc,EAAE,CAAC,CAAC,EAAEV,MAAM,CAACW,QAAQ,EAAE,IAAI,CAACc,KAAK,CAAClB,KAAK,EAAE8B,MAAM,CAACgB,EAAE,CAAC;QACjG,CAAC,CAAC;MACN;IACJ;IACA,OAAOE,aAAa;EACxB;EACA,CAACpD,WAAW,CAACwD,UAAU,IAAI;IACvB,OAAO,IAAI;EACf;EACAnB,SAAS,CAAChC,IAAI,EAAE;IACZ,OAAO,CAAC,CAAC,EAAER,MAAM,CAACS,IAAI,EAAE,IAAI,CAACgB,KAAK,CAAClB,KAAK,EAAE,CAAC,CAAC,EAAEP,MAAM,CAACwB,SAAS,EAAE,GAAG,GAAGhB,IAAI,CAAC,CAAC;EAChF;EACA8B,eAAe,CAACD,MAAM,EAAE;IACpB,IAAIuB,cAAc;IAClB,IAAIvB,MAAM,CAACoB,IAAI,KAAK,GAAG,EAAE;MACrBG,cAAc,GAAG;QACb,GAAGvB,MAAM;QACT7B,IAAI,EAAE,IAAI,CAACgC,SAAS,CAACH,MAAM,CAAC7B,IAAI,CAAC;QACjC6C,EAAE,EAAE,IAAI,CAACb,SAAS,CAACH,MAAM,CAACgB,EAAE;MAChC,CAAC;IACL,CAAC,MACI;MACDO,cAAc,GAAG;QACb,GAAGvB,MAAM;QACT7B,IAAI,EAAE,IAAI,CAACgC,SAAS,CAACH,MAAM,CAAC7B,IAAI;MACpC,CAAC;IACL;IACA,OAAOoD,cAAc;EACzB;AACJ;AACA/D,OAAO,CAACE,UAAU,GAAGA,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}