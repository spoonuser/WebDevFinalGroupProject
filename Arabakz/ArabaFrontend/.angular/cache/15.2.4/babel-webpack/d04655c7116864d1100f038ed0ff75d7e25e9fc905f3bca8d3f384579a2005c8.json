{"ast":null,"code":"'use strict';\n\n/**\n * `confirm` type prompt\n */\nconst chalk = require('chalk');\nconst {\n  take,\n  takeUntil\n} = require('rxjs/operators');\nconst Base = require('./base');\nconst observe = require('../utils/events');\nclass ConfirmPrompt extends Base {\n  constructor(questions, rl, answers) {\n    super(questions, rl, answers);\n    let rawDefault = true;\n    Object.assign(this.opt, {\n      filter(input) {\n        let value = rawDefault;\n        if (input != null && input !== '') {\n          value = /^y(es)?/i.test(input);\n        }\n        return value;\n      }\n    });\n    if (this.opt.default != null) {\n      rawDefault = Boolean(this.opt.default);\n    }\n    this.opt.default = rawDefault ? 'Y/n' : 'y/N';\n  }\n\n  /**\n   * Start the Inquiry session\n   * @param  {Function} cb   Callback when prompt is done\n   * @return {this}\n   */\n\n  _run(cb) {\n    this.done = cb;\n\n    // Once user confirm (enter key)\n    const events = observe(this.rl);\n    events.keypress.pipe(takeUntil(events.line)).forEach(this.onKeypress.bind(this));\n    events.line.pipe(take(1)).forEach(this.onEnd.bind(this));\n\n    // Init\n    this.render();\n    return this;\n  }\n\n  /**\n   * Render the prompt to screen\n   * @return {ConfirmPrompt} self\n   */\n\n  render(answer) {\n    let message = this.getQuestion();\n    if (typeof answer === 'boolean') {\n      message += chalk.cyan(answer ? 'Yes' : 'No');\n    } else {\n      message += this.rl.line;\n    }\n    this.screen.render(message);\n    return this;\n  }\n\n  /**\n   * When user press `enter` key\n   */\n\n  onEnd(input) {\n    this.status = 'answered';\n    const output = this.opt.filter(input);\n    this.render(output);\n    this.screen.done();\n    this.done(output);\n  }\n\n  /**\n   * When user press a key\n   */\n\n  onKeypress() {\n    this.render();\n  }\n}\nmodule.exports = ConfirmPrompt;","map":{"version":3,"names":["chalk","require","take","takeUntil","Base","observe","ConfirmPrompt","constructor","questions","rl","answers","rawDefault","Object","assign","opt","filter","input","value","test","default","Boolean","_run","cb","done","events","keypress","pipe","line","forEach","onKeypress","bind","onEnd","render","answer","message","getQuestion","cyan","screen","status","output","module","exports"],"sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/inquirer/lib/prompts/confirm.js"],"sourcesContent":["'use strict';\n/**\n * `confirm` type prompt\n */\n\nconst chalk = require('chalk');\nconst { take, takeUntil } = require('rxjs/operators');\nconst Base = require('./base');\nconst observe = require('../utils/events');\n\nclass ConfirmPrompt extends Base {\n  constructor(questions, rl, answers) {\n    super(questions, rl, answers);\n\n    let rawDefault = true;\n\n    Object.assign(this.opt, {\n      filter(input) {\n        let value = rawDefault;\n        if (input != null && input !== '') {\n          value = /^y(es)?/i.test(input);\n        }\n\n        return value;\n      },\n    });\n\n    if (this.opt.default != null) {\n      rawDefault = Boolean(this.opt.default);\n    }\n\n    this.opt.default = rawDefault ? 'Y/n' : 'y/N';\n  }\n\n  /**\n   * Start the Inquiry session\n   * @param  {Function} cb   Callback when prompt is done\n   * @return {this}\n   */\n\n  _run(cb) {\n    this.done = cb;\n\n    // Once user confirm (enter key)\n    const events = observe(this.rl);\n    events.keypress.pipe(takeUntil(events.line)).forEach(this.onKeypress.bind(this));\n\n    events.line.pipe(take(1)).forEach(this.onEnd.bind(this));\n\n    // Init\n    this.render();\n\n    return this;\n  }\n\n  /**\n   * Render the prompt to screen\n   * @return {ConfirmPrompt} self\n   */\n\n  render(answer) {\n    let message = this.getQuestion();\n\n    if (typeof answer === 'boolean') {\n      message += chalk.cyan(answer ? 'Yes' : 'No');\n    } else {\n      message += this.rl.line;\n    }\n\n    this.screen.render(message);\n\n    return this;\n  }\n\n  /**\n   * When user press `enter` key\n   */\n\n  onEnd(input) {\n    this.status = 'answered';\n\n    const output = this.opt.filter(input);\n    this.render(output);\n\n    this.screen.done();\n    this.done(output);\n  }\n\n  /**\n   * When user press a key\n   */\n\n  onKeypress() {\n    this.render();\n  }\n}\n\nmodule.exports = ConfirmPrompt;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;AAC9B,MAAM;EAAEC,IAAI;EAAEC;AAAU,CAAC,GAAGF,OAAO,CAAC,gBAAgB,CAAC;AACrD,MAAMG,IAAI,GAAGH,OAAO,CAAC,QAAQ,CAAC;AAC9B,MAAMI,OAAO,GAAGJ,OAAO,CAAC,iBAAiB,CAAC;AAE1C,MAAMK,aAAa,SAASF,IAAI,CAAC;EAC/BG,WAAW,CAACC,SAAS,EAAEC,EAAE,EAAEC,OAAO,EAAE;IAClC,KAAK,CAACF,SAAS,EAAEC,EAAE,EAAEC,OAAO,CAAC;IAE7B,IAAIC,UAAU,GAAG,IAAI;IAErBC,MAAM,CAACC,MAAM,CAAC,IAAI,CAACC,GAAG,EAAE;MACtBC,MAAM,CAACC,KAAK,EAAE;QACZ,IAAIC,KAAK,GAAGN,UAAU;QACtB,IAAIK,KAAK,IAAI,IAAI,IAAIA,KAAK,KAAK,EAAE,EAAE;UACjCC,KAAK,GAAG,UAAU,CAACC,IAAI,CAACF,KAAK,CAAC;QAChC;QAEA,OAAOC,KAAK;MACd;IACF,CAAC,CAAC;IAEF,IAAI,IAAI,CAACH,GAAG,CAACK,OAAO,IAAI,IAAI,EAAE;MAC5BR,UAAU,GAAGS,OAAO,CAAC,IAAI,CAACN,GAAG,CAACK,OAAO,CAAC;IACxC;IAEA,IAAI,CAACL,GAAG,CAACK,OAAO,GAAGR,UAAU,GAAG,KAAK,GAAG,KAAK;EAC/C;;EAEA;AACF;AACA;AACA;AACA;;EAEEU,IAAI,CAACC,EAAE,EAAE;IACP,IAAI,CAACC,IAAI,GAAGD,EAAE;;IAEd;IACA,MAAME,MAAM,GAAGnB,OAAO,CAAC,IAAI,CAACI,EAAE,CAAC;IAC/Be,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACvB,SAAS,CAACqB,MAAM,CAACG,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,IAAI,CAACC,UAAU,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IAEhFN,MAAM,CAACG,IAAI,CAACD,IAAI,CAACxB,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC0B,OAAO,CAAC,IAAI,CAACG,KAAK,CAACD,IAAI,CAAC,IAAI,CAAC,CAAC;;IAExD;IACA,IAAI,CAACE,MAAM,EAAE;IAEb,OAAO,IAAI;EACb;;EAEA;AACF;AACA;AACA;;EAEEA,MAAM,CAACC,MAAM,EAAE;IACb,IAAIC,OAAO,GAAG,IAAI,CAACC,WAAW,EAAE;IAEhC,IAAI,OAAOF,MAAM,KAAK,SAAS,EAAE;MAC/BC,OAAO,IAAIlC,KAAK,CAACoC,IAAI,CAACH,MAAM,GAAG,KAAK,GAAG,IAAI,CAAC;IAC9C,CAAC,MAAM;MACLC,OAAO,IAAI,IAAI,CAACzB,EAAE,CAACkB,IAAI;IACzB;IAEA,IAAI,CAACU,MAAM,CAACL,MAAM,CAACE,OAAO,CAAC;IAE3B,OAAO,IAAI;EACb;;EAEA;AACF;AACA;;EAEEH,KAAK,CAACf,KAAK,EAAE;IACX,IAAI,CAACsB,MAAM,GAAG,UAAU;IAExB,MAAMC,MAAM,GAAG,IAAI,CAACzB,GAAG,CAACC,MAAM,CAACC,KAAK,CAAC;IACrC,IAAI,CAACgB,MAAM,CAACO,MAAM,CAAC;IAEnB,IAAI,CAACF,MAAM,CAACd,IAAI,EAAE;IAClB,IAAI,CAACA,IAAI,CAACgB,MAAM,CAAC;EACnB;;EAEA;AACF;AACA;;EAEEV,UAAU,GAAG;IACX,IAAI,CAACG,MAAM,EAAE;EACf;AACF;AAEAQ,MAAM,CAACC,OAAO,GAAGnC,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}