{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UpdateRecorderBom = exports.UpdateRecorderBase = void 0;\nconst exception_1 = require(\"../exception/exception\");\nconst update_buffer_1 = require(\"../utility/update-buffer\");\nclass UpdateRecorderBase {\n  constructor(entry) {\n    this._original = Buffer.from(entry.content);\n    this._content = update_buffer_1.UpdateBufferBase.create(entry.content);\n    this._path = entry.path;\n  }\n  static createFromFileEntry(entry) {\n    const c0 = entry.content.byteLength > 0 && entry.content.readUInt8(0);\n    const c1 = entry.content.byteLength > 1 && entry.content.readUInt8(1);\n    const c2 = entry.content.byteLength > 2 && entry.content.readUInt8(2);\n    // Check if we're BOM.\n    if (c0 == 0xef && c1 == 0xbb && c2 == 0xbf) {\n      return new UpdateRecorderBom(entry);\n    } else if (c0 === 0xff && c1 == 0xfe) {\n      return new UpdateRecorderBom(entry);\n    } else if (c0 === 0xfe && c1 == 0xff) {\n      return new UpdateRecorderBom(entry);\n    }\n    return new UpdateRecorderBase(entry);\n  }\n  get path() {\n    return this._path;\n  }\n  // These just record changes.\n  insertLeft(index, content) {\n    this._content.insertLeft(index, typeof content == 'string' ? Buffer.from(content) : content);\n    return this;\n  }\n  insertRight(index, content) {\n    this._content.insertRight(index, typeof content == 'string' ? Buffer.from(content) : content);\n    return this;\n  }\n  remove(index, length) {\n    this._content.remove(index, length);\n    return this;\n  }\n  apply(content) {\n    if (!content.equals(this._content.original)) {\n      throw new exception_1.ContentHasMutatedException(this.path);\n    }\n    return this._content.generate();\n  }\n}\nexports.UpdateRecorderBase = UpdateRecorderBase;\nclass UpdateRecorderBom extends UpdateRecorderBase {\n  constructor(entry, _delta = 1) {\n    super(entry);\n    this._delta = _delta;\n  }\n  insertLeft(index, content) {\n    return super.insertLeft(index + this._delta, content);\n  }\n  insertRight(index, content) {\n    return super.insertRight(index + this._delta, content);\n  }\n  remove(index, length) {\n    return super.remove(index + this._delta, length);\n  }\n}\nexports.UpdateRecorderBom = UpdateRecorderBom;","map":{"version":3,"names":["Object","defineProperty","exports","value","UpdateRecorderBom","UpdateRecorderBase","exception_1","require","update_buffer_1","constructor","entry","_original","Buffer","from","content","_content","UpdateBufferBase","create","_path","path","createFromFileEntry","c0","byteLength","readUInt8","c1","c2","insertLeft","index","insertRight","remove","length","apply","equals","original","ContentHasMutatedException","generate","_delta"],"sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/@angular-devkit/schematics/src/tree/recorder.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateRecorderBom = exports.UpdateRecorderBase = void 0;\nconst exception_1 = require(\"../exception/exception\");\nconst update_buffer_1 = require(\"../utility/update-buffer\");\nclass UpdateRecorderBase {\n    constructor(entry) {\n        this._original = Buffer.from(entry.content);\n        this._content = update_buffer_1.UpdateBufferBase.create(entry.content);\n        this._path = entry.path;\n    }\n    static createFromFileEntry(entry) {\n        const c0 = entry.content.byteLength > 0 && entry.content.readUInt8(0);\n        const c1 = entry.content.byteLength > 1 && entry.content.readUInt8(1);\n        const c2 = entry.content.byteLength > 2 && entry.content.readUInt8(2);\n        // Check if we're BOM.\n        if (c0 == 0xef && c1 == 0xbb && c2 == 0xbf) {\n            return new UpdateRecorderBom(entry);\n        }\n        else if (c0 === 0xff && c1 == 0xfe) {\n            return new UpdateRecorderBom(entry);\n        }\n        else if (c0 === 0xfe && c1 == 0xff) {\n            return new UpdateRecorderBom(entry);\n        }\n        return new UpdateRecorderBase(entry);\n    }\n    get path() {\n        return this._path;\n    }\n    // These just record changes.\n    insertLeft(index, content) {\n        this._content.insertLeft(index, typeof content == 'string' ? Buffer.from(content) : content);\n        return this;\n    }\n    insertRight(index, content) {\n        this._content.insertRight(index, typeof content == 'string' ? Buffer.from(content) : content);\n        return this;\n    }\n    remove(index, length) {\n        this._content.remove(index, length);\n        return this;\n    }\n    apply(content) {\n        if (!content.equals(this._content.original)) {\n            throw new exception_1.ContentHasMutatedException(this.path);\n        }\n        return this._content.generate();\n    }\n}\nexports.UpdateRecorderBase = UpdateRecorderBase;\nclass UpdateRecorderBom extends UpdateRecorderBase {\n    constructor(entry, _delta = 1) {\n        super(entry);\n        this._delta = _delta;\n    }\n    insertLeft(index, content) {\n        return super.insertLeft(index + this._delta, content);\n    }\n    insertRight(index, content) {\n        return super.insertRight(index + this._delta, content);\n    }\n    remove(index, length) {\n        return super.remove(index + this._delta, length);\n    }\n}\nexports.UpdateRecorderBom = UpdateRecorderBom;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}