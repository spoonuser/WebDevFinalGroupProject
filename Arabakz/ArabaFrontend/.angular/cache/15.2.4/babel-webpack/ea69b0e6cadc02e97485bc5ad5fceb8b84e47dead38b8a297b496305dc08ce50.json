{"ast":null,"code":"'use strict';\n\n/**\n * Inquirer.js\n * A collection of common interactive command line user interfaces.\n */\nconst inquirer = module.exports;\n\n/**\n * Client interfaces\n */\n\ninquirer.prompts = {};\ninquirer.Separator = require('./objects/separator');\ninquirer.ui = {\n  BottomBar: require('./ui/bottom-bar'),\n  Prompt: require('./ui/prompt')\n};\n\n/**\n * Create a new self-contained prompt module.\n */\ninquirer.createPromptModule = function (opt) {\n  const promptModule = function (questions, answers) {\n    let ui;\n    try {\n      ui = new inquirer.ui.Prompt(promptModule.prompts, opt);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    const promise = ui.run(questions, answers);\n\n    // Monkey patch the UI on the promise object so\n    // that it remains publicly accessible.\n    promise.ui = ui;\n    return promise;\n  };\n  promptModule.prompts = {};\n\n  /**\n   * Register a prompt type\n   * @param {String} name     Prompt type name\n   * @param {Function} prompt Prompt constructor\n   * @return {inquirer}\n   */\n\n  promptModule.registerPrompt = function (name, prompt) {\n    promptModule.prompts[name] = prompt;\n    return this;\n  };\n\n  /**\n   * Register the defaults provider prompts\n   */\n\n  promptModule.restoreDefaultPrompts = function () {\n    this.registerPrompt('list', require('./prompts/list'));\n    this.registerPrompt('input', require('./prompts/input'));\n    this.registerPrompt('number', require('./prompts/number'));\n    this.registerPrompt('confirm', require('./prompts/confirm'));\n    this.registerPrompt('rawlist', require('./prompts/rawlist'));\n    this.registerPrompt('expand', require('./prompts/expand'));\n    this.registerPrompt('checkbox', require('./prompts/checkbox'));\n    this.registerPrompt('password', require('./prompts/password'));\n    this.registerPrompt('editor', require('./prompts/editor'));\n  };\n  promptModule.restoreDefaultPrompts();\n  return promptModule;\n};\n\n/**\n * Public CLI helper interface\n * @param  {Array|Object|Rx.Observable} questions - Questions settings array\n * @param  {Function} cb - Callback being passed the user answers\n * @return {inquirer.ui.Prompt}\n */\n\ninquirer.prompt = inquirer.createPromptModule();\n\n// Expose helper functions on the top level for easiest usage by common users\ninquirer.registerPrompt = function (name, prompt) {\n  inquirer.prompt.registerPrompt(name, prompt);\n};\ninquirer.restoreDefaultPrompts = function () {\n  inquirer.prompt.restoreDefaultPrompts();\n};","map":{"version":3,"names":["inquirer","module","exports","prompts","Separator","require","ui","BottomBar","Prompt","createPromptModule","opt","promptModule","questions","answers","error","Promise","reject","promise","run","registerPrompt","name","prompt","restoreDefaultPrompts"],"sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/inquirer/lib/inquirer.js"],"sourcesContent":["'use strict';\n/**\n * Inquirer.js\n * A collection of common interactive command line user interfaces.\n */\n\nconst inquirer = module.exports;\n\n/**\n * Client interfaces\n */\n\ninquirer.prompts = {};\n\ninquirer.Separator = require('./objects/separator');\n\ninquirer.ui = {\n  BottomBar: require('./ui/bottom-bar'),\n  Prompt: require('./ui/prompt'),\n};\n\n/**\n * Create a new self-contained prompt module.\n */\ninquirer.createPromptModule = function (opt) {\n  const promptModule = function (questions, answers) {\n    let ui;\n    try {\n      ui = new inquirer.ui.Prompt(promptModule.prompts, opt);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    const promise = ui.run(questions, answers);\n\n    // Monkey patch the UI on the promise object so\n    // that it remains publicly accessible.\n    promise.ui = ui;\n\n    return promise;\n  };\n\n  promptModule.prompts = {};\n\n  /**\n   * Register a prompt type\n   * @param {String} name     Prompt type name\n   * @param {Function} prompt Prompt constructor\n   * @return {inquirer}\n   */\n\n  promptModule.registerPrompt = function (name, prompt) {\n    promptModule.prompts[name] = prompt;\n    return this;\n  };\n\n  /**\n   * Register the defaults provider prompts\n   */\n\n  promptModule.restoreDefaultPrompts = function () {\n    this.registerPrompt('list', require('./prompts/list'));\n    this.registerPrompt('input', require('./prompts/input'));\n    this.registerPrompt('number', require('./prompts/number'));\n    this.registerPrompt('confirm', require('./prompts/confirm'));\n    this.registerPrompt('rawlist', require('./prompts/rawlist'));\n    this.registerPrompt('expand', require('./prompts/expand'));\n    this.registerPrompt('checkbox', require('./prompts/checkbox'));\n    this.registerPrompt('password', require('./prompts/password'));\n    this.registerPrompt('editor', require('./prompts/editor'));\n  };\n\n  promptModule.restoreDefaultPrompts();\n\n  return promptModule;\n};\n\n/**\n * Public CLI helper interface\n * @param  {Array|Object|Rx.Observable} questions - Questions settings array\n * @param  {Function} cb - Callback being passed the user answers\n * @return {inquirer.ui.Prompt}\n */\n\ninquirer.prompt = inquirer.createPromptModule();\n\n// Expose helper functions on the top level for easiest usage by common users\ninquirer.registerPrompt = function (name, prompt) {\n  inquirer.prompt.registerPrompt(name, prompt);\n};\n\ninquirer.restoreDefaultPrompts = function () {\n  inquirer.prompt.restoreDefaultPrompts();\n};\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AAEA,MAAMA,QAAQ,GAAGC,MAAM,CAACC,OAAO;;AAE/B;AACA;AACA;;AAEAF,QAAQ,CAACG,OAAO,GAAG,CAAC,CAAC;AAErBH,QAAQ,CAACI,SAAS,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAEnDL,QAAQ,CAACM,EAAE,GAAG;EACZC,SAAS,EAAEF,OAAO,CAAC,iBAAiB,CAAC;EACrCG,MAAM,EAAEH,OAAO,CAAC,aAAa;AAC/B,CAAC;;AAED;AACA;AACA;AACAL,QAAQ,CAACS,kBAAkB,GAAG,UAAUC,GAAG,EAAE;EAC3C,MAAMC,YAAY,GAAG,UAAUC,SAAS,EAAEC,OAAO,EAAE;IACjD,IAAIP,EAAE;IACN,IAAI;MACFA,EAAE,GAAG,IAAIN,QAAQ,CAACM,EAAE,CAACE,MAAM,CAACG,YAAY,CAACR,OAAO,EAAEO,GAAG,CAAC;IACxD,CAAC,CAAC,OAAOI,KAAK,EAAE;MACd,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;IAC9B;IACA,MAAMG,OAAO,GAAGX,EAAE,CAACY,GAAG,CAACN,SAAS,EAAEC,OAAO,CAAC;;IAE1C;IACA;IACAI,OAAO,CAACX,EAAE,GAAGA,EAAE;IAEf,OAAOW,OAAO;EAChB,CAAC;EAEDN,YAAY,CAACR,OAAO,GAAG,CAAC,CAAC;;EAEzB;AACF;AACA;AACA;AACA;AACA;;EAEEQ,YAAY,CAACQ,cAAc,GAAG,UAAUC,IAAI,EAAEC,MAAM,EAAE;IACpDV,YAAY,CAACR,OAAO,CAACiB,IAAI,CAAC,GAAGC,MAAM;IACnC,OAAO,IAAI;EACb,CAAC;;EAED;AACF;AACA;;EAEEV,YAAY,CAACW,qBAAqB,GAAG,YAAY;IAC/C,IAAI,CAACH,cAAc,CAAC,MAAM,EAAEd,OAAO,CAAC,gBAAgB,CAAC,CAAC;IACtD,IAAI,CAACc,cAAc,CAAC,OAAO,EAAEd,OAAO,CAAC,iBAAiB,CAAC,CAAC;IACxD,IAAI,CAACc,cAAc,CAAC,QAAQ,EAAEd,OAAO,CAAC,kBAAkB,CAAC,CAAC;IAC1D,IAAI,CAACc,cAAc,CAAC,SAAS,EAAEd,OAAO,CAAC,mBAAmB,CAAC,CAAC;IAC5D,IAAI,CAACc,cAAc,CAAC,SAAS,EAAEd,OAAO,CAAC,mBAAmB,CAAC,CAAC;IAC5D,IAAI,CAACc,cAAc,CAAC,QAAQ,EAAEd,OAAO,CAAC,kBAAkB,CAAC,CAAC;IAC1D,IAAI,CAACc,cAAc,CAAC,UAAU,EAAEd,OAAO,CAAC,oBAAoB,CAAC,CAAC;IAC9D,IAAI,CAACc,cAAc,CAAC,UAAU,EAAEd,OAAO,CAAC,oBAAoB,CAAC,CAAC;IAC9D,IAAI,CAACc,cAAc,CAAC,QAAQ,EAAEd,OAAO,CAAC,kBAAkB,CAAC,CAAC;EAC5D,CAAC;EAEDM,YAAY,CAACW,qBAAqB,EAAE;EAEpC,OAAOX,YAAY;AACrB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEAX,QAAQ,CAACqB,MAAM,GAAGrB,QAAQ,CAACS,kBAAkB,EAAE;;AAE/C;AACAT,QAAQ,CAACmB,cAAc,GAAG,UAAUC,IAAI,EAAEC,MAAM,EAAE;EAChDrB,QAAQ,CAACqB,MAAM,CAACF,cAAc,CAACC,IAAI,EAAEC,MAAM,CAAC;AAC9C,CAAC;AAEDrB,QAAQ,CAACsB,qBAAqB,GAAG,YAAY;EAC3CtB,QAAQ,CAACqB,MAAM,CAACC,qBAAqB,EAAE;AACzC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}