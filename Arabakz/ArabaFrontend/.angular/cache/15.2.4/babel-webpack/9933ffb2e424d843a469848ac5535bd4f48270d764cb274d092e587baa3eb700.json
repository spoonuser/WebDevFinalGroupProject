{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.htmlSelectorFormat = void 0;\n// As per https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\n// * Without mandatory `-` as the application prefix will generally cover its inclusion\n// * And an allowance for upper alpha characters\n// NOTE: This should eventually be broken out into two formats: full and partial (allows for prefix)\nconst unicodeRanges = [[0xc0, 0xd6], [0xd8, 0xf6], [0xf8, 0x37d], [0x37f, 0x1fff], [0x200c, 0x200d], [0x203f, 0x2040], [0x2070, 0x218f], [0x2c00, 0x2fef], [0x3001, 0xd7ff], [0xf900, 0xfdcf], [0xfdf0, 0xfffd], [0x10000, 0xeffff]];\nfunction isValidElementName(name) {\n  let regex = '^[a-zA-Z][';\n  regex += '-.0-9_a-zA-Z\\\\u{B7}';\n  for (const range of unicodeRanges) {\n    regex += `\\\\u{${range[0].toString(16)}}-\\\\u{${range[1].toString(16)}}`;\n  }\n  regex += ']*$';\n  return new RegExp(regex, 'u').test(name);\n}\nexports.htmlSelectorFormat = {\n  name: 'html-selector',\n  formatter: {\n    async: false,\n    validate: name => typeof name === 'string' && isValidElementName(name)\n  }\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","htmlSelectorFormat","unicodeRanges","isValidElementName","name","regex","range","toString","RegExp","test","formatter","async","validate"],"sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/@angular-devkit/schematics/src/formats/html-selector.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.htmlSelectorFormat = void 0;\n// As per https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\n// * Without mandatory `-` as the application prefix will generally cover its inclusion\n// * And an allowance for upper alpha characters\n// NOTE: This should eventually be broken out into two formats: full and partial (allows for prefix)\nconst unicodeRanges = [\n    [0xc0, 0xd6],\n    [0xd8, 0xf6],\n    [0xf8, 0x37d],\n    [0x37f, 0x1fff],\n    [0x200c, 0x200d],\n    [0x203f, 0x2040],\n    [0x2070, 0x218f],\n    [0x2c00, 0x2fef],\n    [0x3001, 0xd7ff],\n    [0xf900, 0xfdcf],\n    [0xfdf0, 0xfffd],\n    [0x10000, 0xeffff],\n];\nfunction isValidElementName(name) {\n    let regex = '^[a-zA-Z][';\n    regex += '-.0-9_a-zA-Z\\\\u{B7}';\n    for (const range of unicodeRanges) {\n        regex += `\\\\u{${range[0].toString(16)}}-\\\\u{${range[1].toString(16)}}`;\n    }\n    regex += ']*$';\n    return new RegExp(regex, 'u').test(name);\n}\nexports.htmlSelectorFormat = {\n    name: 'html-selector',\n    formatter: {\n        async: false,\n        validate: (name) => typeof name === 'string' && isValidElementName(name),\n    },\n};\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,kBAAkB,GAAG,KAAK,CAAC;AACnC;AACA;AACA;AACA;AACA,MAAMC,aAAa,GAAG,CAClB,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,KAAK,CAAC,EACb,CAAC,KAAK,EAAE,MAAM,CAAC,EACf,CAAC,MAAM,EAAE,MAAM,CAAC,EAChB,CAAC,MAAM,EAAE,MAAM,CAAC,EAChB,CAAC,MAAM,EAAE,MAAM,CAAC,EAChB,CAAC,MAAM,EAAE,MAAM,CAAC,EAChB,CAAC,MAAM,EAAE,MAAM,CAAC,EAChB,CAAC,MAAM,EAAE,MAAM,CAAC,EAChB,CAAC,MAAM,EAAE,MAAM,CAAC,EAChB,CAAC,OAAO,EAAE,OAAO,CAAC,CACrB;AACD,SAASC,kBAAkB,CAACC,IAAI,EAAE;EAC9B,IAAIC,KAAK,GAAG,YAAY;EACxBA,KAAK,IAAI,qBAAqB;EAC9B,KAAK,MAAMC,KAAK,IAAIJ,aAAa,EAAE;IAC/BG,KAAK,IAAK,OAAMC,KAAK,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAE,SAAQD,KAAK,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAE,GAAE;EAC1E;EACAF,KAAK,IAAI,KAAK;EACd,OAAO,IAAIG,MAAM,CAACH,KAAK,EAAE,GAAG,CAAC,CAACI,IAAI,CAACL,IAAI,CAAC;AAC5C;AACAL,OAAO,CAACE,kBAAkB,GAAG;EACzBG,IAAI,EAAE,eAAe;EACrBM,SAAS,EAAE;IACPC,KAAK,EAAE,KAAK;IACZC,QAAQ,EAAGR,IAAI,IAAK,OAAOA,IAAI,KAAK,QAAQ,IAAID,kBAAkB,CAACC,IAAI;EAC3E;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}