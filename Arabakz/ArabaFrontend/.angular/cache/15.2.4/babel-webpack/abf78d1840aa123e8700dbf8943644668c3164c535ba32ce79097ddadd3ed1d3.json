{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SchematicEngine = exports.TaskScheduler = exports.CollectionImpl = exports.UnknownTaskDependencyException = exports.UnregisteredTaskException = exports.SchematicEngineConflictingException = exports.PrivateSchematicException = exports.UnknownSchematicException = exports.CircularCollectionException = exports.UnknownCollectionException = exports.UnknownUrlSourceProtocol = void 0;\nconst core_1 = require(\"@angular-devkit/core\");\nconst rxjs_1 = require(\"rxjs\");\nconst operators_1 = require(\"rxjs/operators\");\nconst interface_1 = require(\"../tree/interface\");\nconst null_1 = require(\"../tree/null\");\nconst static_1 = require(\"../tree/static\");\nconst schematic_1 = require(\"./schematic\");\nclass UnknownUrlSourceProtocol extends core_1.BaseException {\n  constructor(url) {\n    super(`Unknown Protocol on url \"${url}\".`);\n  }\n}\nexports.UnknownUrlSourceProtocol = UnknownUrlSourceProtocol;\nclass UnknownCollectionException extends core_1.BaseException {\n  constructor(name) {\n    super(`Unknown collection \"${name}\".`);\n  }\n}\nexports.UnknownCollectionException = UnknownCollectionException;\nclass CircularCollectionException extends core_1.BaseException {\n  constructor(name) {\n    super(`Circular collection reference \"${name}\".`);\n  }\n}\nexports.CircularCollectionException = CircularCollectionException;\nclass UnknownSchematicException extends core_1.BaseException {\n  constructor(name, collection) {\n    super(`Schematic \"${name}\" not found in collection \"${collection.name}\".`);\n  }\n}\nexports.UnknownSchematicException = UnknownSchematicException;\nclass PrivateSchematicException extends core_1.BaseException {\n  constructor(name, collection) {\n    super(`Schematic \"${name}\" not found in collection \"${collection.name}\".`);\n  }\n}\nexports.PrivateSchematicException = PrivateSchematicException;\nclass SchematicEngineConflictingException extends core_1.BaseException {\n  constructor() {\n    super(`A schematic was called from a different engine as its parent.`);\n  }\n}\nexports.SchematicEngineConflictingException = SchematicEngineConflictingException;\nclass UnregisteredTaskException extends core_1.BaseException {\n  constructor(name, schematic) {\n    const addendum = schematic ? ` in schematic \"${schematic.name}\"` : '';\n    super(`Unregistered task \"${name}\"${addendum}.`);\n  }\n}\nexports.UnregisteredTaskException = UnregisteredTaskException;\nclass UnknownTaskDependencyException extends core_1.BaseException {\n  constructor(id) {\n    super(`Unknown task dependency [ID: ${id.id}].`);\n  }\n}\nexports.UnknownTaskDependencyException = UnknownTaskDependencyException;\nclass CollectionImpl {\n  constructor(_description, _engine, baseDescriptions) {\n    this._description = _description;\n    this._engine = _engine;\n    this.baseDescriptions = baseDescriptions;\n  }\n  get description() {\n    return this._description;\n  }\n  get name() {\n    return this.description.name || '<unknown>';\n  }\n  createSchematic(name, allowPrivate = false) {\n    return this._engine.createSchematic(name, this, allowPrivate);\n  }\n  listSchematicNames(includeHidden) {\n    return this._engine.listSchematicNames(this, includeHidden);\n  }\n}\nexports.CollectionImpl = CollectionImpl;\nclass TaskScheduler {\n  constructor(_context) {\n    this._context = _context;\n    this._queue = new core_1.PriorityQueue((x, y) => x.priority - y.priority);\n    this._taskIds = new Map();\n  }\n  _calculatePriority(dependencies) {\n    if (dependencies.size === 0) {\n      return 0;\n    }\n    const prio = [...dependencies].reduce((prio, task) => prio + task.priority, 1);\n    return prio;\n  }\n  _mapDependencies(dependencies) {\n    if (!dependencies) {\n      return new Set();\n    }\n    const tasks = dependencies.map(dep => {\n      const task = this._taskIds.get(dep);\n      if (!task) {\n        throw new UnknownTaskDependencyException(dep);\n      }\n      return task;\n    });\n    return new Set(tasks);\n  }\n  schedule(taskConfiguration) {\n    const dependencies = this._mapDependencies(taskConfiguration.dependencies);\n    const priority = this._calculatePriority(dependencies);\n    const task = {\n      id: TaskScheduler._taskIdCounter++,\n      priority,\n      configuration: taskConfiguration,\n      context: this._context\n    };\n    this._queue.push(task);\n    const id = {\n      id: task.id\n    };\n    this._taskIds.set(id, task);\n    return id;\n  }\n  finalize() {\n    const tasks = this._queue.toArray();\n    this._queue.clear();\n    this._taskIds.clear();\n    return tasks;\n  }\n}\nexports.TaskScheduler = TaskScheduler;\nTaskScheduler._taskIdCounter = 1;\nclass SchematicEngine {\n  constructor(_host, _workflow) {\n    this._host = _host;\n    this._workflow = _workflow;\n    this._collectionCache = new Map();\n    this._schematicCache = new WeakMap();\n    this._taskSchedulers = new Array();\n  }\n  get workflow() {\n    return this._workflow || null;\n  }\n  get defaultMergeStrategy() {\n    return this._host.defaultMergeStrategy || interface_1.MergeStrategy.Default;\n  }\n  createCollection(name, requester) {\n    let collection = this._collectionCache.get(name);\n    if (collection) {\n      return collection;\n    }\n    const [description, bases] = this._createCollectionDescription(name, requester === null || requester === void 0 ? void 0 : requester.description);\n    collection = new CollectionImpl(description, this, bases);\n    this._collectionCache.set(name, collection);\n    this._schematicCache.set(collection, new Map());\n    return collection;\n  }\n  _createCollectionDescription(name, requester, parentNames) {\n    const description = this._host.createCollectionDescription(name, requester);\n    if (!description) {\n      throw new UnknownCollectionException(name);\n    }\n    if (parentNames && parentNames.has(description.name)) {\n      throw new CircularCollectionException(name);\n    }\n    const bases = new Array();\n    if (description.extends) {\n      parentNames = (parentNames || new Set()).add(description.name);\n      for (const baseName of description.extends) {\n        const [base, baseBases] = this._createCollectionDescription(baseName, description, new Set(parentNames));\n        bases.unshift(base, ...baseBases);\n      }\n    }\n    return [description, bases];\n  }\n  createContext(schematic, parent, executionOptions) {\n    // Check for inconsistencies.\n    if (parent && parent.engine && parent.engine !== this) {\n      throw new SchematicEngineConflictingException();\n    }\n    let interactive = true;\n    if (executionOptions && executionOptions.interactive != undefined) {\n      interactive = executionOptions.interactive;\n    } else if (parent && parent.interactive != undefined) {\n      interactive = parent.interactive;\n    }\n    let context = {\n      debug: parent && parent.debug || false,\n      engine: this,\n      logger: parent && parent.logger && parent.logger.createChild(schematic.description.name) || new core_1.logging.NullLogger(),\n      schematic,\n      strategy: parent && parent.strategy !== undefined ? parent.strategy : this.defaultMergeStrategy,\n      interactive,\n      addTask\n    };\n    const maybeNewContext = this._host.transformContext(context);\n    if (maybeNewContext) {\n      context = maybeNewContext;\n    }\n    const taskScheduler = new TaskScheduler(context);\n    const host = this._host;\n    this._taskSchedulers.push(taskScheduler);\n    function addTask(task, dependencies) {\n      const config = task.toConfiguration();\n      if (!host.hasTaskExecutor(config.name)) {\n        throw new UnregisteredTaskException(config.name, schematic.description);\n      }\n      config.dependencies = config.dependencies || [];\n      if (dependencies) {\n        config.dependencies.unshift(...dependencies);\n      }\n      return taskScheduler.schedule(config);\n    }\n    return context;\n  }\n  createSchematic(name, collection, allowPrivate = false) {\n    const schematicMap = this._schematicCache.get(collection);\n    let schematic = schematicMap === null || schematicMap === void 0 ? void 0 : schematicMap.get(name);\n    if (schematic) {\n      return schematic;\n    }\n    let collectionDescription = collection.description;\n    let description = this._host.createSchematicDescription(name, collection.description);\n    if (!description) {\n      if (collection.baseDescriptions) {\n        for (const base of collection.baseDescriptions) {\n          description = this._host.createSchematicDescription(name, base);\n          if (description) {\n            collectionDescription = base;\n            break;\n          }\n        }\n      }\n      if (!description) {\n        // Report the error for the top level schematic collection\n        throw new UnknownSchematicException(name, collection.description);\n      }\n    }\n    if (description.private && !allowPrivate) {\n      throw new PrivateSchematicException(name, collection.description);\n    }\n    const factory = this._host.getSchematicRuleFactory(description, collectionDescription);\n    schematic = new schematic_1.SchematicImpl(description, factory, collection, this);\n    schematicMap === null || schematicMap === void 0 ? void 0 : schematicMap.set(name, schematic);\n    return schematic;\n  }\n  listSchematicNames(collection, includeHidden) {\n    const names = this._host.listSchematicNames(collection.description, includeHidden);\n    if (collection.baseDescriptions) {\n      for (const base of collection.baseDescriptions) {\n        names.push(...this._host.listSchematicNames(base, includeHidden));\n      }\n    }\n    // remove duplicates\n    return [...new Set(names)].sort();\n  }\n  transformOptions(schematic, options, context) {\n    return this._host.transformOptions(schematic.description, options, context);\n  }\n  createSourceFromUrl(url, context) {\n    switch (url.protocol) {\n      case 'null:':\n        return () => new null_1.NullTree();\n      case 'empty:':\n        return () => (0, static_1.empty)();\n      default:\n        const hostSource = this._host.createSourceFromUrl(url, context);\n        if (!hostSource) {\n          throw new UnknownUrlSourceProtocol(url.toString());\n        }\n        return hostSource;\n    }\n  }\n  executePostTasks() {\n    const executors = new Map();\n    const taskObservable = (0, rxjs_1.from)(this._taskSchedulers).pipe((0, operators_1.concatMap)(scheduler => scheduler.finalize()), (0, operators_1.concatMap)(task => {\n      const {\n        name,\n        options\n      } = task.configuration;\n      const executor = executors.get(name);\n      if (executor) {\n        return executor(options, task.context);\n      }\n      return this._host.createTaskExecutor(name).pipe((0, operators_1.concatMap)(executor => {\n        executors.set(name, executor);\n        return executor(options, task.context);\n      }));\n    }));\n    return taskObservable;\n  }\n}\nexports.SchematicEngine = SchematicEngine;","map":{"version":3,"names":["Object","defineProperty","exports","value","SchematicEngine","TaskScheduler","CollectionImpl","UnknownTaskDependencyException","UnregisteredTaskException","SchematicEngineConflictingException","PrivateSchematicException","UnknownSchematicException","CircularCollectionException","UnknownCollectionException","UnknownUrlSourceProtocol","core_1","require","rxjs_1","operators_1","interface_1","null_1","static_1","schematic_1","BaseException","constructor","url","name","collection","schematic","addendum","id","_description","_engine","baseDescriptions","description","createSchematic","allowPrivate","listSchematicNames","includeHidden","_context","_queue","PriorityQueue","x","y","priority","_taskIds","Map","_calculatePriority","dependencies","size","prio","reduce","task","_mapDependencies","Set","tasks","map","dep","get","schedule","taskConfiguration","_taskIdCounter","configuration","context","push","set","finalize","toArray","clear","_host","_workflow","_collectionCache","_schematicCache","WeakMap","_taskSchedulers","Array","workflow","defaultMergeStrategy","MergeStrategy","Default","createCollection","requester","bases","_createCollectionDescription","parentNames","createCollectionDescription","has","extends","add","baseName","base","baseBases","unshift","createContext","parent","executionOptions","engine","interactive","undefined","debug","logger","createChild","logging","NullLogger","strategy","addTask","maybeNewContext","transformContext","taskScheduler","host","config","toConfiguration","hasTaskExecutor","schematicMap","collectionDescription","createSchematicDescription","private","factory","getSchematicRuleFactory","SchematicImpl","names","sort","transformOptions","options","createSourceFromUrl","protocol","NullTree","empty","hostSource","toString","executePostTasks","executors","taskObservable","from","pipe","concatMap","scheduler","executor","createTaskExecutor"],"sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/@angular-devkit/schematics/src/engine/engine.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SchematicEngine = exports.TaskScheduler = exports.CollectionImpl = exports.UnknownTaskDependencyException = exports.UnregisteredTaskException = exports.SchematicEngineConflictingException = exports.PrivateSchematicException = exports.UnknownSchematicException = exports.CircularCollectionException = exports.UnknownCollectionException = exports.UnknownUrlSourceProtocol = void 0;\nconst core_1 = require(\"@angular-devkit/core\");\nconst rxjs_1 = require(\"rxjs\");\nconst operators_1 = require(\"rxjs/operators\");\nconst interface_1 = require(\"../tree/interface\");\nconst null_1 = require(\"../tree/null\");\nconst static_1 = require(\"../tree/static\");\nconst schematic_1 = require(\"./schematic\");\nclass UnknownUrlSourceProtocol extends core_1.BaseException {\n    constructor(url) {\n        super(`Unknown Protocol on url \"${url}\".`);\n    }\n}\nexports.UnknownUrlSourceProtocol = UnknownUrlSourceProtocol;\nclass UnknownCollectionException extends core_1.BaseException {\n    constructor(name) {\n        super(`Unknown collection \"${name}\".`);\n    }\n}\nexports.UnknownCollectionException = UnknownCollectionException;\nclass CircularCollectionException extends core_1.BaseException {\n    constructor(name) {\n        super(`Circular collection reference \"${name}\".`);\n    }\n}\nexports.CircularCollectionException = CircularCollectionException;\nclass UnknownSchematicException extends core_1.BaseException {\n    constructor(name, collection) {\n        super(`Schematic \"${name}\" not found in collection \"${collection.name}\".`);\n    }\n}\nexports.UnknownSchematicException = UnknownSchematicException;\nclass PrivateSchematicException extends core_1.BaseException {\n    constructor(name, collection) {\n        super(`Schematic \"${name}\" not found in collection \"${collection.name}\".`);\n    }\n}\nexports.PrivateSchematicException = PrivateSchematicException;\nclass SchematicEngineConflictingException extends core_1.BaseException {\n    constructor() {\n        super(`A schematic was called from a different engine as its parent.`);\n    }\n}\nexports.SchematicEngineConflictingException = SchematicEngineConflictingException;\nclass UnregisteredTaskException extends core_1.BaseException {\n    constructor(name, schematic) {\n        const addendum = schematic ? ` in schematic \"${schematic.name}\"` : '';\n        super(`Unregistered task \"${name}\"${addendum}.`);\n    }\n}\nexports.UnregisteredTaskException = UnregisteredTaskException;\nclass UnknownTaskDependencyException extends core_1.BaseException {\n    constructor(id) {\n        super(`Unknown task dependency [ID: ${id.id}].`);\n    }\n}\nexports.UnknownTaskDependencyException = UnknownTaskDependencyException;\nclass CollectionImpl {\n    constructor(_description, _engine, baseDescriptions) {\n        this._description = _description;\n        this._engine = _engine;\n        this.baseDescriptions = baseDescriptions;\n    }\n    get description() {\n        return this._description;\n    }\n    get name() {\n        return this.description.name || '<unknown>';\n    }\n    createSchematic(name, allowPrivate = false) {\n        return this._engine.createSchematic(name, this, allowPrivate);\n    }\n    listSchematicNames(includeHidden) {\n        return this._engine.listSchematicNames(this, includeHidden);\n    }\n}\nexports.CollectionImpl = CollectionImpl;\nclass TaskScheduler {\n    constructor(_context) {\n        this._context = _context;\n        this._queue = new core_1.PriorityQueue((x, y) => x.priority - y.priority);\n        this._taskIds = new Map();\n    }\n    _calculatePriority(dependencies) {\n        if (dependencies.size === 0) {\n            return 0;\n        }\n        const prio = [...dependencies].reduce((prio, task) => prio + task.priority, 1);\n        return prio;\n    }\n    _mapDependencies(dependencies) {\n        if (!dependencies) {\n            return new Set();\n        }\n        const tasks = dependencies.map((dep) => {\n            const task = this._taskIds.get(dep);\n            if (!task) {\n                throw new UnknownTaskDependencyException(dep);\n            }\n            return task;\n        });\n        return new Set(tasks);\n    }\n    schedule(taskConfiguration) {\n        const dependencies = this._mapDependencies(taskConfiguration.dependencies);\n        const priority = this._calculatePriority(dependencies);\n        const task = {\n            id: TaskScheduler._taskIdCounter++,\n            priority,\n            configuration: taskConfiguration,\n            context: this._context,\n        };\n        this._queue.push(task);\n        const id = { id: task.id };\n        this._taskIds.set(id, task);\n        return id;\n    }\n    finalize() {\n        const tasks = this._queue.toArray();\n        this._queue.clear();\n        this._taskIds.clear();\n        return tasks;\n    }\n}\nexports.TaskScheduler = TaskScheduler;\nTaskScheduler._taskIdCounter = 1;\nclass SchematicEngine {\n    constructor(_host, _workflow) {\n        this._host = _host;\n        this._workflow = _workflow;\n        this._collectionCache = new Map();\n        this._schematicCache = new WeakMap();\n        this._taskSchedulers = new Array();\n    }\n    get workflow() {\n        return this._workflow || null;\n    }\n    get defaultMergeStrategy() {\n        return this._host.defaultMergeStrategy || interface_1.MergeStrategy.Default;\n    }\n    createCollection(name, requester) {\n        let collection = this._collectionCache.get(name);\n        if (collection) {\n            return collection;\n        }\n        const [description, bases] = this._createCollectionDescription(name, requester === null || requester === void 0 ? void 0 : requester.description);\n        collection = new CollectionImpl(description, this, bases);\n        this._collectionCache.set(name, collection);\n        this._schematicCache.set(collection, new Map());\n        return collection;\n    }\n    _createCollectionDescription(name, requester, parentNames) {\n        const description = this._host.createCollectionDescription(name, requester);\n        if (!description) {\n            throw new UnknownCollectionException(name);\n        }\n        if (parentNames && parentNames.has(description.name)) {\n            throw new CircularCollectionException(name);\n        }\n        const bases = new Array();\n        if (description.extends) {\n            parentNames = (parentNames || new Set()).add(description.name);\n            for (const baseName of description.extends) {\n                const [base, baseBases] = this._createCollectionDescription(baseName, description, new Set(parentNames));\n                bases.unshift(base, ...baseBases);\n            }\n        }\n        return [description, bases];\n    }\n    createContext(schematic, parent, executionOptions) {\n        // Check for inconsistencies.\n        if (parent && parent.engine && parent.engine !== this) {\n            throw new SchematicEngineConflictingException();\n        }\n        let interactive = true;\n        if (executionOptions && executionOptions.interactive != undefined) {\n            interactive = executionOptions.interactive;\n        }\n        else if (parent && parent.interactive != undefined) {\n            interactive = parent.interactive;\n        }\n        let context = {\n            debug: (parent && parent.debug) || false,\n            engine: this,\n            logger: (parent && parent.logger && parent.logger.createChild(schematic.description.name)) ||\n                new core_1.logging.NullLogger(),\n            schematic,\n            strategy: parent && parent.strategy !== undefined ? parent.strategy : this.defaultMergeStrategy,\n            interactive,\n            addTask,\n        };\n        const maybeNewContext = this._host.transformContext(context);\n        if (maybeNewContext) {\n            context = maybeNewContext;\n        }\n        const taskScheduler = new TaskScheduler(context);\n        const host = this._host;\n        this._taskSchedulers.push(taskScheduler);\n        function addTask(task, dependencies) {\n            const config = task.toConfiguration();\n            if (!host.hasTaskExecutor(config.name)) {\n                throw new UnregisteredTaskException(config.name, schematic.description);\n            }\n            config.dependencies = config.dependencies || [];\n            if (dependencies) {\n                config.dependencies.unshift(...dependencies);\n            }\n            return taskScheduler.schedule(config);\n        }\n        return context;\n    }\n    createSchematic(name, collection, allowPrivate = false) {\n        const schematicMap = this._schematicCache.get(collection);\n        let schematic = schematicMap === null || schematicMap === void 0 ? void 0 : schematicMap.get(name);\n        if (schematic) {\n            return schematic;\n        }\n        let collectionDescription = collection.description;\n        let description = this._host.createSchematicDescription(name, collection.description);\n        if (!description) {\n            if (collection.baseDescriptions) {\n                for (const base of collection.baseDescriptions) {\n                    description = this._host.createSchematicDescription(name, base);\n                    if (description) {\n                        collectionDescription = base;\n                        break;\n                    }\n                }\n            }\n            if (!description) {\n                // Report the error for the top level schematic collection\n                throw new UnknownSchematicException(name, collection.description);\n            }\n        }\n        if (description.private && !allowPrivate) {\n            throw new PrivateSchematicException(name, collection.description);\n        }\n        const factory = this._host.getSchematicRuleFactory(description, collectionDescription);\n        schematic = new schematic_1.SchematicImpl(description, factory, collection, this);\n        schematicMap === null || schematicMap === void 0 ? void 0 : schematicMap.set(name, schematic);\n        return schematic;\n    }\n    listSchematicNames(collection, includeHidden) {\n        const names = this._host.listSchematicNames(collection.description, includeHidden);\n        if (collection.baseDescriptions) {\n            for (const base of collection.baseDescriptions) {\n                names.push(...this._host.listSchematicNames(base, includeHidden));\n            }\n        }\n        // remove duplicates\n        return [...new Set(names)].sort();\n    }\n    transformOptions(schematic, options, context) {\n        return this._host.transformOptions(schematic.description, options, context);\n    }\n    createSourceFromUrl(url, context) {\n        switch (url.protocol) {\n            case 'null:':\n                return () => new null_1.NullTree();\n            case 'empty:':\n                return () => (0, static_1.empty)();\n            default:\n                const hostSource = this._host.createSourceFromUrl(url, context);\n                if (!hostSource) {\n                    throw new UnknownUrlSourceProtocol(url.toString());\n                }\n                return hostSource;\n        }\n    }\n    executePostTasks() {\n        const executors = new Map();\n        const taskObservable = (0, rxjs_1.from)(this._taskSchedulers).pipe((0, operators_1.concatMap)((scheduler) => scheduler.finalize()), (0, operators_1.concatMap)((task) => {\n            const { name, options } = task.configuration;\n            const executor = executors.get(name);\n            if (executor) {\n                return executor(options, task.context);\n            }\n            return this._host.createTaskExecutor(name).pipe((0, operators_1.concatMap)((executor) => {\n                executors.set(name, executor);\n                return executor(options, task.context);\n            }));\n        }));\n        return taskObservable;\n    }\n}\nexports.SchematicEngine = SchematicEngine;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}