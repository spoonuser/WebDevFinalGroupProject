{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VERSION = void 0;\nconst fs_1 = require(\"fs\");\nconst path_1 = require(\"path\");\n// Same structure as used in framework packages\nclass Version {\n  constructor(full) {\n    this.full = full;\n    const [major, minor, patch] = full.split('-', 1)[0].split('.', 3);\n    this.major = major;\n    this.minor = minor;\n    this.patch = patch;\n  }\n}\n// TODO: Convert this to use build-time version stamping after flipping the build script to use bazel\n// export const VERSION = new Version('15.1.6');\nexports.VERSION = new Version(JSON.parse((0, fs_1.readFileSync)((0, path_1.resolve)(__dirname, '../../package.json'), 'utf-8')).version);","map":{"version":3,"names":["Object","defineProperty","exports","value","VERSION","fs_1","require","path_1","Version","constructor","full","major","minor","patch","split","JSON","parse","readFileSync","resolve","__dirname","version"],"sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/@angular/cli/src/utilities/version.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VERSION = void 0;\nconst fs_1 = require(\"fs\");\nconst path_1 = require(\"path\");\n// Same structure as used in framework packages\nclass Version {\n    constructor(full) {\n        this.full = full;\n        const [major, minor, patch] = full.split('-', 1)[0].split('.', 3);\n        this.major = major;\n        this.minor = minor;\n        this.patch = patch;\n    }\n}\n// TODO: Convert this to use build-time version stamping after flipping the build script to use bazel\n// export const VERSION = new Version('15.1.6');\nexports.VERSION = new Version(JSON.parse((0, fs_1.readFileSync)((0, path_1.resolve)(__dirname, '../../package.json'), 'utf-8')).version);\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AACxB,MAAMC,IAAI,GAAGC,OAAO,CAAC,IAAI,CAAC;AAC1B,MAAMC,MAAM,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC9B;AACA,MAAME,OAAO,CAAC;EACVC,WAAW,CAACC,IAAI,EAAE;IACd,IAAI,CAACA,IAAI,GAAGA,IAAI;IAChB,MAAM,CAACC,KAAK,EAAEC,KAAK,EAAEC,KAAK,CAAC,GAAGH,IAAI,CAACI,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC;IACjE,IAAI,CAACH,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,KAAK,GAAGA,KAAK;EACtB;AACJ;AACA;AACA;AACAX,OAAO,CAACE,OAAO,GAAG,IAAII,OAAO,CAACO,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,EAAEX,IAAI,CAACY,YAAY,EAAE,CAAC,CAAC,EAAEV,MAAM,CAACW,OAAO,EAAEC,SAAS,EAAE,oBAAoB,CAAC,EAAE,OAAO,CAAC,CAAC,CAACC,OAAO,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}