{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./auth.service\";\nexport class AuthoGuard {\n  constructor(router, authService) {\n    this.router = router;\n    this.authService = authService;\n  }\n  canActivate(route, state) {\n    if (this.authService.isLoggedIn()) {\n      return true;\n    }\n    this.router.navigate(['login']);\n    return false;\n  }\n}\nAuthoGuard.ɵfac = function AuthoGuard_Factory(t) {\n  return new (t || AuthoGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AuthService));\n};\nAuthoGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthoGuard,\n  factory: AuthoGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AASA,OAAM,MAAOA,UAAU;EACrBC,YAAoBC,MAAc,EACfC,WAAwB;IADvB,WAAM,GAAND,MAAM;IACP,gBAAW,GAAXC,WAAW;EAC9B;EACAC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAC1B,IAAG,IAAI,CAACH,WAAW,CAACI,UAAU,EAAE,EAAC;MAC/B,OAAO,IAAI;;IAEX,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IAC/B,OAAO,KAAK;EAChB;;AAZWR,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;SAAVA,UAAU;EAAAS,SAAVT,UAAU;EAAAU,YAFT;AAAM","names":["AuthoGuard","constructor","router","authService","canActivate","route","state","isLoggedIn","navigate","factory","providedIn"],"sourceRoot":"","sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/src/app/autho.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Route, Router, RouterStateSnapshot, UrlTree} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {AuthService} from \"./auth.service\";\nimport {MyDB} from \"./db\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthoGuard implements CanActivate {\n  constructor(private router: Router,\n              public authService: AuthService) {\n  }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if(this.authService.isLoggedIn()){\n      return true;\n    }\n      this.router.navigate(['login']);\n      return false;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}