{"ast":null,"code":"'use strict';\n\nconst MuteStream = require('mute-stream');\nconst readline = require('readline');\n\n/**\n * Base interface class other can inherits from\n */\n\nclass UI {\n  constructor(opt) {\n    // Instantiate the Readline interface\n    // @Note: Don't reassign if already present (allow test to override the Stream)\n    if (!this.rl) {\n      this.rl = readline.createInterface(setupReadlineOptions(opt));\n    }\n    this.rl.resume();\n    this.onForceClose = this.onForceClose.bind(this);\n\n    // Make sure new prompt start on a newline when closing\n    process.on('exit', this.onForceClose);\n\n    // Terminate process on SIGINT (which will call process.on('exit') in return)\n    this.rl.on('SIGINT', this.onForceClose);\n  }\n\n  /**\n   * Handle the ^C exit\n   * @return {null}\n   */\n\n  onForceClose() {\n    this.close();\n    process.kill(process.pid, 'SIGINT');\n    console.log('');\n  }\n\n  /**\n   * Close the interface and cleanup listeners\n   */\n\n  close() {\n    // Remove events listeners\n    this.rl.removeListener('SIGINT', this.onForceClose);\n    process.removeListener('exit', this.onForceClose);\n    this.rl.output.unmute();\n    if (this.activePrompt && typeof this.activePrompt.close === 'function') {\n      this.activePrompt.close();\n    }\n\n    // Close the readline\n    this.rl.output.end();\n    this.rl.pause();\n    this.rl.close();\n  }\n}\nfunction setupReadlineOptions(opt = {}) {\n  // Inquirer 8.x:\n  // opt.skipTTYChecks = opt.skipTTYChecks === undefined ? opt.input !== undefined : opt.skipTTYChecks;\n  opt.skipTTYChecks = opt.skipTTYChecks === undefined ? true : opt.skipTTYChecks;\n\n  // Default `input` to stdin\n  const input = opt.input || process.stdin;\n\n  // Check if prompt is being called in TTY environment\n  // If it isn't return a failed promise\n  if (!opt.skipTTYChecks && !input.isTTY) {\n    const nonTtyError = new Error('Prompts can not be meaningfully rendered in non-TTY environments');\n    nonTtyError.isTtyError = true;\n    throw nonTtyError;\n  }\n\n  // Add mute capabilities to the output\n  const ms = new MuteStream();\n  ms.pipe(opt.output || process.stdout);\n  const output = ms;\n  return {\n    terminal: true,\n    ...opt,\n    input,\n    output\n  };\n}\nmodule.exports = UI;","map":{"version":3,"names":["MuteStream","require","readline","UI","constructor","opt","rl","createInterface","setupReadlineOptions","resume","onForceClose","bind","process","on","close","kill","pid","console","log","removeListener","output","unmute","activePrompt","end","pause","skipTTYChecks","undefined","input","stdin","isTTY","nonTtyError","Error","isTtyError","ms","pipe","stdout","terminal","module","exports"],"sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/inquirer/lib/ui/baseUI.js"],"sourcesContent":["'use strict';\nconst MuteStream = require('mute-stream');\nconst readline = require('readline');\n\n/**\n * Base interface class other can inherits from\n */\n\nclass UI {\n  constructor(opt) {\n    // Instantiate the Readline interface\n    // @Note: Don't reassign if already present (allow test to override the Stream)\n    if (!this.rl) {\n      this.rl = readline.createInterface(setupReadlineOptions(opt));\n    }\n\n    this.rl.resume();\n\n    this.onForceClose = this.onForceClose.bind(this);\n\n    // Make sure new prompt start on a newline when closing\n    process.on('exit', this.onForceClose);\n\n    // Terminate process on SIGINT (which will call process.on('exit') in return)\n    this.rl.on('SIGINT', this.onForceClose);\n  }\n\n  /**\n   * Handle the ^C exit\n   * @return {null}\n   */\n\n  onForceClose() {\n    this.close();\n    process.kill(process.pid, 'SIGINT');\n    console.log('');\n  }\n\n  /**\n   * Close the interface and cleanup listeners\n   */\n\n  close() {\n    // Remove events listeners\n    this.rl.removeListener('SIGINT', this.onForceClose);\n    process.removeListener('exit', this.onForceClose);\n\n    this.rl.output.unmute();\n\n    if (this.activePrompt && typeof this.activePrompt.close === 'function') {\n      this.activePrompt.close();\n    }\n\n    // Close the readline\n    this.rl.output.end();\n    this.rl.pause();\n    this.rl.close();\n  }\n}\n\nfunction setupReadlineOptions(opt = {}) {\n  // Inquirer 8.x:\n  // opt.skipTTYChecks = opt.skipTTYChecks === undefined ? opt.input !== undefined : opt.skipTTYChecks;\n  opt.skipTTYChecks = opt.skipTTYChecks === undefined ? true : opt.skipTTYChecks;\n\n  // Default `input` to stdin\n  const input = opt.input || process.stdin;\n\n  // Check if prompt is being called in TTY environment\n  // If it isn't return a failed promise\n  if (!opt.skipTTYChecks && !input.isTTY) {\n    const nonTtyError = new Error(\n      'Prompts can not be meaningfully rendered in non-TTY environments'\n    );\n    nonTtyError.isTtyError = true;\n    throw nonTtyError;\n  }\n\n  // Add mute capabilities to the output\n  const ms = new MuteStream();\n  ms.pipe(opt.output || process.stdout);\n  const output = ms;\n\n  return {\n    terminal: true,\n    ...opt,\n    input,\n    output,\n  };\n}\n\nmodule.exports = UI;\n"],"mappings":"AAAA,YAAY;;AACZ,MAAMA,UAAU,GAAGC,OAAO,CAAC,aAAa,CAAC;AACzC,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAU,CAAC;;AAEpC;AACA;AACA;;AAEA,MAAME,EAAE,CAAC;EACPC,WAAW,CAACC,GAAG,EAAE;IACf;IACA;IACA,IAAI,CAAC,IAAI,CAACC,EAAE,EAAE;MACZ,IAAI,CAACA,EAAE,GAAGJ,QAAQ,CAACK,eAAe,CAACC,oBAAoB,CAACH,GAAG,CAAC,CAAC;IAC/D;IAEA,IAAI,CAACC,EAAE,CAACG,MAAM,EAAE;IAEhB,IAAI,CAACC,YAAY,GAAG,IAAI,CAACA,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC;;IAEhD;IACAC,OAAO,CAACC,EAAE,CAAC,MAAM,EAAE,IAAI,CAACH,YAAY,CAAC;;IAErC;IACA,IAAI,CAACJ,EAAE,CAACO,EAAE,CAAC,QAAQ,EAAE,IAAI,CAACH,YAAY,CAAC;EACzC;;EAEA;AACF;AACA;AACA;;EAEEA,YAAY,GAAG;IACb,IAAI,CAACI,KAAK,EAAE;IACZF,OAAO,CAACG,IAAI,CAACH,OAAO,CAACI,GAAG,EAAE,QAAQ,CAAC;IACnCC,OAAO,CAACC,GAAG,CAAC,EAAE,CAAC;EACjB;;EAEA;AACF;AACA;;EAEEJ,KAAK,GAAG;IACN;IACA,IAAI,CAACR,EAAE,CAACa,cAAc,CAAC,QAAQ,EAAE,IAAI,CAACT,YAAY,CAAC;IACnDE,OAAO,CAACO,cAAc,CAAC,MAAM,EAAE,IAAI,CAACT,YAAY,CAAC;IAEjD,IAAI,CAACJ,EAAE,CAACc,MAAM,CAACC,MAAM,EAAE;IAEvB,IAAI,IAAI,CAACC,YAAY,IAAI,OAAO,IAAI,CAACA,YAAY,CAACR,KAAK,KAAK,UAAU,EAAE;MACtE,IAAI,CAACQ,YAAY,CAACR,KAAK,EAAE;IAC3B;;IAEA;IACA,IAAI,CAACR,EAAE,CAACc,MAAM,CAACG,GAAG,EAAE;IACpB,IAAI,CAACjB,EAAE,CAACkB,KAAK,EAAE;IACf,IAAI,CAAClB,EAAE,CAACQ,KAAK,EAAE;EACjB;AACF;AAEA,SAASN,oBAAoB,CAACH,GAAG,GAAG,CAAC,CAAC,EAAE;EACtC;EACA;EACAA,GAAG,CAACoB,aAAa,GAAGpB,GAAG,CAACoB,aAAa,KAAKC,SAAS,GAAG,IAAI,GAAGrB,GAAG,CAACoB,aAAa;;EAE9E;EACA,MAAME,KAAK,GAAGtB,GAAG,CAACsB,KAAK,IAAIf,OAAO,CAACgB,KAAK;;EAExC;EACA;EACA,IAAI,CAACvB,GAAG,CAACoB,aAAa,IAAI,CAACE,KAAK,CAACE,KAAK,EAAE;IACtC,MAAMC,WAAW,GAAG,IAAIC,KAAK,CAC3B,kEAAkE,CACnE;IACDD,WAAW,CAACE,UAAU,GAAG,IAAI;IAC7B,MAAMF,WAAW;EACnB;;EAEA;EACA,MAAMG,EAAE,GAAG,IAAIjC,UAAU,EAAE;EAC3BiC,EAAE,CAACC,IAAI,CAAC7B,GAAG,CAACe,MAAM,IAAIR,OAAO,CAACuB,MAAM,CAAC;EACrC,MAAMf,MAAM,GAAGa,EAAE;EAEjB,OAAO;IACLG,QAAQ,EAAE,IAAI;IACd,GAAG/B,GAAG;IACNsB,KAAK;IACLP;EACF,CAAC;AACH;AAEAiB,MAAM,CAACC,OAAO,GAAGnC,EAAE"},"metadata":{},"sourceType":"script","externalDependencies":[]}