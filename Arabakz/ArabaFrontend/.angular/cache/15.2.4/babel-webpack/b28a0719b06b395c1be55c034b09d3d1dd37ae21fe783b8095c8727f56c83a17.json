{"ast":null,"code":"'use strict';\n\nconst assert = require('assert');\nconst _ = {\n  filter: require('lodash/filter'),\n  map: require('lodash/map')\n};\nconst Separator = require('./separator');\nconst Choice = require('./choice');\n\n/**\n * Choices collection\n * Collection of multiple `choice` object\n */\nmodule.exports = class Choices {\n  /** @param {Array} choices  All `choice` to keep in the collection */\n  constructor(choices, answers) {\n    this.choices = choices.map(val => {\n      if (val.type === 'separator') {\n        if (!(val instanceof Separator)) {\n          val = new Separator(val.line);\n        }\n        return val;\n      }\n      return new Choice(val, answers);\n    });\n    this.realChoices = this.choices.filter(Separator.exclude).filter(item => !item.disabled);\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.choices.length;\n      },\n      set(val) {\n        this.choices.length = val;\n      }\n    });\n    Object.defineProperty(this, 'realLength', {\n      get() {\n        return this.realChoices.length;\n      },\n      set() {\n        throw new Error('Cannot set `realLength` of a Choices collection');\n      }\n    });\n  }\n\n  /**\n   * Get a valid choice from the collection\n   * @param  {Number} selector  The selected choice index\n   * @return {Choice|Undefined} Return the matched choice or undefined\n   */\n\n  getChoice(selector) {\n    assert(typeof selector === 'number');\n    return this.realChoices[selector];\n  }\n\n  /**\n   * Get a raw element from the collection\n   * @param  {Number} selector  The selected index value\n   * @return {Choice|Undefined} Return the matched choice or undefined\n   */\n\n  get(selector) {\n    assert(typeof selector === 'number');\n    return this.choices[selector];\n  }\n\n  /**\n   * Match the valid choices against a where clause\n   * @param  {Object} whereClause Lodash `where` clause\n   * @return {Array}              Matching choices or empty array\n   */\n\n  where(whereClause) {\n    return _.filter(this.realChoices, whereClause);\n  }\n\n  /**\n   * Pluck a particular key from the choices\n   * @param  {String} propertyName Property name to select\n   * @return {Array}               Selected properties\n   */\n\n  pluck(propertyName) {\n    return _.map(this.realChoices, propertyName);\n  }\n\n  // Expose usual Array methods\n  indexOf(...args) {\n    return this.choices.indexOf(...args);\n  }\n  forEach(...args) {\n    return this.choices.forEach(...args);\n  }\n  filter(...args) {\n    return this.choices.filter(...args);\n  }\n  reduce(...args) {\n    return this.choices.reduce(...args);\n  }\n  find(func) {\n    return this.choices.find(func);\n  }\n  push(...args) {\n    const objs = args.map(val => new Choice(val));\n    this.choices.push(...objs);\n    this.realChoices = this.choices.filter(Separator.exclude).filter(item => !item.disabled);\n    return this.choices;\n  }\n};","map":{"version":3,"names":["assert","require","_","filter","map","Separator","Choice","module","exports","Choices","constructor","choices","answers","val","type","line","realChoices","exclude","item","disabled","Object","defineProperty","get","length","set","Error","getChoice","selector","where","whereClause","pluck","propertyName","indexOf","args","forEach","reduce","find","func","push","objs"],"sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/inquirer/lib/objects/choices.js"],"sourcesContent":["'use strict';\nconst assert = require('assert');\nconst _ = {\n  filter: require('lodash/filter'),\n  map: require('lodash/map'),\n};\nconst Separator = require('./separator');\nconst Choice = require('./choice');\n\n/**\n * Choices collection\n * Collection of multiple `choice` object\n */\nmodule.exports = class Choices {\n  /** @param {Array} choices  All `choice` to keep in the collection */\n  constructor(choices, answers) {\n    this.choices = choices.map((val) => {\n      if (val.type === 'separator') {\n        if (!(val instanceof Separator)) {\n          val = new Separator(val.line);\n        }\n\n        return val;\n      }\n\n      return new Choice(val, answers);\n    });\n\n    this.realChoices = this.choices\n      .filter(Separator.exclude)\n      .filter((item) => !item.disabled);\n\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.choices.length;\n      },\n      set(val) {\n        this.choices.length = val;\n      },\n    });\n\n    Object.defineProperty(this, 'realLength', {\n      get() {\n        return this.realChoices.length;\n      },\n      set() {\n        throw new Error('Cannot set `realLength` of a Choices collection');\n      },\n    });\n  }\n\n  /**\n   * Get a valid choice from the collection\n   * @param  {Number} selector  The selected choice index\n   * @return {Choice|Undefined} Return the matched choice or undefined\n   */\n\n  getChoice(selector) {\n    assert(typeof selector === 'number');\n    return this.realChoices[selector];\n  }\n\n  /**\n   * Get a raw element from the collection\n   * @param  {Number} selector  The selected index value\n   * @return {Choice|Undefined} Return the matched choice or undefined\n   */\n\n  get(selector) {\n    assert(typeof selector === 'number');\n    return this.choices[selector];\n  }\n\n  /**\n   * Match the valid choices against a where clause\n   * @param  {Object} whereClause Lodash `where` clause\n   * @return {Array}              Matching choices or empty array\n   */\n\n  where(whereClause) {\n    return _.filter(this.realChoices, whereClause);\n  }\n\n  /**\n   * Pluck a particular key from the choices\n   * @param  {String} propertyName Property name to select\n   * @return {Array}               Selected properties\n   */\n\n  pluck(propertyName) {\n    return _.map(this.realChoices, propertyName);\n  }\n\n  // Expose usual Array methods\n  indexOf(...args) {\n    return this.choices.indexOf(...args);\n  }\n\n  forEach(...args) {\n    return this.choices.forEach(...args);\n  }\n\n  filter(...args) {\n    return this.choices.filter(...args);\n  }\n\n  reduce(...args) {\n    return this.choices.reduce(...args);\n  }\n\n  find(func) {\n    return this.choices.find(func);\n  }\n\n  push(...args) {\n    const objs = args.map((val) => new Choice(val));\n    this.choices.push(...objs);\n    this.realChoices = this.choices\n      .filter(Separator.exclude)\n      .filter((item) => !item.disabled);\n    return this.choices;\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}