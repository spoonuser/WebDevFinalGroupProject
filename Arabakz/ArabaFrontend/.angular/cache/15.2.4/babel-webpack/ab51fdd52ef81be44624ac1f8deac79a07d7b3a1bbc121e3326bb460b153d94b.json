{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatLimitDefinition = void 0;\nconst ajv_1 = require(\"ajv\");\nconst codegen_1 = require(\"ajv/dist/compile/codegen\");\nconst ops = codegen_1.operators;\nconst KWDs = {\n  formatMaximum: {\n    okStr: \"<=\",\n    ok: ops.LTE,\n    fail: ops.GT\n  },\n  formatMinimum: {\n    okStr: \">=\",\n    ok: ops.GTE,\n    fail: ops.LT\n  },\n  formatExclusiveMaximum: {\n    okStr: \"<\",\n    ok: ops.LT,\n    fail: ops.GTE\n  },\n  formatExclusiveMinimum: {\n    okStr: \">\",\n    ok: ops.GT,\n    fail: ops.LTE\n  }\n};\nconst error = {\n  message: ({\n    keyword,\n    schemaCode\n  }) => codegen_1.str`should be ${KWDs[keyword].okStr} ${schemaCode}`,\n  params: ({\n    keyword,\n    schemaCode\n  }) => codegen_1._`{comparison: ${KWDs[keyword].okStr}, limit: ${schemaCode}}`\n};\nexports.formatLimitDefinition = {\n  keyword: Object.keys(KWDs),\n  type: \"string\",\n  schemaType: \"string\",\n  $data: true,\n  error,\n  code(cxt) {\n    const {\n      gen,\n      data,\n      schemaCode,\n      keyword,\n      it\n    } = cxt;\n    const {\n      opts,\n      self\n    } = it;\n    if (!opts.validateFormats) return;\n    const fCxt = new ajv_1.KeywordCxt(it, self.RULES.all.format.definition, \"format\");\n    if (fCxt.$data) validate$DataFormat();else validateFormat();\n    function validate$DataFormat() {\n      const fmts = gen.scopeValue(\"formats\", {\n        ref: self.formats,\n        code: opts.code.formats\n      });\n      const fmt = gen.const(\"fmt\", codegen_1._`${fmts}[${fCxt.schemaCode}]`);\n      cxt.fail$data(codegen_1.or(codegen_1._`typeof ${fmt} != \"object\"`, codegen_1._`${fmt} instanceof RegExp`, codegen_1._`typeof ${fmt}.compare != \"function\"`, compareCode(fmt)));\n    }\n    function validateFormat() {\n      const format = fCxt.schema;\n      const fmtDef = self.formats[format];\n      if (!fmtDef || fmtDef === true) return;\n      if (typeof fmtDef != \"object\" || fmtDef instanceof RegExp || typeof fmtDef.compare != \"function\") {\n        throw new Error(`\"${keyword}\": format \"${format}\" does not define \"compare\" function`);\n      }\n      const fmt = gen.scopeValue(\"formats\", {\n        key: format,\n        ref: fmtDef,\n        code: opts.code.formats ? codegen_1._`${opts.code.formats}${codegen_1.getProperty(format)}` : undefined\n      });\n      cxt.fail$data(compareCode(fmt));\n    }\n    function compareCode(fmt) {\n      return codegen_1._`${fmt}.compare(${data}, ${schemaCode}) ${KWDs[keyword].fail} 0`;\n    }\n  },\n  dependencies: [\"format\"]\n};\nconst formatLimitPlugin = ajv => {\n  ajv.addKeyword(exports.formatLimitDefinition);\n  return ajv;\n};\nexports.default = formatLimitPlugin;","map":{"version":3,"names":["Object","defineProperty","exports","value","formatLimitDefinition","ajv_1","require","codegen_1","ops","operators","KWDs","formatMaximum","okStr","ok","LTE","fail","GT","formatMinimum","GTE","LT","formatExclusiveMaximum","formatExclusiveMinimum","error","message","keyword","schemaCode","str","params","_","keys","type","schemaType","$data","code","cxt","gen","data","it","opts","self","validateFormats","fCxt","KeywordCxt","RULES","all","format","definition","validate$DataFormat","validateFormat","fmts","scopeValue","ref","formats","fmt","const","fail$data","or","compareCode","schema","fmtDef","RegExp","compare","Error","key","getProperty","undefined","dependencies","formatLimitPlugin","ajv","addKeyword","default"],"sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/ajv-formats/dist/limit.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatLimitDefinition = void 0;\nconst ajv_1 = require(\"ajv\");\nconst codegen_1 = require(\"ajv/dist/compile/codegen\");\nconst ops = codegen_1.operators;\nconst KWDs = {\n    formatMaximum: { okStr: \"<=\", ok: ops.LTE, fail: ops.GT },\n    formatMinimum: { okStr: \">=\", ok: ops.GTE, fail: ops.LT },\n    formatExclusiveMaximum: { okStr: \"<\", ok: ops.LT, fail: ops.GTE },\n    formatExclusiveMinimum: { okStr: \">\", ok: ops.GT, fail: ops.LTE },\n};\nconst error = {\n    message: ({ keyword, schemaCode }) => codegen_1.str `should be ${KWDs[keyword].okStr} ${schemaCode}`,\n    params: ({ keyword, schemaCode }) => codegen_1._ `{comparison: ${KWDs[keyword].okStr}, limit: ${schemaCode}}`,\n};\nexports.formatLimitDefinition = {\n    keyword: Object.keys(KWDs),\n    type: \"string\",\n    schemaType: \"string\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, data, schemaCode, keyword, it } = cxt;\n        const { opts, self } = it;\n        if (!opts.validateFormats)\n            return;\n        const fCxt = new ajv_1.KeywordCxt(it, self.RULES.all.format.definition, \"format\");\n        if (fCxt.$data)\n            validate$DataFormat();\n        else\n            validateFormat();\n        function validate$DataFormat() {\n            const fmts = gen.scopeValue(\"formats\", {\n                ref: self.formats,\n                code: opts.code.formats,\n            });\n            const fmt = gen.const(\"fmt\", codegen_1._ `${fmts}[${fCxt.schemaCode}]`);\n            cxt.fail$data(codegen_1.or(codegen_1._ `typeof ${fmt} != \"object\"`, codegen_1._ `${fmt} instanceof RegExp`, codegen_1._ `typeof ${fmt}.compare != \"function\"`, compareCode(fmt)));\n        }\n        function validateFormat() {\n            const format = fCxt.schema;\n            const fmtDef = self.formats[format];\n            if (!fmtDef || fmtDef === true)\n                return;\n            if (typeof fmtDef != \"object\" ||\n                fmtDef instanceof RegExp ||\n                typeof fmtDef.compare != \"function\") {\n                throw new Error(`\"${keyword}\": format \"${format}\" does not define \"compare\" function`);\n            }\n            const fmt = gen.scopeValue(\"formats\", {\n                key: format,\n                ref: fmtDef,\n                code: opts.code.formats ? codegen_1._ `${opts.code.formats}${codegen_1.getProperty(format)}` : undefined,\n            });\n            cxt.fail$data(compareCode(fmt));\n        }\n        function compareCode(fmt) {\n            return codegen_1._ `${fmt}.compare(${data}, ${schemaCode}) ${KWDs[keyword].fail} 0`;\n        }\n    },\n    dependencies: [\"format\"],\n};\nconst formatLimitPlugin = (ajv) => {\n    ajv.addKeyword(exports.formatLimitDefinition);\n    return ajv;\n};\nexports.default = formatLimitPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}