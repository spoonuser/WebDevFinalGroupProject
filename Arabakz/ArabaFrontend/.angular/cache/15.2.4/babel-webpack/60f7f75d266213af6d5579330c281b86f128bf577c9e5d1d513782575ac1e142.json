{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst resolve_1 = require(\"./resolve\");\nclass MissingRefError extends Error {\n  constructor(resolver, baseId, ref, msg) {\n    super(msg || `can't resolve reference ${ref} from id ${baseId}`);\n    this.missingRef = (0, resolve_1.resolveUrl)(resolver, baseId, ref);\n    this.missingSchema = (0, resolve_1.normalizeId)((0, resolve_1.getFullPath)(resolver, this.missingRef));\n  }\n}\nexports.default = MissingRefError;","map":{"version":3,"names":["Object","defineProperty","exports","value","resolve_1","require","MissingRefError","Error","constructor","resolver","baseId","ref","msg","missingRef","resolveUrl","missingSchema","normalizeId","getFullPath","default"],"sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/ajv/dist/compile/ref_error.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst resolve_1 = require(\"./resolve\");\nclass MissingRefError extends Error {\n    constructor(resolver, baseId, ref, msg) {\n        super(msg || `can't resolve reference ${ref} from id ${baseId}`);\n        this.missingRef = (0, resolve_1.resolveUrl)(resolver, baseId, ref);\n        this.missingSchema = (0, resolve_1.normalizeId)((0, resolve_1.getFullPath)(resolver, this.missingRef));\n    }\n}\nexports.default = MissingRefError;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,SAAS,GAAGC,OAAO,CAAC,WAAW,CAAC;AACtC,MAAMC,eAAe,SAASC,KAAK,CAAC;EAChCC,WAAW,CAACC,QAAQ,EAAEC,MAAM,EAAEC,GAAG,EAAEC,GAAG,EAAE;IACpC,KAAK,CAACA,GAAG,IAAK,2BAA0BD,GAAI,YAAWD,MAAO,EAAC,CAAC;IAChE,IAAI,CAACG,UAAU,GAAG,CAAC,CAAC,EAAET,SAAS,CAACU,UAAU,EAAEL,QAAQ,EAAEC,MAAM,EAAEC,GAAG,CAAC;IAClE,IAAI,CAACI,aAAa,GAAG,CAAC,CAAC,EAAEX,SAAS,CAACY,WAAW,EAAE,CAAC,CAAC,EAAEZ,SAAS,CAACa,WAAW,EAAER,QAAQ,EAAE,IAAI,CAACI,UAAU,CAAC,CAAC;EAC1G;AACJ;AACAX,OAAO,CAACgB,OAAO,GAAGZ,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}