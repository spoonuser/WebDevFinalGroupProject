{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _asyncToGenerator = require(\"/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.scheduleTargetAndForget = exports.targetFromTargetString = exports.targetStringFromTarget = exports.fromAsyncIterable = exports.isBuilderOutput = exports.BuilderProgressState = void 0;\nconst rxjs_1 = require(\"rxjs\");\nconst operators_1 = require(\"rxjs/operators\");\nconst progress_schema_1 = require(\"./progress-schema\");\nObject.defineProperty(exports, \"BuilderProgressState\", {\n  enumerable: true,\n  get: function () {\n    return progress_schema_1.State;\n  }\n});\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction isBuilderOutput(obj) {\n  if (!obj || typeof obj.then === 'function' || typeof obj.subscribe === 'function') {\n    return false;\n  }\n  if (typeof obj[Symbol.asyncIterator] === 'function') {\n    return false;\n  }\n  return typeof obj.success === 'boolean';\n}\nexports.isBuilderOutput = isBuilderOutput;\nfunction fromAsyncIterable(iterable) {\n  return new rxjs_1.Observable(subscriber => {\n    handleAsyncIterator(subscriber, iterable[Symbol.asyncIterator]()).then(() => subscriber.complete(), error => subscriber.error(error));\n  });\n}\nexports.fromAsyncIterable = fromAsyncIterable;\nfunction handleAsyncIterator(_x, _x2) {\n  return _handleAsyncIterator.apply(this, arguments);\n}\n/**\n * Returns a string of \"project:target[:configuration]\" for the target object.\n */\nfunction _handleAsyncIterator() {\n  _handleAsyncIterator = _asyncToGenerator(function* (subscriber, iterator) {\n    var _a;\n    const teardown = new Promise(resolve => subscriber.add(() => resolve()));\n    try {\n      while (!subscriber.closed) {\n        const result = yield Promise.race([teardown, iterator.next()]);\n        if (!result || result.done) {\n          break;\n        }\n        subscriber.next(result.value);\n      }\n    } finally {\n      yield (_a = iterator.return) === null || _a === void 0 ? void 0 : _a.call(iterator);\n    }\n  });\n  return _handleAsyncIterator.apply(this, arguments);\n}\nfunction targetStringFromTarget({\n  project,\n  target,\n  configuration\n}) {\n  return `${project}:${target}${configuration !== undefined ? ':' + configuration : ''}`;\n}\nexports.targetStringFromTarget = targetStringFromTarget;\n/**\n * Return a Target tuple from a string.\n */\nfunction targetFromTargetString(str) {\n  const tuple = str.split(/:/, 3);\n  if (tuple.length < 2) {\n    throw new Error('Invalid target string: ' + JSON.stringify(str));\n  }\n  return {\n    project: tuple[0],\n    target: tuple[1],\n    ...(tuple[2] !== undefined && {\n      configuration: tuple[2]\n    })\n  };\n}\nexports.targetFromTargetString = targetFromTargetString;\n/**\n * Schedule a target, and forget about its run. This will return an observable of outputs, that\n * as a a teardown will stop the target from running. This means that the Run object this returns\n * should not be shared.\n *\n * The reason this is not part of the Context interface is to keep the Context as normal form as\n * possible. This is really an utility that people would implement in their project.\n *\n * @param context The context of your current execution.\n * @param target The target to schedule.\n * @param overrides Overrides that are used in the target.\n * @param scheduleOptions Additional scheduling options.\n */\nfunction scheduleTargetAndForget(context, target, overrides, scheduleOptions) {\n  let resolve = null;\n  const promise = new Promise(r => resolve = r);\n  context.addTeardown(() => promise);\n  return (0, rxjs_1.from)(context.scheduleTarget(target, overrides, scheduleOptions)).pipe((0, operators_1.switchMap)(run => new rxjs_1.Observable(observer => {\n    const subscription = run.output.subscribe(observer);\n    return () => {\n      subscription.unsubscribe();\n      // We can properly ignore the floating promise as it's a \"reverse\" promise; the teardown\n      // is waiting for the resolve.\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      run.stop().then(resolve);\n    };\n  })));\n}\nexports.scheduleTargetAndForget = scheduleTargetAndForget;","map":{"version":3,"names":["Object","defineProperty","exports","value","scheduleTargetAndForget","targetFromTargetString","targetStringFromTarget","fromAsyncIterable","isBuilderOutput","BuilderProgressState","rxjs_1","require","operators_1","progress_schema_1","enumerable","get","State","obj","then","subscribe","Symbol","asyncIterator","success","iterable","Observable","subscriber","handleAsyncIterator","complete","error","iterator","_a","teardown","Promise","resolve","add","closed","result","race","next","done","return","call","project","target","configuration","undefined","str","tuple","split","length","Error","JSON","stringify","context","overrides","scheduleOptions","promise","r","addTeardown","from","scheduleTarget","pipe","switchMap","run","observer","subscription","output","unsubscribe","stop"],"sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/@angular/cli/node_modules/@angular-devkit/architect/src/api.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.scheduleTargetAndForget = exports.targetFromTargetString = exports.targetStringFromTarget = exports.fromAsyncIterable = exports.isBuilderOutput = exports.BuilderProgressState = void 0;\nconst rxjs_1 = require(\"rxjs\");\nconst operators_1 = require(\"rxjs/operators\");\nconst progress_schema_1 = require(\"./progress-schema\");\nObject.defineProperty(exports, \"BuilderProgressState\", { enumerable: true, get: function () { return progress_schema_1.State; } });\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction isBuilderOutput(obj) {\n    if (!obj || typeof obj.then === 'function' || typeof obj.subscribe === 'function') {\n        return false;\n    }\n    if (typeof obj[Symbol.asyncIterator] === 'function') {\n        return false;\n    }\n    return typeof obj.success === 'boolean';\n}\nexports.isBuilderOutput = isBuilderOutput;\nfunction fromAsyncIterable(iterable) {\n    return new rxjs_1.Observable((subscriber) => {\n        handleAsyncIterator(subscriber, iterable[Symbol.asyncIterator]()).then(() => subscriber.complete(), (error) => subscriber.error(error));\n    });\n}\nexports.fromAsyncIterable = fromAsyncIterable;\nasync function handleAsyncIterator(subscriber, iterator) {\n    var _a;\n    const teardown = new Promise((resolve) => subscriber.add(() => resolve()));\n    try {\n        while (!subscriber.closed) {\n            const result = await Promise.race([teardown, iterator.next()]);\n            if (!result || result.done) {\n                break;\n            }\n            subscriber.next(result.value);\n        }\n    }\n    finally {\n        await ((_a = iterator.return) === null || _a === void 0 ? void 0 : _a.call(iterator));\n    }\n}\n/**\n * Returns a string of \"project:target[:configuration]\" for the target object.\n */\nfunction targetStringFromTarget({ project, target, configuration }) {\n    return `${project}:${target}${configuration !== undefined ? ':' + configuration : ''}`;\n}\nexports.targetStringFromTarget = targetStringFromTarget;\n/**\n * Return a Target tuple from a string.\n */\nfunction targetFromTargetString(str) {\n    const tuple = str.split(/:/, 3);\n    if (tuple.length < 2) {\n        throw new Error('Invalid target string: ' + JSON.stringify(str));\n    }\n    return {\n        project: tuple[0],\n        target: tuple[1],\n        ...(tuple[2] !== undefined && { configuration: tuple[2] }),\n    };\n}\nexports.targetFromTargetString = targetFromTargetString;\n/**\n * Schedule a target, and forget about its run. This will return an observable of outputs, that\n * as a a teardown will stop the target from running. This means that the Run object this returns\n * should not be shared.\n *\n * The reason this is not part of the Context interface is to keep the Context as normal form as\n * possible. This is really an utility that people would implement in their project.\n *\n * @param context The context of your current execution.\n * @param target The target to schedule.\n * @param overrides Overrides that are used in the target.\n * @param scheduleOptions Additional scheduling options.\n */\nfunction scheduleTargetAndForget(context, target, overrides, scheduleOptions) {\n    let resolve = null;\n    const promise = new Promise((r) => (resolve = r));\n    context.addTeardown(() => promise);\n    return (0, rxjs_1.from)(context.scheduleTarget(target, overrides, scheduleOptions)).pipe((0, operators_1.switchMap)((run) => new rxjs_1.Observable((observer) => {\n        const subscription = run.output.subscribe(observer);\n        return () => {\n            subscription.unsubscribe();\n            // We can properly ignore the floating promise as it's a \"reverse\" promise; the teardown\n            // is waiting for the resolve.\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            run.stop().then(resolve);\n        };\n    })));\n}\nexports.scheduleTargetAndForget = scheduleTargetAndForget;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAOAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,uBAAuB,GAAGF,OAAO,CAACG,sBAAsB,GAAGH,OAAO,CAACI,sBAAsB,GAAGJ,OAAO,CAACK,iBAAiB,GAAGL,OAAO,CAACM,eAAe,GAAGN,OAAO,CAACO,oBAAoB,GAAG,KAAK,CAAC;AAC/L,MAAMC,MAAM,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC9B,MAAMC,WAAW,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AAC7C,MAAME,iBAAiB,GAAGF,OAAO,CAAC,mBAAmB,CAAC;AACtDX,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,sBAAsB,EAAE;EAAEY,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,YAAY;IAAE,OAAOF,iBAAiB,CAACG,KAAK;EAAE;AAAE,CAAC,CAAC;AAClI;AACA,SAASR,eAAe,CAACS,GAAG,EAAE;EAC1B,IAAI,CAACA,GAAG,IAAI,OAAOA,GAAG,CAACC,IAAI,KAAK,UAAU,IAAI,OAAOD,GAAG,CAACE,SAAS,KAAK,UAAU,EAAE;IAC/E,OAAO,KAAK;EAChB;EACA,IAAI,OAAOF,GAAG,CAACG,MAAM,CAACC,aAAa,CAAC,KAAK,UAAU,EAAE;IACjD,OAAO,KAAK;EAChB;EACA,OAAO,OAAOJ,GAAG,CAACK,OAAO,KAAK,SAAS;AAC3C;AACApB,OAAO,CAACM,eAAe,GAAGA,eAAe;AACzC,SAASD,iBAAiB,CAACgB,QAAQ,EAAE;EACjC,OAAO,IAAIb,MAAM,CAACc,UAAU,CAAEC,UAAU,IAAK;IACzCC,mBAAmB,CAACD,UAAU,EAAEF,QAAQ,CAACH,MAAM,CAACC,aAAa,CAAC,EAAE,CAAC,CAACH,IAAI,CAAC,MAAMO,UAAU,CAACE,QAAQ,EAAE,EAAGC,KAAK,IAAKH,UAAU,CAACG,KAAK,CAACA,KAAK,CAAC,CAAC;EAC3I,CAAC,CAAC;AACN;AACA1B,OAAO,CAACK,iBAAiB,GAAGA,iBAAiB;AAAC,SAC/BmB,mBAAmB;EAAA;AAAA;AAgBlC;AACA;AACA;AAFA;EAAA,yCAhBA,WAAmCD,UAAU,EAAEI,QAAQ,EAAE;IACrD,IAAIC,EAAE;IACN,MAAMC,QAAQ,GAAG,IAAIC,OAAO,CAAEC,OAAO,IAAKR,UAAU,CAACS,GAAG,CAAC,MAAMD,OAAO,EAAE,CAAC,CAAC;IAC1E,IAAI;MACA,OAAO,CAACR,UAAU,CAACU,MAAM,EAAE;QACvB,MAAMC,MAAM,SAASJ,OAAO,CAACK,IAAI,CAAC,CAACN,QAAQ,EAAEF,QAAQ,CAACS,IAAI,EAAE,CAAC,CAAC;QAC9D,IAAI,CAACF,MAAM,IAAIA,MAAM,CAACG,IAAI,EAAE;UACxB;QACJ;QACAd,UAAU,CAACa,IAAI,CAACF,MAAM,CAACjC,KAAK,CAAC;MACjC;IACJ,CAAC,SACO;MACJ,MAAO,CAAC2B,EAAE,GAAGD,QAAQ,CAACW,MAAM,MAAM,IAAI,IAAIV,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACW,IAAI,CAACZ,QAAQ,CAAC;IACxF;EACJ,CAAC;EAAA;AAAA;AAID,SAASvB,sBAAsB,CAAC;EAAEoC,OAAO;EAAEC,MAAM;EAAEC;AAAc,CAAC,EAAE;EAChE,OAAQ,GAAEF,OAAQ,IAAGC,MAAO,GAAEC,aAAa,KAAKC,SAAS,GAAG,GAAG,GAAGD,aAAa,GAAG,EAAG,EAAC;AAC1F;AACA1C,OAAO,CAACI,sBAAsB,GAAGA,sBAAsB;AACvD;AACA;AACA;AACA,SAASD,sBAAsB,CAACyC,GAAG,EAAE;EACjC,MAAMC,KAAK,GAAGD,GAAG,CAACE,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC;EAC/B,IAAID,KAAK,CAACE,MAAM,GAAG,CAAC,EAAE;IAClB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,GAAGC,IAAI,CAACC,SAAS,CAACN,GAAG,CAAC,CAAC;EACpE;EACA,OAAO;IACHJ,OAAO,EAAEK,KAAK,CAAC,CAAC,CAAC;IACjBJ,MAAM,EAAEI,KAAK,CAAC,CAAC,CAAC;IAChB,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAKF,SAAS,IAAI;MAAED,aAAa,EAAEG,KAAK,CAAC,CAAC;IAAE,CAAC;EAC7D,CAAC;AACL;AACA7C,OAAO,CAACG,sBAAsB,GAAGA,sBAAsB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,uBAAuB,CAACiD,OAAO,EAAEV,MAAM,EAAEW,SAAS,EAAEC,eAAe,EAAE;EAC1E,IAAItB,OAAO,GAAG,IAAI;EAClB,MAAMuB,OAAO,GAAG,IAAIxB,OAAO,CAAEyB,CAAC,IAAMxB,OAAO,GAAGwB,CAAE,CAAC;EACjDJ,OAAO,CAACK,WAAW,CAAC,MAAMF,OAAO,CAAC;EAClC,OAAO,CAAC,CAAC,EAAE9C,MAAM,CAACiD,IAAI,EAAEN,OAAO,CAACO,cAAc,CAACjB,MAAM,EAAEW,SAAS,EAAEC,eAAe,CAAC,CAAC,CAACM,IAAI,CAAC,CAAC,CAAC,EAAEjD,WAAW,CAACkD,SAAS,EAAGC,GAAG,IAAK,IAAIrD,MAAM,CAACc,UAAU,CAAEwC,QAAQ,IAAK;IAC7J,MAAMC,YAAY,GAAGF,GAAG,CAACG,MAAM,CAAC/C,SAAS,CAAC6C,QAAQ,CAAC;IACnD,OAAO,MAAM;MACTC,YAAY,CAACE,WAAW,EAAE;MAC1B;MACA;MACA;MACAJ,GAAG,CAACK,IAAI,EAAE,CAAClD,IAAI,CAACe,OAAO,CAAC;IAC5B,CAAC;EACL,CAAC,CAAC,CAAC,CAAC;AACR;AACA/B,OAAO,CAACE,uBAAuB,GAAGA,uBAAuB"},"metadata":{},"sourceType":"script","externalDependencies":[]}