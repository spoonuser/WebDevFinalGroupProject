{"ast":null,"code":"'use strict';\n\nvar util = require('util');\nvar path = require('path');\nvar fs = require('fs');\nfunction camelCase(str) {\n  const isCamelCase = str !== str.toLowerCase() && str !== str.toUpperCase();\n  if (!isCamelCase) {\n    str = str.toLowerCase();\n  }\n  if (str.indexOf('-') === -1 && str.indexOf('_') === -1) {\n    return str;\n  } else {\n    let camelcase = '';\n    let nextChrUpper = false;\n    const leadingHyphens = str.match(/^-+/);\n    for (let i = leadingHyphens ? leadingHyphens[0].length : 0; i < str.length; i++) {\n      let chr = str.charAt(i);\n      if (nextChrUpper) {\n        nextChrUpper = false;\n        chr = chr.toUpperCase();\n      }\n      if (i !== 0 && (chr === '-' || chr === '_')) {\n        nextChrUpper = true;\n      } else if (chr !== '-' && chr !== '_') {\n        camelcase += chr;\n      }\n    }\n    return camelcase;\n  }\n}\nfunction decamelize(str, joinString) {\n  const lowercase = str.toLowerCase();\n  joinString = joinString || '-';\n  let notCamelcase = '';\n  for (let i = 0; i < str.length; i++) {\n    const chrLower = lowercase.charAt(i);\n    const chrString = str.charAt(i);\n    if (chrLower !== chrString && i > 0) {\n      notCamelcase += `${joinString}${lowercase.charAt(i)}`;\n    } else {\n      notCamelcase += chrString;\n    }\n  }\n  return notCamelcase;\n}\nfunction looksLikeNumber(x) {\n  if (x === null || x === undefined) return false;\n  if (typeof x === 'number') return true;\n  if (/^0x[0-9a-f]+$/i.test(x)) return true;\n  if (/^0[^.]/.test(x)) return false;\n  return /^[-]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(e[-+]?\\d+)?$/.test(x);\n}\nfunction tokenizeArgString(argString) {\n  if (Array.isArray(argString)) {\n    return argString.map(e => typeof e !== 'string' ? e + '' : e);\n  }\n  argString = argString.trim();\n  let i = 0;\n  let prevC = null;\n  let c = null;\n  let opening = null;\n  const args = [];\n  for (let ii = 0; ii < argString.length; ii++) {\n    prevC = c;\n    c = argString.charAt(ii);\n    if (c === ' ' && !opening) {\n      if (!(prevC === ' ')) {\n        i++;\n      }\n      continue;\n    }\n    if (c === opening) {\n      opening = null;\n    } else if ((c === \"'\" || c === '\"') && !opening) {\n      opening = c;\n    }\n    if (!args[i]) args[i] = '';\n    args[i] += c;\n  }\n  return args;\n}\nvar DefaultValuesForTypeKey;\n(function (DefaultValuesForTypeKey) {\n  DefaultValuesForTypeKey[\"BOOLEAN\"] = \"boolean\";\n  DefaultValuesForTypeKey[\"STRING\"] = \"string\";\n  DefaultValuesForTypeKey[\"NUMBER\"] = \"number\";\n  DefaultValuesForTypeKey[\"ARRAY\"] = \"array\";\n})(DefaultValuesForTypeKey || (DefaultValuesForTypeKey = {}));\nlet mixin;\nclass YargsParser {\n  constructor(_mixin) {\n    mixin = _mixin;\n  }\n  parse(argsInput, options) {\n    const opts = Object.assign({\n      alias: undefined,\n      array: undefined,\n      boolean: undefined,\n      config: undefined,\n      configObjects: undefined,\n      configuration: undefined,\n      coerce: undefined,\n      count: undefined,\n      default: undefined,\n      envPrefix: undefined,\n      narg: undefined,\n      normalize: undefined,\n      string: undefined,\n      number: undefined,\n      __: undefined,\n      key: undefined\n    }, options);\n    const args = tokenizeArgString(argsInput);\n    const inputIsString = typeof argsInput === 'string';\n    const aliases = combineAliases(Object.assign(Object.create(null), opts.alias));\n    const configuration = Object.assign({\n      'boolean-negation': true,\n      'camel-case-expansion': true,\n      'combine-arrays': false,\n      'dot-notation': true,\n      'duplicate-arguments-array': true,\n      'flatten-duplicate-arrays': true,\n      'greedy-arrays': true,\n      'halt-at-non-option': false,\n      'nargs-eats-options': false,\n      'negation-prefix': 'no-',\n      'parse-numbers': true,\n      'parse-positional-numbers': true,\n      'populate--': false,\n      'set-placeholder-key': false,\n      'short-option-groups': true,\n      'strip-aliased': false,\n      'strip-dashed': false,\n      'unknown-options-as-args': false\n    }, opts.configuration);\n    const defaults = Object.assign(Object.create(null), opts.default);\n    const configObjects = opts.configObjects || [];\n    const envPrefix = opts.envPrefix;\n    const notFlagsOption = configuration['populate--'];\n    const notFlagsArgv = notFlagsOption ? '--' : '_';\n    const newAliases = Object.create(null);\n    const defaulted = Object.create(null);\n    const __ = opts.__ || mixin.format;\n    const flags = {\n      aliases: Object.create(null),\n      arrays: Object.create(null),\n      bools: Object.create(null),\n      strings: Object.create(null),\n      numbers: Object.create(null),\n      counts: Object.create(null),\n      normalize: Object.create(null),\n      configs: Object.create(null),\n      nargs: Object.create(null),\n      coercions: Object.create(null),\n      keys: []\n    };\n    const negative = /^-([0-9]+(\\.[0-9]+)?|\\.[0-9]+)$/;\n    const negatedBoolean = new RegExp('^--' + configuration['negation-prefix'] + '(.+)');\n    [].concat(opts.array || []).filter(Boolean).forEach(function (opt) {\n      const key = typeof opt === 'object' ? opt.key : opt;\n      const assignment = Object.keys(opt).map(function (key) {\n        const arrayFlagKeys = {\n          boolean: 'bools',\n          string: 'strings',\n          number: 'numbers'\n        };\n        return arrayFlagKeys[key];\n      }).filter(Boolean).pop();\n      if (assignment) {\n        flags[assignment][key] = true;\n      }\n      flags.arrays[key] = true;\n      flags.keys.push(key);\n    });\n    [].concat(opts.boolean || []).filter(Boolean).forEach(function (key) {\n      flags.bools[key] = true;\n      flags.keys.push(key);\n    });\n    [].concat(opts.string || []).filter(Boolean).forEach(function (key) {\n      flags.strings[key] = true;\n      flags.keys.push(key);\n    });\n    [].concat(opts.number || []).filter(Boolean).forEach(function (key) {\n      flags.numbers[key] = true;\n      flags.keys.push(key);\n    });\n    [].concat(opts.count || []).filter(Boolean).forEach(function (key) {\n      flags.counts[key] = true;\n      flags.keys.push(key);\n    });\n    [].concat(opts.normalize || []).filter(Boolean).forEach(function (key) {\n      flags.normalize[key] = true;\n      flags.keys.push(key);\n    });\n    if (typeof opts.narg === 'object') {\n      Object.entries(opts.narg).forEach(([key, value]) => {\n        if (typeof value === 'number') {\n          flags.nargs[key] = value;\n          flags.keys.push(key);\n        }\n      });\n    }\n    if (typeof opts.coerce === 'object') {\n      Object.entries(opts.coerce).forEach(([key, value]) => {\n        if (typeof value === 'function') {\n          flags.coercions[key] = value;\n          flags.keys.push(key);\n        }\n      });\n    }\n    if (typeof opts.config !== 'undefined') {\n      if (Array.isArray(opts.config) || typeof opts.config === 'string') {\n        [].concat(opts.config).filter(Boolean).forEach(function (key) {\n          flags.configs[key] = true;\n        });\n      } else if (typeof opts.config === 'object') {\n        Object.entries(opts.config).forEach(([key, value]) => {\n          if (typeof value === 'boolean' || typeof value === 'function') {\n            flags.configs[key] = value;\n          }\n        });\n      }\n    }\n    extendAliases(opts.key, aliases, opts.default, flags.arrays);\n    Object.keys(defaults).forEach(function (key) {\n      (flags.aliases[key] || []).forEach(function (alias) {\n        defaults[alias] = defaults[key];\n      });\n    });\n    let error = null;\n    checkConfiguration();\n    let notFlags = [];\n    const argv = Object.assign(Object.create(null), {\n      _: []\n    });\n    const argvReturn = {};\n    for (let i = 0; i < args.length; i++) {\n      const arg = args[i];\n      const truncatedArg = arg.replace(/^-{3,}/, '---');\n      let broken;\n      let key;\n      let letters;\n      let m;\n      let next;\n      let value;\n      if (arg !== '--' && /^-/.test(arg) && isUnknownOptionAsArg(arg)) {\n        pushPositional(arg);\n      } else if (truncatedArg.match(/^---+(=|$)/)) {\n        pushPositional(arg);\n        continue;\n      } else if (arg.match(/^--.+=/) || !configuration['short-option-groups'] && arg.match(/^-.+=/)) {\n        m = arg.match(/^--?([^=]+)=([\\s\\S]*)$/);\n        if (m !== null && Array.isArray(m) && m.length >= 3) {\n          if (checkAllAliases(m[1], flags.arrays)) {\n            i = eatArray(i, m[1], args, m[2]);\n          } else if (checkAllAliases(m[1], flags.nargs) !== false) {\n            i = eatNargs(i, m[1], args, m[2]);\n          } else {\n            setArg(m[1], m[2], true);\n          }\n        }\n      } else if (arg.match(negatedBoolean) && configuration['boolean-negation']) {\n        m = arg.match(negatedBoolean);\n        if (m !== null && Array.isArray(m) && m.length >= 2) {\n          key = m[1];\n          setArg(key, checkAllAliases(key, flags.arrays) ? [false] : false);\n        }\n      } else if (arg.match(/^--.+/) || !configuration['short-option-groups'] && arg.match(/^-[^-]+/)) {\n        m = arg.match(/^--?(.+)/);\n        if (m !== null && Array.isArray(m) && m.length >= 2) {\n          key = m[1];\n          if (checkAllAliases(key, flags.arrays)) {\n            i = eatArray(i, key, args);\n          } else if (checkAllAliases(key, flags.nargs) !== false) {\n            i = eatNargs(i, key, args);\n          } else {\n            next = args[i + 1];\n            if (next !== undefined && (!next.match(/^-/) || next.match(negative)) && !checkAllAliases(key, flags.bools) && !checkAllAliases(key, flags.counts)) {\n              setArg(key, next);\n              i++;\n            } else if (/^(true|false)$/.test(next)) {\n              setArg(key, next);\n              i++;\n            } else {\n              setArg(key, defaultValue(key));\n            }\n          }\n        }\n      } else if (arg.match(/^-.\\..+=/)) {\n        m = arg.match(/^-([^=]+)=([\\s\\S]*)$/);\n        if (m !== null && Array.isArray(m) && m.length >= 3) {\n          setArg(m[1], m[2]);\n        }\n      } else if (arg.match(/^-.\\..+/) && !arg.match(negative)) {\n        next = args[i + 1];\n        m = arg.match(/^-(.\\..+)/);\n        if (m !== null && Array.isArray(m) && m.length >= 2) {\n          key = m[1];\n          if (next !== undefined && !next.match(/^-/) && !checkAllAliases(key, flags.bools) && !checkAllAliases(key, flags.counts)) {\n            setArg(key, next);\n            i++;\n          } else {\n            setArg(key, defaultValue(key));\n          }\n        }\n      } else if (arg.match(/^-[^-]+/) && !arg.match(negative)) {\n        letters = arg.slice(1, -1).split('');\n        broken = false;\n        for (let j = 0; j < letters.length; j++) {\n          next = arg.slice(j + 2);\n          if (letters[j + 1] && letters[j + 1] === '=') {\n            value = arg.slice(j + 3);\n            key = letters[j];\n            if (checkAllAliases(key, flags.arrays)) {\n              i = eatArray(i, key, args, value);\n            } else if (checkAllAliases(key, flags.nargs) !== false) {\n              i = eatNargs(i, key, args, value);\n            } else {\n              setArg(key, value);\n            }\n            broken = true;\n            break;\n          }\n          if (next === '-') {\n            setArg(letters[j], next);\n            continue;\n          }\n          if (/[A-Za-z]/.test(letters[j]) && /^-?\\d+(\\.\\d*)?(e-?\\d+)?$/.test(next) && checkAllAliases(next, flags.bools) === false) {\n            setArg(letters[j], next);\n            broken = true;\n            break;\n          }\n          if (letters[j + 1] && letters[j + 1].match(/\\W/)) {\n            setArg(letters[j], next);\n            broken = true;\n            break;\n          } else {\n            setArg(letters[j], defaultValue(letters[j]));\n          }\n        }\n        key = arg.slice(-1)[0];\n        if (!broken && key !== '-') {\n          if (checkAllAliases(key, flags.arrays)) {\n            i = eatArray(i, key, args);\n          } else if (checkAllAliases(key, flags.nargs) !== false) {\n            i = eatNargs(i, key, args);\n          } else {\n            next = args[i + 1];\n            if (next !== undefined && (!/^(-|--)[^-]/.test(next) || next.match(negative)) && !checkAllAliases(key, flags.bools) && !checkAllAliases(key, flags.counts)) {\n              setArg(key, next);\n              i++;\n            } else if (/^(true|false)$/.test(next)) {\n              setArg(key, next);\n              i++;\n            } else {\n              setArg(key, defaultValue(key));\n            }\n          }\n        }\n      } else if (arg.match(/^-[0-9]$/) && arg.match(negative) && checkAllAliases(arg.slice(1), flags.bools)) {\n        key = arg.slice(1);\n        setArg(key, defaultValue(key));\n      } else if (arg === '--') {\n        notFlags = args.slice(i + 1);\n        break;\n      } else if (configuration['halt-at-non-option']) {\n        notFlags = args.slice(i);\n        break;\n      } else {\n        pushPositional(arg);\n      }\n    }\n    applyEnvVars(argv, true);\n    applyEnvVars(argv, false);\n    setConfig(argv);\n    setConfigObjects();\n    applyDefaultsAndAliases(argv, flags.aliases, defaults, true);\n    applyCoercions(argv);\n    if (configuration['set-placeholder-key']) setPlaceholderKeys(argv);\n    Object.keys(flags.counts).forEach(function (key) {\n      if (!hasKey(argv, key.split('.'))) setArg(key, 0);\n    });\n    if (notFlagsOption && notFlags.length) argv[notFlagsArgv] = [];\n    notFlags.forEach(function (key) {\n      argv[notFlagsArgv].push(key);\n    });\n    if (configuration['camel-case-expansion'] && configuration['strip-dashed']) {\n      Object.keys(argv).filter(key => key !== '--' && key.includes('-')).forEach(key => {\n        delete argv[key];\n      });\n    }\n    if (configuration['strip-aliased']) {\n      [].concat(...Object.keys(aliases).map(k => aliases[k])).forEach(alias => {\n        if (configuration['camel-case-expansion'] && alias.includes('-')) {\n          delete argv[alias.split('.').map(prop => camelCase(prop)).join('.')];\n        }\n        delete argv[alias];\n      });\n    }\n    function pushPositional(arg) {\n      const maybeCoercedNumber = maybeCoerceNumber('_', arg);\n      if (typeof maybeCoercedNumber === 'string' || typeof maybeCoercedNumber === 'number') {\n        argv._.push(maybeCoercedNumber);\n      }\n    }\n    function eatNargs(i, key, args, argAfterEqualSign) {\n      let ii;\n      let toEat = checkAllAliases(key, flags.nargs);\n      toEat = typeof toEat !== 'number' || isNaN(toEat) ? 1 : toEat;\n      if (toEat === 0) {\n        if (!isUndefined(argAfterEqualSign)) {\n          error = Error(__('Argument unexpected for: %s', key));\n        }\n        setArg(key, defaultValue(key));\n        return i;\n      }\n      let available = isUndefined(argAfterEqualSign) ? 0 : 1;\n      if (configuration['nargs-eats-options']) {\n        if (args.length - (i + 1) + available < toEat) {\n          error = Error(__('Not enough arguments following: %s', key));\n        }\n        available = toEat;\n      } else {\n        for (ii = i + 1; ii < args.length; ii++) {\n          if (!args[ii].match(/^-[^0-9]/) || args[ii].match(negative) || isUnknownOptionAsArg(args[ii])) available++;else break;\n        }\n        if (available < toEat) error = Error(__('Not enough arguments following: %s', key));\n      }\n      let consumed = Math.min(available, toEat);\n      if (!isUndefined(argAfterEqualSign) && consumed > 0) {\n        setArg(key, argAfterEqualSign);\n        consumed--;\n      }\n      for (ii = i + 1; ii < consumed + i + 1; ii++) {\n        setArg(key, args[ii]);\n      }\n      return i + consumed;\n    }\n    function eatArray(i, key, args, argAfterEqualSign) {\n      let argsToSet = [];\n      let next = argAfterEqualSign || args[i + 1];\n      const nargsCount = checkAllAliases(key, flags.nargs);\n      if (checkAllAliases(key, flags.bools) && !/^(true|false)$/.test(next)) {\n        argsToSet.push(true);\n      } else if (isUndefined(next) || isUndefined(argAfterEqualSign) && /^-/.test(next) && !negative.test(next) && !isUnknownOptionAsArg(next)) {\n        if (defaults[key] !== undefined) {\n          const defVal = defaults[key];\n          argsToSet = Array.isArray(defVal) ? defVal : [defVal];\n        }\n      } else {\n        if (!isUndefined(argAfterEqualSign)) {\n          argsToSet.push(processValue(key, argAfterEqualSign, true));\n        }\n        for (let ii = i + 1; ii < args.length; ii++) {\n          if (!configuration['greedy-arrays'] && argsToSet.length > 0 || nargsCount && typeof nargsCount === 'number' && argsToSet.length >= nargsCount) break;\n          next = args[ii];\n          if (/^-/.test(next) && !negative.test(next) && !isUnknownOptionAsArg(next)) break;\n          i = ii;\n          argsToSet.push(processValue(key, next, inputIsString));\n        }\n      }\n      if (typeof nargsCount === 'number' && (nargsCount && argsToSet.length < nargsCount || isNaN(nargsCount) && argsToSet.length === 0)) {\n        error = Error(__('Not enough arguments following: %s', key));\n      }\n      setArg(key, argsToSet);\n      return i;\n    }\n    function setArg(key, val, shouldStripQuotes = inputIsString) {\n      if (/-/.test(key) && configuration['camel-case-expansion']) {\n        const alias = key.split('.').map(function (prop) {\n          return camelCase(prop);\n        }).join('.');\n        addNewAlias(key, alias);\n      }\n      const value = processValue(key, val, shouldStripQuotes);\n      const splitKey = key.split('.');\n      setKey(argv, splitKey, value);\n      if (flags.aliases[key]) {\n        flags.aliases[key].forEach(function (x) {\n          const keyProperties = x.split('.');\n          setKey(argv, keyProperties, value);\n        });\n      }\n      if (splitKey.length > 1 && configuration['dot-notation']) {\n        (flags.aliases[splitKey[0]] || []).forEach(function (x) {\n          let keyProperties = x.split('.');\n          const a = [].concat(splitKey);\n          a.shift();\n          keyProperties = keyProperties.concat(a);\n          if (!(flags.aliases[key] || []).includes(keyProperties.join('.'))) {\n            setKey(argv, keyProperties, value);\n          }\n        });\n      }\n      if (checkAllAliases(key, flags.normalize) && !checkAllAliases(key, flags.arrays)) {\n        const keys = [key].concat(flags.aliases[key] || []);\n        keys.forEach(function (key) {\n          Object.defineProperty(argvReturn, key, {\n            enumerable: true,\n            get() {\n              return val;\n            },\n            set(value) {\n              val = typeof value === 'string' ? mixin.normalize(value) : value;\n            }\n          });\n        });\n      }\n    }\n    function addNewAlias(key, alias) {\n      if (!(flags.aliases[key] && flags.aliases[key].length)) {\n        flags.aliases[key] = [alias];\n        newAliases[alias] = true;\n      }\n      if (!(flags.aliases[alias] && flags.aliases[alias].length)) {\n        addNewAlias(alias, key);\n      }\n    }\n    function processValue(key, val, shouldStripQuotes) {\n      if (shouldStripQuotes) {\n        val = stripQuotes(val);\n      }\n      if (checkAllAliases(key, flags.bools) || checkAllAliases(key, flags.counts)) {\n        if (typeof val === 'string') val = val === 'true';\n      }\n      let value = Array.isArray(val) ? val.map(function (v) {\n        return maybeCoerceNumber(key, v);\n      }) : maybeCoerceNumber(key, val);\n      if (checkAllAliases(key, flags.counts) && (isUndefined(value) || typeof value === 'boolean')) {\n        value = increment();\n      }\n      if (checkAllAliases(key, flags.normalize) && checkAllAliases(key, flags.arrays)) {\n        if (Array.isArray(val)) value = val.map(val => {\n          return mixin.normalize(val);\n        });else value = mixin.normalize(val);\n      }\n      return value;\n    }\n    function maybeCoerceNumber(key, value) {\n      if (!configuration['parse-positional-numbers'] && key === '_') return value;\n      if (!checkAllAliases(key, flags.strings) && !checkAllAliases(key, flags.bools) && !Array.isArray(value)) {\n        const shouldCoerceNumber = looksLikeNumber(value) && configuration['parse-numbers'] && Number.isSafeInteger(Math.floor(parseFloat(`${value}`)));\n        if (shouldCoerceNumber || !isUndefined(value) && checkAllAliases(key, flags.numbers)) {\n          value = Number(value);\n        }\n      }\n      return value;\n    }\n    function setConfig(argv) {\n      const configLookup = Object.create(null);\n      applyDefaultsAndAliases(configLookup, flags.aliases, defaults);\n      Object.keys(flags.configs).forEach(function (configKey) {\n        const configPath = argv[configKey] || configLookup[configKey];\n        if (configPath) {\n          try {\n            let config = null;\n            const resolvedConfigPath = mixin.resolve(mixin.cwd(), configPath);\n            const resolveConfig = flags.configs[configKey];\n            if (typeof resolveConfig === 'function') {\n              try {\n                config = resolveConfig(resolvedConfigPath);\n              } catch (e) {\n                config = e;\n              }\n              if (config instanceof Error) {\n                error = config;\n                return;\n              }\n            } else {\n              config = mixin.require(resolvedConfigPath);\n            }\n            setConfigObject(config);\n          } catch (ex) {\n            if (ex.name === 'PermissionDenied') error = ex;else if (argv[configKey]) error = Error(__('Invalid JSON config file: %s', configPath));\n          }\n        }\n      });\n    }\n    function setConfigObject(config, prev) {\n      Object.keys(config).forEach(function (key) {\n        const value = config[key];\n        const fullKey = prev ? prev + '.' + key : key;\n        if (typeof value === 'object' && value !== null && !Array.isArray(value) && configuration['dot-notation']) {\n          setConfigObject(value, fullKey);\n        } else {\n          if (!hasKey(argv, fullKey.split('.')) || checkAllAliases(fullKey, flags.arrays) && configuration['combine-arrays']) {\n            setArg(fullKey, value);\n          }\n        }\n      });\n    }\n    function setConfigObjects() {\n      if (typeof configObjects !== 'undefined') {\n        configObjects.forEach(function (configObject) {\n          setConfigObject(configObject);\n        });\n      }\n    }\n    function applyEnvVars(argv, configOnly) {\n      if (typeof envPrefix === 'undefined') return;\n      const prefix = typeof envPrefix === 'string' ? envPrefix : '';\n      const env = mixin.env();\n      Object.keys(env).forEach(function (envVar) {\n        if (prefix === '' || envVar.lastIndexOf(prefix, 0) === 0) {\n          const keys = envVar.split('__').map(function (key, i) {\n            if (i === 0) {\n              key = key.substring(prefix.length);\n            }\n            return camelCase(key);\n          });\n          if ((configOnly && flags.configs[keys.join('.')] || !configOnly) && !hasKey(argv, keys)) {\n            setArg(keys.join('.'), env[envVar]);\n          }\n        }\n      });\n    }\n    function applyCoercions(argv) {\n      let coerce;\n      const applied = new Set();\n      Object.keys(argv).forEach(function (key) {\n        if (!applied.has(key)) {\n          coerce = checkAllAliases(key, flags.coercions);\n          if (typeof coerce === 'function') {\n            try {\n              const value = maybeCoerceNumber(key, coerce(argv[key]));\n              [].concat(flags.aliases[key] || [], key).forEach(ali => {\n                applied.add(ali);\n                argv[ali] = value;\n              });\n            } catch (err) {\n              error = err;\n            }\n          }\n        }\n      });\n    }\n    function setPlaceholderKeys(argv) {\n      flags.keys.forEach(key => {\n        if (~key.indexOf('.')) return;\n        if (typeof argv[key] === 'undefined') argv[key] = undefined;\n      });\n      return argv;\n    }\n    function applyDefaultsAndAliases(obj, aliases, defaults, canLog = false) {\n      Object.keys(defaults).forEach(function (key) {\n        if (!hasKey(obj, key.split('.'))) {\n          setKey(obj, key.split('.'), defaults[key]);\n          if (canLog) defaulted[key] = true;\n          (aliases[key] || []).forEach(function (x) {\n            if (hasKey(obj, x.split('.'))) return;\n            setKey(obj, x.split('.'), defaults[key]);\n          });\n        }\n      });\n    }\n    function hasKey(obj, keys) {\n      let o = obj;\n      if (!configuration['dot-notation']) keys = [keys.join('.')];\n      keys.slice(0, -1).forEach(function (key) {\n        o = o[key] || {};\n      });\n      const key = keys[keys.length - 1];\n      if (typeof o !== 'object') return false;else return key in o;\n    }\n    function setKey(obj, keys, value) {\n      let o = obj;\n      if (!configuration['dot-notation']) keys = [keys.join('.')];\n      keys.slice(0, -1).forEach(function (key) {\n        key = sanitizeKey(key);\n        if (typeof o === 'object' && o[key] === undefined) {\n          o[key] = {};\n        }\n        if (typeof o[key] !== 'object' || Array.isArray(o[key])) {\n          if (Array.isArray(o[key])) {\n            o[key].push({});\n          } else {\n            o[key] = [o[key], {}];\n          }\n          o = o[key][o[key].length - 1];\n        } else {\n          o = o[key];\n        }\n      });\n      const key = sanitizeKey(keys[keys.length - 1]);\n      const isTypeArray = checkAllAliases(keys.join('.'), flags.arrays);\n      const isValueArray = Array.isArray(value);\n      let duplicate = configuration['duplicate-arguments-array'];\n      if (!duplicate && checkAllAliases(key, flags.nargs)) {\n        duplicate = true;\n        if (!isUndefined(o[key]) && flags.nargs[key] === 1 || Array.isArray(o[key]) && o[key].length === flags.nargs[key]) {\n          o[key] = undefined;\n        }\n      }\n      if (value === increment()) {\n        o[key] = increment(o[key]);\n      } else if (Array.isArray(o[key])) {\n        if (duplicate && isTypeArray && isValueArray) {\n          o[key] = configuration['flatten-duplicate-arrays'] ? o[key].concat(value) : (Array.isArray(o[key][0]) ? o[key] : [o[key]]).concat([value]);\n        } else if (!duplicate && Boolean(isTypeArray) === Boolean(isValueArray)) {\n          o[key] = value;\n        } else {\n          o[key] = o[key].concat([value]);\n        }\n      } else if (o[key] === undefined && isTypeArray) {\n        o[key] = isValueArray ? value : [value];\n      } else if (duplicate && !(o[key] === undefined || checkAllAliases(key, flags.counts) || checkAllAliases(key, flags.bools))) {\n        o[key] = [o[key], value];\n      } else {\n        o[key] = value;\n      }\n    }\n    function extendAliases(...args) {\n      args.forEach(function (obj) {\n        Object.keys(obj || {}).forEach(function (key) {\n          if (flags.aliases[key]) return;\n          flags.aliases[key] = [].concat(aliases[key] || []);\n          flags.aliases[key].concat(key).forEach(function (x) {\n            if (/-/.test(x) && configuration['camel-case-expansion']) {\n              const c = camelCase(x);\n              if (c !== key && flags.aliases[key].indexOf(c) === -1) {\n                flags.aliases[key].push(c);\n                newAliases[c] = true;\n              }\n            }\n          });\n          flags.aliases[key].concat(key).forEach(function (x) {\n            if (x.length > 1 && /[A-Z]/.test(x) && configuration['camel-case-expansion']) {\n              const c = decamelize(x, '-');\n              if (c !== key && flags.aliases[key].indexOf(c) === -1) {\n                flags.aliases[key].push(c);\n                newAliases[c] = true;\n              }\n            }\n          });\n          flags.aliases[key].forEach(function (x) {\n            flags.aliases[x] = [key].concat(flags.aliases[key].filter(function (y) {\n              return x !== y;\n            }));\n          });\n        });\n      });\n    }\n    function checkAllAliases(key, flag) {\n      const toCheck = [].concat(flags.aliases[key] || [], key);\n      const keys = Object.keys(flag);\n      const setAlias = toCheck.find(key => keys.includes(key));\n      return setAlias ? flag[setAlias] : false;\n    }\n    function hasAnyFlag(key) {\n      const flagsKeys = Object.keys(flags);\n      const toCheck = [].concat(flagsKeys.map(k => flags[k]));\n      return toCheck.some(function (flag) {\n        return Array.isArray(flag) ? flag.includes(key) : flag[key];\n      });\n    }\n    function hasFlagsMatching(arg, ...patterns) {\n      const toCheck = [].concat(...patterns);\n      return toCheck.some(function (pattern) {\n        const match = arg.match(pattern);\n        return match && hasAnyFlag(match[1]);\n      });\n    }\n    function hasAllShortFlags(arg) {\n      if (arg.match(negative) || !arg.match(/^-[^-]+/)) {\n        return false;\n      }\n      let hasAllFlags = true;\n      let next;\n      const letters = arg.slice(1).split('');\n      for (let j = 0; j < letters.length; j++) {\n        next = arg.slice(j + 2);\n        if (!hasAnyFlag(letters[j])) {\n          hasAllFlags = false;\n          break;\n        }\n        if (letters[j + 1] && letters[j + 1] === '=' || next === '-' || /[A-Za-z]/.test(letters[j]) && /^-?\\d+(\\.\\d*)?(e-?\\d+)?$/.test(next) || letters[j + 1] && letters[j + 1].match(/\\W/)) {\n          break;\n        }\n      }\n      return hasAllFlags;\n    }\n    function isUnknownOptionAsArg(arg) {\n      return configuration['unknown-options-as-args'] && isUnknownOption(arg);\n    }\n    function isUnknownOption(arg) {\n      arg = arg.replace(/^-{3,}/, '--');\n      if (arg.match(negative)) {\n        return false;\n      }\n      if (hasAllShortFlags(arg)) {\n        return false;\n      }\n      const flagWithEquals = /^-+([^=]+?)=[\\s\\S]*$/;\n      const normalFlag = /^-+([^=]+?)$/;\n      const flagEndingInHyphen = /^-+([^=]+?)-$/;\n      const flagEndingInDigits = /^-+([^=]+?\\d+)$/;\n      const flagEndingInNonWordCharacters = /^-+([^=]+?)\\W+.*$/;\n      return !hasFlagsMatching(arg, flagWithEquals, negatedBoolean, normalFlag, flagEndingInHyphen, flagEndingInDigits, flagEndingInNonWordCharacters);\n    }\n    function defaultValue(key) {\n      if (!checkAllAliases(key, flags.bools) && !checkAllAliases(key, flags.counts) && `${key}` in defaults) {\n        return defaults[key];\n      } else {\n        return defaultForType(guessType(key));\n      }\n    }\n    function defaultForType(type) {\n      const def = {\n        [DefaultValuesForTypeKey.BOOLEAN]: true,\n        [DefaultValuesForTypeKey.STRING]: '',\n        [DefaultValuesForTypeKey.NUMBER]: undefined,\n        [DefaultValuesForTypeKey.ARRAY]: []\n      };\n      return def[type];\n    }\n    function guessType(key) {\n      let type = DefaultValuesForTypeKey.BOOLEAN;\n      if (checkAllAliases(key, flags.strings)) type = DefaultValuesForTypeKey.STRING;else if (checkAllAliases(key, flags.numbers)) type = DefaultValuesForTypeKey.NUMBER;else if (checkAllAliases(key, flags.bools)) type = DefaultValuesForTypeKey.BOOLEAN;else if (checkAllAliases(key, flags.arrays)) type = DefaultValuesForTypeKey.ARRAY;\n      return type;\n    }\n    function isUndefined(num) {\n      return num === undefined;\n    }\n    function checkConfiguration() {\n      Object.keys(flags.counts).find(key => {\n        if (checkAllAliases(key, flags.arrays)) {\n          error = Error(__('Invalid configuration: %s, opts.count excludes opts.array.', key));\n          return true;\n        } else if (checkAllAliases(key, flags.nargs)) {\n          error = Error(__('Invalid configuration: %s, opts.count excludes opts.narg.', key));\n          return true;\n        }\n        return false;\n      });\n    }\n    return {\n      aliases: Object.assign({}, flags.aliases),\n      argv: Object.assign(argvReturn, argv),\n      configuration: configuration,\n      defaulted: Object.assign({}, defaulted),\n      error: error,\n      newAliases: Object.assign({}, newAliases)\n    };\n  }\n}\nfunction combineAliases(aliases) {\n  const aliasArrays = [];\n  const combined = Object.create(null);\n  let change = true;\n  Object.keys(aliases).forEach(function (key) {\n    aliasArrays.push([].concat(aliases[key], key));\n  });\n  while (change) {\n    change = false;\n    for (let i = 0; i < aliasArrays.length; i++) {\n      for (let ii = i + 1; ii < aliasArrays.length; ii++) {\n        const intersect = aliasArrays[i].filter(function (v) {\n          return aliasArrays[ii].indexOf(v) !== -1;\n        });\n        if (intersect.length) {\n          aliasArrays[i] = aliasArrays[i].concat(aliasArrays[ii]);\n          aliasArrays.splice(ii, 1);\n          change = true;\n          break;\n        }\n      }\n    }\n  }\n  aliasArrays.forEach(function (aliasArray) {\n    aliasArray = aliasArray.filter(function (v, i, self) {\n      return self.indexOf(v) === i;\n    });\n    const lastAlias = aliasArray.pop();\n    if (lastAlias !== undefined && typeof lastAlias === 'string') {\n      combined[lastAlias] = aliasArray;\n    }\n  });\n  return combined;\n}\nfunction increment(orig) {\n  return orig !== undefined ? orig + 1 : 1;\n}\nfunction sanitizeKey(key) {\n  if (key === '__proto__') return '___proto___';\n  return key;\n}\nfunction stripQuotes(val) {\n  return typeof val === 'string' && (val[0] === \"'\" || val[0] === '\"') && val[val.length - 1] === val[0] ? val.substring(1, val.length - 1) : val;\n}\nvar _a, _b, _c;\nconst minNodeVersion = process && process.env && process.env.YARGS_MIN_NODE_VERSION ? Number(process.env.YARGS_MIN_NODE_VERSION) : 12;\nconst nodeVersion = (_b = (_a = process === null || process === void 0 ? void 0 : process.versions) === null || _a === void 0 ? void 0 : _a.node) !== null && _b !== void 0 ? _b : (_c = process === null || process === void 0 ? void 0 : process.version) === null || _c === void 0 ? void 0 : _c.slice(1);\nif (nodeVersion) {\n  const major = Number(nodeVersion.match(/^([^.]+)/)[1]);\n  if (major < minNodeVersion) {\n    throw Error(`yargs parser supports a minimum Node.js version of ${minNodeVersion}. Read our version support policy: https://github.com/yargs/yargs-parser#supported-nodejs-versions`);\n  }\n}\nconst env = process ? process.env : {};\nconst parser = new YargsParser({\n  cwd: process.cwd,\n  env: () => {\n    return env;\n  },\n  format: util.format,\n  normalize: path.normalize,\n  resolve: path.resolve,\n  require: path => {\n    if (typeof require !== 'undefined') {\n      return require(path);\n    } else if (path.match(/\\.json$/)) {\n      return JSON.parse(fs.readFileSync(path, 'utf8'));\n    } else {\n      throw Error('only .json config files are supported in ESM');\n    }\n  }\n});\nconst yargsParser = function Parser(args, opts) {\n  const result = parser.parse(args.slice(), opts);\n  return result.argv;\n};\nyargsParser.detailed = function (args, opts) {\n  return parser.parse(args.slice(), opts);\n};\nyargsParser.camelCase = camelCase;\nyargsParser.decamelize = decamelize;\nyargsParser.looksLikeNumber = looksLikeNumber;\nmodule.exports = yargsParser;","map":{"version":3,"names":["util","require","path","fs","camelCase","str","isCamelCase","toLowerCase","toUpperCase","indexOf","camelcase","nextChrUpper","leadingHyphens","match","i","length","chr","charAt","decamelize","joinString","lowercase","notCamelcase","chrLower","chrString","looksLikeNumber","x","undefined","test","tokenizeArgString","argString","Array","isArray","map","e","trim","prevC","c","opening","args","ii","DefaultValuesForTypeKey","mixin","YargsParser","constructor","_mixin","parse","argsInput","options","opts","Object","assign","alias","array","boolean","config","configObjects","configuration","coerce","count","default","envPrefix","narg","normalize","string","number","__","key","inputIsString","aliases","combineAliases","create","defaults","notFlagsOption","notFlagsArgv","newAliases","defaulted","format","flags","arrays","bools","strings","numbers","counts","configs","nargs","coercions","keys","negative","negatedBoolean","RegExp","concat","filter","Boolean","forEach","opt","assignment","arrayFlagKeys","pop","push","entries","value","extendAliases","error","checkConfiguration","notFlags","argv","_","argvReturn","arg","truncatedArg","replace","broken","letters","m","next","isUnknownOptionAsArg","pushPositional","checkAllAliases","eatArray","eatNargs","setArg","defaultValue","slice","split","j","applyEnvVars","setConfig","setConfigObjects","applyDefaultsAndAliases","applyCoercions","setPlaceholderKeys","hasKey","includes","k","prop","join","maybeCoercedNumber","maybeCoerceNumber","argAfterEqualSign","toEat","isNaN","isUndefined","Error","available","consumed","Math","min","argsToSet","nargsCount","defVal","processValue","val","shouldStripQuotes","addNewAlias","splitKey","setKey","keyProperties","a","shift","defineProperty","enumerable","get","set","stripQuotes","v","increment","shouldCoerceNumber","Number","isSafeInteger","floor","parseFloat","configLookup","configKey","configPath","resolvedConfigPath","resolve","cwd","resolveConfig","setConfigObject","ex","name","prev","fullKey","configObject","configOnly","prefix","env","envVar","lastIndexOf","substring","applied","Set","has","ali","add","err","obj","canLog","o","sanitizeKey","isTypeArray","isValueArray","duplicate","y","flag","toCheck","setAlias","find","hasAnyFlag","flagsKeys","some","hasFlagsMatching","patterns","pattern","hasAllShortFlags","hasAllFlags","isUnknownOption","flagWithEquals","normalFlag","flagEndingInHyphen","flagEndingInDigits","flagEndingInNonWordCharacters","defaultForType","guessType","type","def","BOOLEAN","STRING","NUMBER","ARRAY","num","aliasArrays","combined","change","intersect","splice","aliasArray","self","lastAlias","orig","_a","_b","_c","minNodeVersion","process","YARGS_MIN_NODE_VERSION","nodeVersion","versions","node","version","major","parser","JSON","readFileSync","yargsParser","Parser","result","detailed","module","exports"],"sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/yargs-parser/build/index.cjs"],"sourcesContent":["'use strict';\n\nvar util = require('util');\nvar path = require('path');\nvar fs = require('fs');\n\nfunction camelCase(str) {\n    const isCamelCase = str !== str.toLowerCase() && str !== str.toUpperCase();\n    if (!isCamelCase) {\n        str = str.toLowerCase();\n    }\n    if (str.indexOf('-') === -1 && str.indexOf('_') === -1) {\n        return str;\n    }\n    else {\n        let camelcase = '';\n        let nextChrUpper = false;\n        const leadingHyphens = str.match(/^-+/);\n        for (let i = leadingHyphens ? leadingHyphens[0].length : 0; i < str.length; i++) {\n            let chr = str.charAt(i);\n            if (nextChrUpper) {\n                nextChrUpper = false;\n                chr = chr.toUpperCase();\n            }\n            if (i !== 0 && (chr === '-' || chr === '_')) {\n                nextChrUpper = true;\n            }\n            else if (chr !== '-' && chr !== '_') {\n                camelcase += chr;\n            }\n        }\n        return camelcase;\n    }\n}\nfunction decamelize(str, joinString) {\n    const lowercase = str.toLowerCase();\n    joinString = joinString || '-';\n    let notCamelcase = '';\n    for (let i = 0; i < str.length; i++) {\n        const chrLower = lowercase.charAt(i);\n        const chrString = str.charAt(i);\n        if (chrLower !== chrString && i > 0) {\n            notCamelcase += `${joinString}${lowercase.charAt(i)}`;\n        }\n        else {\n            notCamelcase += chrString;\n        }\n    }\n    return notCamelcase;\n}\nfunction looksLikeNumber(x) {\n    if (x === null || x === undefined)\n        return false;\n    if (typeof x === 'number')\n        return true;\n    if (/^0x[0-9a-f]+$/i.test(x))\n        return true;\n    if (/^0[^.]/.test(x))\n        return false;\n    return /^[-]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(e[-+]?\\d+)?$/.test(x);\n}\n\nfunction tokenizeArgString(argString) {\n    if (Array.isArray(argString)) {\n        return argString.map(e => typeof e !== 'string' ? e + '' : e);\n    }\n    argString = argString.trim();\n    let i = 0;\n    let prevC = null;\n    let c = null;\n    let opening = null;\n    const args = [];\n    for (let ii = 0; ii < argString.length; ii++) {\n        prevC = c;\n        c = argString.charAt(ii);\n        if (c === ' ' && !opening) {\n            if (!(prevC === ' ')) {\n                i++;\n            }\n            continue;\n        }\n        if (c === opening) {\n            opening = null;\n        }\n        else if ((c === \"'\" || c === '\"') && !opening) {\n            opening = c;\n        }\n        if (!args[i])\n            args[i] = '';\n        args[i] += c;\n    }\n    return args;\n}\n\nvar DefaultValuesForTypeKey;\n(function (DefaultValuesForTypeKey) {\n    DefaultValuesForTypeKey[\"BOOLEAN\"] = \"boolean\";\n    DefaultValuesForTypeKey[\"STRING\"] = \"string\";\n    DefaultValuesForTypeKey[\"NUMBER\"] = \"number\";\n    DefaultValuesForTypeKey[\"ARRAY\"] = \"array\";\n})(DefaultValuesForTypeKey || (DefaultValuesForTypeKey = {}));\n\nlet mixin;\nclass YargsParser {\n    constructor(_mixin) {\n        mixin = _mixin;\n    }\n    parse(argsInput, options) {\n        const opts = Object.assign({\n            alias: undefined,\n            array: undefined,\n            boolean: undefined,\n            config: undefined,\n            configObjects: undefined,\n            configuration: undefined,\n            coerce: undefined,\n            count: undefined,\n            default: undefined,\n            envPrefix: undefined,\n            narg: undefined,\n            normalize: undefined,\n            string: undefined,\n            number: undefined,\n            __: undefined,\n            key: undefined\n        }, options);\n        const args = tokenizeArgString(argsInput);\n        const inputIsString = typeof argsInput === 'string';\n        const aliases = combineAliases(Object.assign(Object.create(null), opts.alias));\n        const configuration = Object.assign({\n            'boolean-negation': true,\n            'camel-case-expansion': true,\n            'combine-arrays': false,\n            'dot-notation': true,\n            'duplicate-arguments-array': true,\n            'flatten-duplicate-arrays': true,\n            'greedy-arrays': true,\n            'halt-at-non-option': false,\n            'nargs-eats-options': false,\n            'negation-prefix': 'no-',\n            'parse-numbers': true,\n            'parse-positional-numbers': true,\n            'populate--': false,\n            'set-placeholder-key': false,\n            'short-option-groups': true,\n            'strip-aliased': false,\n            'strip-dashed': false,\n            'unknown-options-as-args': false\n        }, opts.configuration);\n        const defaults = Object.assign(Object.create(null), opts.default);\n        const configObjects = opts.configObjects || [];\n        const envPrefix = opts.envPrefix;\n        const notFlagsOption = configuration['populate--'];\n        const notFlagsArgv = notFlagsOption ? '--' : '_';\n        const newAliases = Object.create(null);\n        const defaulted = Object.create(null);\n        const __ = opts.__ || mixin.format;\n        const flags = {\n            aliases: Object.create(null),\n            arrays: Object.create(null),\n            bools: Object.create(null),\n            strings: Object.create(null),\n            numbers: Object.create(null),\n            counts: Object.create(null),\n            normalize: Object.create(null),\n            configs: Object.create(null),\n            nargs: Object.create(null),\n            coercions: Object.create(null),\n            keys: []\n        };\n        const negative = /^-([0-9]+(\\.[0-9]+)?|\\.[0-9]+)$/;\n        const negatedBoolean = new RegExp('^--' + configuration['negation-prefix'] + '(.+)');\n        [].concat(opts.array || []).filter(Boolean).forEach(function (opt) {\n            const key = typeof opt === 'object' ? opt.key : opt;\n            const assignment = Object.keys(opt).map(function (key) {\n                const arrayFlagKeys = {\n                    boolean: 'bools',\n                    string: 'strings',\n                    number: 'numbers'\n                };\n                return arrayFlagKeys[key];\n            }).filter(Boolean).pop();\n            if (assignment) {\n                flags[assignment][key] = true;\n            }\n            flags.arrays[key] = true;\n            flags.keys.push(key);\n        });\n        [].concat(opts.boolean || []).filter(Boolean).forEach(function (key) {\n            flags.bools[key] = true;\n            flags.keys.push(key);\n        });\n        [].concat(opts.string || []).filter(Boolean).forEach(function (key) {\n            flags.strings[key] = true;\n            flags.keys.push(key);\n        });\n        [].concat(opts.number || []).filter(Boolean).forEach(function (key) {\n            flags.numbers[key] = true;\n            flags.keys.push(key);\n        });\n        [].concat(opts.count || []).filter(Boolean).forEach(function (key) {\n            flags.counts[key] = true;\n            flags.keys.push(key);\n        });\n        [].concat(opts.normalize || []).filter(Boolean).forEach(function (key) {\n            flags.normalize[key] = true;\n            flags.keys.push(key);\n        });\n        if (typeof opts.narg === 'object') {\n            Object.entries(opts.narg).forEach(([key, value]) => {\n                if (typeof value === 'number') {\n                    flags.nargs[key] = value;\n                    flags.keys.push(key);\n                }\n            });\n        }\n        if (typeof opts.coerce === 'object') {\n            Object.entries(opts.coerce).forEach(([key, value]) => {\n                if (typeof value === 'function') {\n                    flags.coercions[key] = value;\n                    flags.keys.push(key);\n                }\n            });\n        }\n        if (typeof opts.config !== 'undefined') {\n            if (Array.isArray(opts.config) || typeof opts.config === 'string') {\n                [].concat(opts.config).filter(Boolean).forEach(function (key) {\n                    flags.configs[key] = true;\n                });\n            }\n            else if (typeof opts.config === 'object') {\n                Object.entries(opts.config).forEach(([key, value]) => {\n                    if (typeof value === 'boolean' || typeof value === 'function') {\n                        flags.configs[key] = value;\n                    }\n                });\n            }\n        }\n        extendAliases(opts.key, aliases, opts.default, flags.arrays);\n        Object.keys(defaults).forEach(function (key) {\n            (flags.aliases[key] || []).forEach(function (alias) {\n                defaults[alias] = defaults[key];\n            });\n        });\n        let error = null;\n        checkConfiguration();\n        let notFlags = [];\n        const argv = Object.assign(Object.create(null), { _: [] });\n        const argvReturn = {};\n        for (let i = 0; i < args.length; i++) {\n            const arg = args[i];\n            const truncatedArg = arg.replace(/^-{3,}/, '---');\n            let broken;\n            let key;\n            let letters;\n            let m;\n            let next;\n            let value;\n            if (arg !== '--' && /^-/.test(arg) && isUnknownOptionAsArg(arg)) {\n                pushPositional(arg);\n            }\n            else if (truncatedArg.match(/^---+(=|$)/)) {\n                pushPositional(arg);\n                continue;\n            }\n            else if (arg.match(/^--.+=/) || (!configuration['short-option-groups'] && arg.match(/^-.+=/))) {\n                m = arg.match(/^--?([^=]+)=([\\s\\S]*)$/);\n                if (m !== null && Array.isArray(m) && m.length >= 3) {\n                    if (checkAllAliases(m[1], flags.arrays)) {\n                        i = eatArray(i, m[1], args, m[2]);\n                    }\n                    else if (checkAllAliases(m[1], flags.nargs) !== false) {\n                        i = eatNargs(i, m[1], args, m[2]);\n                    }\n                    else {\n                        setArg(m[1], m[2], true);\n                    }\n                }\n            }\n            else if (arg.match(negatedBoolean) && configuration['boolean-negation']) {\n                m = arg.match(negatedBoolean);\n                if (m !== null && Array.isArray(m) && m.length >= 2) {\n                    key = m[1];\n                    setArg(key, checkAllAliases(key, flags.arrays) ? [false] : false);\n                }\n            }\n            else if (arg.match(/^--.+/) || (!configuration['short-option-groups'] && arg.match(/^-[^-]+/))) {\n                m = arg.match(/^--?(.+)/);\n                if (m !== null && Array.isArray(m) && m.length >= 2) {\n                    key = m[1];\n                    if (checkAllAliases(key, flags.arrays)) {\n                        i = eatArray(i, key, args);\n                    }\n                    else if (checkAllAliases(key, flags.nargs) !== false) {\n                        i = eatNargs(i, key, args);\n                    }\n                    else {\n                        next = args[i + 1];\n                        if (next !== undefined && (!next.match(/^-/) ||\n                            next.match(negative)) &&\n                            !checkAllAliases(key, flags.bools) &&\n                            !checkAllAliases(key, flags.counts)) {\n                            setArg(key, next);\n                            i++;\n                        }\n                        else if (/^(true|false)$/.test(next)) {\n                            setArg(key, next);\n                            i++;\n                        }\n                        else {\n                            setArg(key, defaultValue(key));\n                        }\n                    }\n                }\n            }\n            else if (arg.match(/^-.\\..+=/)) {\n                m = arg.match(/^-([^=]+)=([\\s\\S]*)$/);\n                if (m !== null && Array.isArray(m) && m.length >= 3) {\n                    setArg(m[1], m[2]);\n                }\n            }\n            else if (arg.match(/^-.\\..+/) && !arg.match(negative)) {\n                next = args[i + 1];\n                m = arg.match(/^-(.\\..+)/);\n                if (m !== null && Array.isArray(m) && m.length >= 2) {\n                    key = m[1];\n                    if (next !== undefined && !next.match(/^-/) &&\n                        !checkAllAliases(key, flags.bools) &&\n                        !checkAllAliases(key, flags.counts)) {\n                        setArg(key, next);\n                        i++;\n                    }\n                    else {\n                        setArg(key, defaultValue(key));\n                    }\n                }\n            }\n            else if (arg.match(/^-[^-]+/) && !arg.match(negative)) {\n                letters = arg.slice(1, -1).split('');\n                broken = false;\n                for (let j = 0; j < letters.length; j++) {\n                    next = arg.slice(j + 2);\n                    if (letters[j + 1] && letters[j + 1] === '=') {\n                        value = arg.slice(j + 3);\n                        key = letters[j];\n                        if (checkAllAliases(key, flags.arrays)) {\n                            i = eatArray(i, key, args, value);\n                        }\n                        else if (checkAllAliases(key, flags.nargs) !== false) {\n                            i = eatNargs(i, key, args, value);\n                        }\n                        else {\n                            setArg(key, value);\n                        }\n                        broken = true;\n                        break;\n                    }\n                    if (next === '-') {\n                        setArg(letters[j], next);\n                        continue;\n                    }\n                    if (/[A-Za-z]/.test(letters[j]) &&\n                        /^-?\\d+(\\.\\d*)?(e-?\\d+)?$/.test(next) &&\n                        checkAllAliases(next, flags.bools) === false) {\n                        setArg(letters[j], next);\n                        broken = true;\n                        break;\n                    }\n                    if (letters[j + 1] && letters[j + 1].match(/\\W/)) {\n                        setArg(letters[j], next);\n                        broken = true;\n                        break;\n                    }\n                    else {\n                        setArg(letters[j], defaultValue(letters[j]));\n                    }\n                }\n                key = arg.slice(-1)[0];\n                if (!broken && key !== '-') {\n                    if (checkAllAliases(key, flags.arrays)) {\n                        i = eatArray(i, key, args);\n                    }\n                    else if (checkAllAliases(key, flags.nargs) !== false) {\n                        i = eatNargs(i, key, args);\n                    }\n                    else {\n                        next = args[i + 1];\n                        if (next !== undefined && (!/^(-|--)[^-]/.test(next) ||\n                            next.match(negative)) &&\n                            !checkAllAliases(key, flags.bools) &&\n                            !checkAllAliases(key, flags.counts)) {\n                            setArg(key, next);\n                            i++;\n                        }\n                        else if (/^(true|false)$/.test(next)) {\n                            setArg(key, next);\n                            i++;\n                        }\n                        else {\n                            setArg(key, defaultValue(key));\n                        }\n                    }\n                }\n            }\n            else if (arg.match(/^-[0-9]$/) &&\n                arg.match(negative) &&\n                checkAllAliases(arg.slice(1), flags.bools)) {\n                key = arg.slice(1);\n                setArg(key, defaultValue(key));\n            }\n            else if (arg === '--') {\n                notFlags = args.slice(i + 1);\n                break;\n            }\n            else if (configuration['halt-at-non-option']) {\n                notFlags = args.slice(i);\n                break;\n            }\n            else {\n                pushPositional(arg);\n            }\n        }\n        applyEnvVars(argv, true);\n        applyEnvVars(argv, false);\n        setConfig(argv);\n        setConfigObjects();\n        applyDefaultsAndAliases(argv, flags.aliases, defaults, true);\n        applyCoercions(argv);\n        if (configuration['set-placeholder-key'])\n            setPlaceholderKeys(argv);\n        Object.keys(flags.counts).forEach(function (key) {\n            if (!hasKey(argv, key.split('.')))\n                setArg(key, 0);\n        });\n        if (notFlagsOption && notFlags.length)\n            argv[notFlagsArgv] = [];\n        notFlags.forEach(function (key) {\n            argv[notFlagsArgv].push(key);\n        });\n        if (configuration['camel-case-expansion'] && configuration['strip-dashed']) {\n            Object.keys(argv).filter(key => key !== '--' && key.includes('-')).forEach(key => {\n                delete argv[key];\n            });\n        }\n        if (configuration['strip-aliased']) {\n            [].concat(...Object.keys(aliases).map(k => aliases[k])).forEach(alias => {\n                if (configuration['camel-case-expansion'] && alias.includes('-')) {\n                    delete argv[alias.split('.').map(prop => camelCase(prop)).join('.')];\n                }\n                delete argv[alias];\n            });\n        }\n        function pushPositional(arg) {\n            const maybeCoercedNumber = maybeCoerceNumber('_', arg);\n            if (typeof maybeCoercedNumber === 'string' || typeof maybeCoercedNumber === 'number') {\n                argv._.push(maybeCoercedNumber);\n            }\n        }\n        function eatNargs(i, key, args, argAfterEqualSign) {\n            let ii;\n            let toEat = checkAllAliases(key, flags.nargs);\n            toEat = typeof toEat !== 'number' || isNaN(toEat) ? 1 : toEat;\n            if (toEat === 0) {\n                if (!isUndefined(argAfterEqualSign)) {\n                    error = Error(__('Argument unexpected for: %s', key));\n                }\n                setArg(key, defaultValue(key));\n                return i;\n            }\n            let available = isUndefined(argAfterEqualSign) ? 0 : 1;\n            if (configuration['nargs-eats-options']) {\n                if (args.length - (i + 1) + available < toEat) {\n                    error = Error(__('Not enough arguments following: %s', key));\n                }\n                available = toEat;\n            }\n            else {\n                for (ii = i + 1; ii < args.length; ii++) {\n                    if (!args[ii].match(/^-[^0-9]/) || args[ii].match(negative) || isUnknownOptionAsArg(args[ii]))\n                        available++;\n                    else\n                        break;\n                }\n                if (available < toEat)\n                    error = Error(__('Not enough arguments following: %s', key));\n            }\n            let consumed = Math.min(available, toEat);\n            if (!isUndefined(argAfterEqualSign) && consumed > 0) {\n                setArg(key, argAfterEqualSign);\n                consumed--;\n            }\n            for (ii = i + 1; ii < (consumed + i + 1); ii++) {\n                setArg(key, args[ii]);\n            }\n            return (i + consumed);\n        }\n        function eatArray(i, key, args, argAfterEqualSign) {\n            let argsToSet = [];\n            let next = argAfterEqualSign || args[i + 1];\n            const nargsCount = checkAllAliases(key, flags.nargs);\n            if (checkAllAliases(key, flags.bools) && !(/^(true|false)$/.test(next))) {\n                argsToSet.push(true);\n            }\n            else if (isUndefined(next) ||\n                (isUndefined(argAfterEqualSign) && /^-/.test(next) && !negative.test(next) && !isUnknownOptionAsArg(next))) {\n                if (defaults[key] !== undefined) {\n                    const defVal = defaults[key];\n                    argsToSet = Array.isArray(defVal) ? defVal : [defVal];\n                }\n            }\n            else {\n                if (!isUndefined(argAfterEqualSign)) {\n                    argsToSet.push(processValue(key, argAfterEqualSign, true));\n                }\n                for (let ii = i + 1; ii < args.length; ii++) {\n                    if ((!configuration['greedy-arrays'] && argsToSet.length > 0) ||\n                        (nargsCount && typeof nargsCount === 'number' && argsToSet.length >= nargsCount))\n                        break;\n                    next = args[ii];\n                    if (/^-/.test(next) && !negative.test(next) && !isUnknownOptionAsArg(next))\n                        break;\n                    i = ii;\n                    argsToSet.push(processValue(key, next, inputIsString));\n                }\n            }\n            if (typeof nargsCount === 'number' && ((nargsCount && argsToSet.length < nargsCount) ||\n                (isNaN(nargsCount) && argsToSet.length === 0))) {\n                error = Error(__('Not enough arguments following: %s', key));\n            }\n            setArg(key, argsToSet);\n            return i;\n        }\n        function setArg(key, val, shouldStripQuotes = inputIsString) {\n            if (/-/.test(key) && configuration['camel-case-expansion']) {\n                const alias = key.split('.').map(function (prop) {\n                    return camelCase(prop);\n                }).join('.');\n                addNewAlias(key, alias);\n            }\n            const value = processValue(key, val, shouldStripQuotes);\n            const splitKey = key.split('.');\n            setKey(argv, splitKey, value);\n            if (flags.aliases[key]) {\n                flags.aliases[key].forEach(function (x) {\n                    const keyProperties = x.split('.');\n                    setKey(argv, keyProperties, value);\n                });\n            }\n            if (splitKey.length > 1 && configuration['dot-notation']) {\n                (flags.aliases[splitKey[0]] || []).forEach(function (x) {\n                    let keyProperties = x.split('.');\n                    const a = [].concat(splitKey);\n                    a.shift();\n                    keyProperties = keyProperties.concat(a);\n                    if (!(flags.aliases[key] || []).includes(keyProperties.join('.'))) {\n                        setKey(argv, keyProperties, value);\n                    }\n                });\n            }\n            if (checkAllAliases(key, flags.normalize) && !checkAllAliases(key, flags.arrays)) {\n                const keys = [key].concat(flags.aliases[key] || []);\n                keys.forEach(function (key) {\n                    Object.defineProperty(argvReturn, key, {\n                        enumerable: true,\n                        get() {\n                            return val;\n                        },\n                        set(value) {\n                            val = typeof value === 'string' ? mixin.normalize(value) : value;\n                        }\n                    });\n                });\n            }\n        }\n        function addNewAlias(key, alias) {\n            if (!(flags.aliases[key] && flags.aliases[key].length)) {\n                flags.aliases[key] = [alias];\n                newAliases[alias] = true;\n            }\n            if (!(flags.aliases[alias] && flags.aliases[alias].length)) {\n                addNewAlias(alias, key);\n            }\n        }\n        function processValue(key, val, shouldStripQuotes) {\n            if (shouldStripQuotes) {\n                val = stripQuotes(val);\n            }\n            if (checkAllAliases(key, flags.bools) || checkAllAliases(key, flags.counts)) {\n                if (typeof val === 'string')\n                    val = val === 'true';\n            }\n            let value = Array.isArray(val)\n                ? val.map(function (v) { return maybeCoerceNumber(key, v); })\n                : maybeCoerceNumber(key, val);\n            if (checkAllAliases(key, flags.counts) && (isUndefined(value) || typeof value === 'boolean')) {\n                value = increment();\n            }\n            if (checkAllAliases(key, flags.normalize) && checkAllAliases(key, flags.arrays)) {\n                if (Array.isArray(val))\n                    value = val.map((val) => { return mixin.normalize(val); });\n                else\n                    value = mixin.normalize(val);\n            }\n            return value;\n        }\n        function maybeCoerceNumber(key, value) {\n            if (!configuration['parse-positional-numbers'] && key === '_')\n                return value;\n            if (!checkAllAliases(key, flags.strings) && !checkAllAliases(key, flags.bools) && !Array.isArray(value)) {\n                const shouldCoerceNumber = looksLikeNumber(value) && configuration['parse-numbers'] && (Number.isSafeInteger(Math.floor(parseFloat(`${value}`))));\n                if (shouldCoerceNumber || (!isUndefined(value) && checkAllAliases(key, flags.numbers))) {\n                    value = Number(value);\n                }\n            }\n            return value;\n        }\n        function setConfig(argv) {\n            const configLookup = Object.create(null);\n            applyDefaultsAndAliases(configLookup, flags.aliases, defaults);\n            Object.keys(flags.configs).forEach(function (configKey) {\n                const configPath = argv[configKey] || configLookup[configKey];\n                if (configPath) {\n                    try {\n                        let config = null;\n                        const resolvedConfigPath = mixin.resolve(mixin.cwd(), configPath);\n                        const resolveConfig = flags.configs[configKey];\n                        if (typeof resolveConfig === 'function') {\n                            try {\n                                config = resolveConfig(resolvedConfigPath);\n                            }\n                            catch (e) {\n                                config = e;\n                            }\n                            if (config instanceof Error) {\n                                error = config;\n                                return;\n                            }\n                        }\n                        else {\n                            config = mixin.require(resolvedConfigPath);\n                        }\n                        setConfigObject(config);\n                    }\n                    catch (ex) {\n                        if (ex.name === 'PermissionDenied')\n                            error = ex;\n                        else if (argv[configKey])\n                            error = Error(__('Invalid JSON config file: %s', configPath));\n                    }\n                }\n            });\n        }\n        function setConfigObject(config, prev) {\n            Object.keys(config).forEach(function (key) {\n                const value = config[key];\n                const fullKey = prev ? prev + '.' + key : key;\n                if (typeof value === 'object' && value !== null && !Array.isArray(value) && configuration['dot-notation']) {\n                    setConfigObject(value, fullKey);\n                }\n                else {\n                    if (!hasKey(argv, fullKey.split('.')) || (checkAllAliases(fullKey, flags.arrays) && configuration['combine-arrays'])) {\n                        setArg(fullKey, value);\n                    }\n                }\n            });\n        }\n        function setConfigObjects() {\n            if (typeof configObjects !== 'undefined') {\n                configObjects.forEach(function (configObject) {\n                    setConfigObject(configObject);\n                });\n            }\n        }\n        function applyEnvVars(argv, configOnly) {\n            if (typeof envPrefix === 'undefined')\n                return;\n            const prefix = typeof envPrefix === 'string' ? envPrefix : '';\n            const env = mixin.env();\n            Object.keys(env).forEach(function (envVar) {\n                if (prefix === '' || envVar.lastIndexOf(prefix, 0) === 0) {\n                    const keys = envVar.split('__').map(function (key, i) {\n                        if (i === 0) {\n                            key = key.substring(prefix.length);\n                        }\n                        return camelCase(key);\n                    });\n                    if (((configOnly && flags.configs[keys.join('.')]) || !configOnly) && !hasKey(argv, keys)) {\n                        setArg(keys.join('.'), env[envVar]);\n                    }\n                }\n            });\n        }\n        function applyCoercions(argv) {\n            let coerce;\n            const applied = new Set();\n            Object.keys(argv).forEach(function (key) {\n                if (!applied.has(key)) {\n                    coerce = checkAllAliases(key, flags.coercions);\n                    if (typeof coerce === 'function') {\n                        try {\n                            const value = maybeCoerceNumber(key, coerce(argv[key]));\n                            ([].concat(flags.aliases[key] || [], key)).forEach(ali => {\n                                applied.add(ali);\n                                argv[ali] = value;\n                            });\n                        }\n                        catch (err) {\n                            error = err;\n                        }\n                    }\n                }\n            });\n        }\n        function setPlaceholderKeys(argv) {\n            flags.keys.forEach((key) => {\n                if (~key.indexOf('.'))\n                    return;\n                if (typeof argv[key] === 'undefined')\n                    argv[key] = undefined;\n            });\n            return argv;\n        }\n        function applyDefaultsAndAliases(obj, aliases, defaults, canLog = false) {\n            Object.keys(defaults).forEach(function (key) {\n                if (!hasKey(obj, key.split('.'))) {\n                    setKey(obj, key.split('.'), defaults[key]);\n                    if (canLog)\n                        defaulted[key] = true;\n                    (aliases[key] || []).forEach(function (x) {\n                        if (hasKey(obj, x.split('.')))\n                            return;\n                        setKey(obj, x.split('.'), defaults[key]);\n                    });\n                }\n            });\n        }\n        function hasKey(obj, keys) {\n            let o = obj;\n            if (!configuration['dot-notation'])\n                keys = [keys.join('.')];\n            keys.slice(0, -1).forEach(function (key) {\n                o = (o[key] || {});\n            });\n            const key = keys[keys.length - 1];\n            if (typeof o !== 'object')\n                return false;\n            else\n                return key in o;\n        }\n        function setKey(obj, keys, value) {\n            let o = obj;\n            if (!configuration['dot-notation'])\n                keys = [keys.join('.')];\n            keys.slice(0, -1).forEach(function (key) {\n                key = sanitizeKey(key);\n                if (typeof o === 'object' && o[key] === undefined) {\n                    o[key] = {};\n                }\n                if (typeof o[key] !== 'object' || Array.isArray(o[key])) {\n                    if (Array.isArray(o[key])) {\n                        o[key].push({});\n                    }\n                    else {\n                        o[key] = [o[key], {}];\n                    }\n                    o = o[key][o[key].length - 1];\n                }\n                else {\n                    o = o[key];\n                }\n            });\n            const key = sanitizeKey(keys[keys.length - 1]);\n            const isTypeArray = checkAllAliases(keys.join('.'), flags.arrays);\n            const isValueArray = Array.isArray(value);\n            let duplicate = configuration['duplicate-arguments-array'];\n            if (!duplicate && checkAllAliases(key, flags.nargs)) {\n                duplicate = true;\n                if ((!isUndefined(o[key]) && flags.nargs[key] === 1) || (Array.isArray(o[key]) && o[key].length === flags.nargs[key])) {\n                    o[key] = undefined;\n                }\n            }\n            if (value === increment()) {\n                o[key] = increment(o[key]);\n            }\n            else if (Array.isArray(o[key])) {\n                if (duplicate && isTypeArray && isValueArray) {\n                    o[key] = configuration['flatten-duplicate-arrays'] ? o[key].concat(value) : (Array.isArray(o[key][0]) ? o[key] : [o[key]]).concat([value]);\n                }\n                else if (!duplicate && Boolean(isTypeArray) === Boolean(isValueArray)) {\n                    o[key] = value;\n                }\n                else {\n                    o[key] = o[key].concat([value]);\n                }\n            }\n            else if (o[key] === undefined && isTypeArray) {\n                o[key] = isValueArray ? value : [value];\n            }\n            else if (duplicate && !(o[key] === undefined ||\n                checkAllAliases(key, flags.counts) ||\n                checkAllAliases(key, flags.bools))) {\n                o[key] = [o[key], value];\n            }\n            else {\n                o[key] = value;\n            }\n        }\n        function extendAliases(...args) {\n            args.forEach(function (obj) {\n                Object.keys(obj || {}).forEach(function (key) {\n                    if (flags.aliases[key])\n                        return;\n                    flags.aliases[key] = [].concat(aliases[key] || []);\n                    flags.aliases[key].concat(key).forEach(function (x) {\n                        if (/-/.test(x) && configuration['camel-case-expansion']) {\n                            const c = camelCase(x);\n                            if (c !== key && flags.aliases[key].indexOf(c) === -1) {\n                                flags.aliases[key].push(c);\n                                newAliases[c] = true;\n                            }\n                        }\n                    });\n                    flags.aliases[key].concat(key).forEach(function (x) {\n                        if (x.length > 1 && /[A-Z]/.test(x) && configuration['camel-case-expansion']) {\n                            const c = decamelize(x, '-');\n                            if (c !== key && flags.aliases[key].indexOf(c) === -1) {\n                                flags.aliases[key].push(c);\n                                newAliases[c] = true;\n                            }\n                        }\n                    });\n                    flags.aliases[key].forEach(function (x) {\n                        flags.aliases[x] = [key].concat(flags.aliases[key].filter(function (y) {\n                            return x !== y;\n                        }));\n                    });\n                });\n            });\n        }\n        function checkAllAliases(key, flag) {\n            const toCheck = [].concat(flags.aliases[key] || [], key);\n            const keys = Object.keys(flag);\n            const setAlias = toCheck.find(key => keys.includes(key));\n            return setAlias ? flag[setAlias] : false;\n        }\n        function hasAnyFlag(key) {\n            const flagsKeys = Object.keys(flags);\n            const toCheck = [].concat(flagsKeys.map(k => flags[k]));\n            return toCheck.some(function (flag) {\n                return Array.isArray(flag) ? flag.includes(key) : flag[key];\n            });\n        }\n        function hasFlagsMatching(arg, ...patterns) {\n            const toCheck = [].concat(...patterns);\n            return toCheck.some(function (pattern) {\n                const match = arg.match(pattern);\n                return match && hasAnyFlag(match[1]);\n            });\n        }\n        function hasAllShortFlags(arg) {\n            if (arg.match(negative) || !arg.match(/^-[^-]+/)) {\n                return false;\n            }\n            let hasAllFlags = true;\n            let next;\n            const letters = arg.slice(1).split('');\n            for (let j = 0; j < letters.length; j++) {\n                next = arg.slice(j + 2);\n                if (!hasAnyFlag(letters[j])) {\n                    hasAllFlags = false;\n                    break;\n                }\n                if ((letters[j + 1] && letters[j + 1] === '=') ||\n                    next === '-' ||\n                    (/[A-Za-z]/.test(letters[j]) && /^-?\\d+(\\.\\d*)?(e-?\\d+)?$/.test(next)) ||\n                    (letters[j + 1] && letters[j + 1].match(/\\W/))) {\n                    break;\n                }\n            }\n            return hasAllFlags;\n        }\n        function isUnknownOptionAsArg(arg) {\n            return configuration['unknown-options-as-args'] && isUnknownOption(arg);\n        }\n        function isUnknownOption(arg) {\n            arg = arg.replace(/^-{3,}/, '--');\n            if (arg.match(negative)) {\n                return false;\n            }\n            if (hasAllShortFlags(arg)) {\n                return false;\n            }\n            const flagWithEquals = /^-+([^=]+?)=[\\s\\S]*$/;\n            const normalFlag = /^-+([^=]+?)$/;\n            const flagEndingInHyphen = /^-+([^=]+?)-$/;\n            const flagEndingInDigits = /^-+([^=]+?\\d+)$/;\n            const flagEndingInNonWordCharacters = /^-+([^=]+?)\\W+.*$/;\n            return !hasFlagsMatching(arg, flagWithEquals, negatedBoolean, normalFlag, flagEndingInHyphen, flagEndingInDigits, flagEndingInNonWordCharacters);\n        }\n        function defaultValue(key) {\n            if (!checkAllAliases(key, flags.bools) &&\n                !checkAllAliases(key, flags.counts) &&\n                `${key}` in defaults) {\n                return defaults[key];\n            }\n            else {\n                return defaultForType(guessType(key));\n            }\n        }\n        function defaultForType(type) {\n            const def = {\n                [DefaultValuesForTypeKey.BOOLEAN]: true,\n                [DefaultValuesForTypeKey.STRING]: '',\n                [DefaultValuesForTypeKey.NUMBER]: undefined,\n                [DefaultValuesForTypeKey.ARRAY]: []\n            };\n            return def[type];\n        }\n        function guessType(key) {\n            let type = DefaultValuesForTypeKey.BOOLEAN;\n            if (checkAllAliases(key, flags.strings))\n                type = DefaultValuesForTypeKey.STRING;\n            else if (checkAllAliases(key, flags.numbers))\n                type = DefaultValuesForTypeKey.NUMBER;\n            else if (checkAllAliases(key, flags.bools))\n                type = DefaultValuesForTypeKey.BOOLEAN;\n            else if (checkAllAliases(key, flags.arrays))\n                type = DefaultValuesForTypeKey.ARRAY;\n            return type;\n        }\n        function isUndefined(num) {\n            return num === undefined;\n        }\n        function checkConfiguration() {\n            Object.keys(flags.counts).find(key => {\n                if (checkAllAliases(key, flags.arrays)) {\n                    error = Error(__('Invalid configuration: %s, opts.count excludes opts.array.', key));\n                    return true;\n                }\n                else if (checkAllAliases(key, flags.nargs)) {\n                    error = Error(__('Invalid configuration: %s, opts.count excludes opts.narg.', key));\n                    return true;\n                }\n                return false;\n            });\n        }\n        return {\n            aliases: Object.assign({}, flags.aliases),\n            argv: Object.assign(argvReturn, argv),\n            configuration: configuration,\n            defaulted: Object.assign({}, defaulted),\n            error: error,\n            newAliases: Object.assign({}, newAliases)\n        };\n    }\n}\nfunction combineAliases(aliases) {\n    const aliasArrays = [];\n    const combined = Object.create(null);\n    let change = true;\n    Object.keys(aliases).forEach(function (key) {\n        aliasArrays.push([].concat(aliases[key], key));\n    });\n    while (change) {\n        change = false;\n        for (let i = 0; i < aliasArrays.length; i++) {\n            for (let ii = i + 1; ii < aliasArrays.length; ii++) {\n                const intersect = aliasArrays[i].filter(function (v) {\n                    return aliasArrays[ii].indexOf(v) !== -1;\n                });\n                if (intersect.length) {\n                    aliasArrays[i] = aliasArrays[i].concat(aliasArrays[ii]);\n                    aliasArrays.splice(ii, 1);\n                    change = true;\n                    break;\n                }\n            }\n        }\n    }\n    aliasArrays.forEach(function (aliasArray) {\n        aliasArray = aliasArray.filter(function (v, i, self) {\n            return self.indexOf(v) === i;\n        });\n        const lastAlias = aliasArray.pop();\n        if (lastAlias !== undefined && typeof lastAlias === 'string') {\n            combined[lastAlias] = aliasArray;\n        }\n    });\n    return combined;\n}\nfunction increment(orig) {\n    return orig !== undefined ? orig + 1 : 1;\n}\nfunction sanitizeKey(key) {\n    if (key === '__proto__')\n        return '___proto___';\n    return key;\n}\nfunction stripQuotes(val) {\n    return (typeof val === 'string' &&\n        (val[0] === \"'\" || val[0] === '\"') &&\n        val[val.length - 1] === val[0])\n        ? val.substring(1, val.length - 1)\n        : val;\n}\n\nvar _a, _b, _c;\nconst minNodeVersion = (process && process.env && process.env.YARGS_MIN_NODE_VERSION)\n    ? Number(process.env.YARGS_MIN_NODE_VERSION)\n    : 12;\nconst nodeVersion = (_b = (_a = process === null || process === void 0 ? void 0 : process.versions) === null || _a === void 0 ? void 0 : _a.node) !== null && _b !== void 0 ? _b : (_c = process === null || process === void 0 ? void 0 : process.version) === null || _c === void 0 ? void 0 : _c.slice(1);\nif (nodeVersion) {\n    const major = Number(nodeVersion.match(/^([^.]+)/)[1]);\n    if (major < minNodeVersion) {\n        throw Error(`yargs parser supports a minimum Node.js version of ${minNodeVersion}. Read our version support policy: https://github.com/yargs/yargs-parser#supported-nodejs-versions`);\n    }\n}\nconst env = process ? process.env : {};\nconst parser = new YargsParser({\n    cwd: process.cwd,\n    env: () => {\n        return env;\n    },\n    format: util.format,\n    normalize: path.normalize,\n    resolve: path.resolve,\n    require: (path) => {\n        if (typeof require !== 'undefined') {\n            return require(path);\n        }\n        else if (path.match(/\\.json$/)) {\n            return JSON.parse(fs.readFileSync(path, 'utf8'));\n        }\n        else {\n            throw Error('only .json config files are supported in ESM');\n        }\n    }\n});\nconst yargsParser = function Parser(args, opts) {\n    const result = parser.parse(args.slice(), opts);\n    return result.argv;\n};\nyargsParser.detailed = function (args, opts) {\n    return parser.parse(args.slice(), opts);\n};\nyargsParser.camelCase = camelCase;\nyargsParser.decamelize = decamelize;\nyargsParser.looksLikeNumber = looksLikeNumber;\n\nmodule.exports = yargsParser;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}