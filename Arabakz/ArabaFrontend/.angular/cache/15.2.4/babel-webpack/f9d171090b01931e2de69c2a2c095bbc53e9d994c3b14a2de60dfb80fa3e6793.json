{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n  message: \"property name must be valid\",\n  params: ({\n    params\n  }) => (0, codegen_1._)`{propertyName: ${params.propertyName}}`\n};\nconst def = {\n  keyword: \"propertyNames\",\n  type: \"object\",\n  schemaType: [\"object\", \"boolean\"],\n  error,\n  code(cxt) {\n    const {\n      gen,\n      schema,\n      data,\n      it\n    } = cxt;\n    if ((0, util_1.alwaysValidSchema)(it, schema)) return;\n    const valid = gen.name(\"valid\");\n    gen.forIn(\"key\", data, key => {\n      cxt.setParams({\n        propertyName: key\n      });\n      cxt.subschema({\n        keyword: \"propertyNames\",\n        data: key,\n        dataTypes: [\"string\"],\n        propertyName: key,\n        compositeRule: true\n      }, valid);\n      gen.if((0, codegen_1.not)(valid), () => {\n        cxt.error(true);\n        if (!it.allErrors) gen.break();\n      });\n    });\n    cxt.ok(valid);\n  }\n};\nexports.default = def;","map":{"version":3,"names":["Object","defineProperty","exports","value","codegen_1","require","util_1","error","message","params","_","propertyName","def","keyword","type","schemaType","code","cxt","gen","schema","data","it","alwaysValidSchema","valid","name","forIn","key","setParams","subschema","dataTypes","compositeRule","if","not","allErrors","break","ok","default"],"sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/ajv/dist/vocabularies/applicator/propertyNames.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: \"property name must be valid\",\n    params: ({ params }) => (0, codegen_1._) `{propertyName: ${params.propertyName}}`,\n};\nconst def = {\n    keyword: \"propertyNames\",\n    type: \"object\",\n    schemaType: [\"object\", \"boolean\"],\n    error,\n    code(cxt) {\n        const { gen, schema, data, it } = cxt;\n        if ((0, util_1.alwaysValidSchema)(it, schema))\n            return;\n        const valid = gen.name(\"valid\");\n        gen.forIn(\"key\", data, (key) => {\n            cxt.setParams({ propertyName: key });\n            cxt.subschema({\n                keyword: \"propertyNames\",\n                data: key,\n                dataTypes: [\"string\"],\n                propertyName: key,\n                compositeRule: true,\n            }, valid);\n            gen.if((0, codegen_1.not)(valid), () => {\n                cxt.error(true);\n                if (!it.allErrors)\n                    gen.break();\n            });\n        });\n        cxt.ok(valid);\n    },\n};\nexports.default = def;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,SAAS,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AAClD,MAAMC,MAAM,GAAGD,OAAO,CAAC,oBAAoB,CAAC;AAC5C,MAAME,KAAK,GAAG;EACVC,OAAO,EAAE,6BAA6B;EACtCC,MAAM,EAAE,CAAC;IAAEA;EAAO,CAAC,KAAK,CAAC,CAAC,EAAEL,SAAS,CAACM,CAAC,CAAG,kBAAiBD,MAAM,CAACE,YAAa;AACnF,CAAC;AACD,MAAMC,GAAG,GAAG;EACRC,OAAO,EAAE,eAAe;EACxBC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC;EACjCR,KAAK;EACLS,IAAI,CAACC,GAAG,EAAE;IACN,MAAM;MAAEC,GAAG;MAAEC,MAAM;MAAEC,IAAI;MAAEC;IAAG,CAAC,GAAGJ,GAAG;IACrC,IAAI,CAAC,CAAC,EAAEX,MAAM,CAACgB,iBAAiB,EAAED,EAAE,EAAEF,MAAM,CAAC,EACzC;IACJ,MAAMI,KAAK,GAAGL,GAAG,CAACM,IAAI,CAAC,OAAO,CAAC;IAC/BN,GAAG,CAACO,KAAK,CAAC,KAAK,EAAEL,IAAI,EAAGM,GAAG,IAAK;MAC5BT,GAAG,CAACU,SAAS,CAAC;QAAEhB,YAAY,EAAEe;MAAI,CAAC,CAAC;MACpCT,GAAG,CAACW,SAAS,CAAC;QACVf,OAAO,EAAE,eAAe;QACxBO,IAAI,EAAEM,GAAG;QACTG,SAAS,EAAE,CAAC,QAAQ,CAAC;QACrBlB,YAAY,EAAEe,GAAG;QACjBI,aAAa,EAAE;MACnB,CAAC,EAAEP,KAAK,CAAC;MACTL,GAAG,CAACa,EAAE,CAAC,CAAC,CAAC,EAAE3B,SAAS,CAAC4B,GAAG,EAAET,KAAK,CAAC,EAAE,MAAM;QACpCN,GAAG,CAACV,KAAK,CAAC,IAAI,CAAC;QACf,IAAI,CAACc,EAAE,CAACY,SAAS,EACbf,GAAG,CAACgB,KAAK,EAAE;MACnB,CAAC,CAAC;IACN,CAAC,CAAC;IACFjB,GAAG,CAACkB,EAAE,CAACZ,KAAK,CAAC;EACjB;AACJ,CAAC;AACDrB,OAAO,CAACkC,OAAO,GAAGxB,GAAG"},"metadata":{},"sourceType":"script","externalDependencies":[]}