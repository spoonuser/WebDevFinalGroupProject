{"ast":null,"code":"'use strict';\n\n// classic singleton yargs API, to use yargs\n// without running as a singleton do:\n// require('yargs/yargs')(process.argv.slice(2))\nconst {\n  Yargs,\n  processArgv\n} = require('./build/index.cjs');\nArgv(processArgv.hideBin(process.argv));\nmodule.exports = Argv;\nfunction Argv(processArgs, cwd) {\n  const argv = Yargs(processArgs, cwd, require);\n  singletonify(argv);\n  // TODO(bcoe): warn if argv.parse() or argv.argv is used directly.\n  return argv;\n}\nfunction defineGetter(obj, key, getter) {\n  Object.defineProperty(obj, key, {\n    configurable: true,\n    enumerable: true,\n    get: getter\n  });\n}\nfunction lookupGetter(obj, key) {\n  const desc = Object.getOwnPropertyDescriptor(obj, key);\n  if (typeof desc !== 'undefined') {\n    return desc.get;\n  }\n}\n\n/*  Hack an instance of Argv with process.argv into Argv\n    so people can do\n    require('yargs')(['--beeble=1','-z','zizzle']).argv\n    to parse a list of args and\n    require('yargs').argv\n    to get a parsed version of process.argv.\n*/\nfunction singletonify(inst) {\n  [...Object.keys(inst), ...Object.getOwnPropertyNames(inst.constructor.prototype)].forEach(key => {\n    if (key === 'argv') {\n      defineGetter(Argv, key, lookupGetter(inst, key));\n    } else if (typeof inst[key] === 'function') {\n      Argv[key] = inst[key].bind(inst);\n    } else {\n      defineGetter(Argv, '$0', () => inst.$0);\n      defineGetter(Argv, 'parsed', () => inst.parsed);\n    }\n  });\n}","map":{"version":3,"names":["Yargs","processArgv","require","Argv","hideBin","process","argv","module","exports","processArgs","cwd","singletonify","defineGetter","obj","key","getter","Object","defineProperty","configurable","enumerable","get","lookupGetter","desc","getOwnPropertyDescriptor","inst","keys","getOwnPropertyNames","constructor","prototype","forEach","bind","$0","parsed"],"sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/yargs/index.cjs"],"sourcesContent":["'use strict';\n// classic singleton yargs API, to use yargs\n// without running as a singleton do:\n// require('yargs/yargs')(process.argv.slice(2))\nconst {Yargs, processArgv} = require('./build/index.cjs');\n\nArgv(processArgv.hideBin(process.argv));\n\nmodule.exports = Argv;\n\nfunction Argv(processArgs, cwd) {\n  const argv = Yargs(processArgs, cwd, require);\n  singletonify(argv);\n  // TODO(bcoe): warn if argv.parse() or argv.argv is used directly.\n  return argv;\n}\n\nfunction defineGetter(obj, key, getter) {\n  Object.defineProperty(obj, key, {\n    configurable: true,\n    enumerable: true,\n    get: getter,\n  });\n}\nfunction lookupGetter(obj, key) {\n  const desc = Object.getOwnPropertyDescriptor(obj, key);\n  if (typeof desc !== 'undefined') {\n    return desc.get;\n  }\n}\n\n/*  Hack an instance of Argv with process.argv into Argv\n    so people can do\n    require('yargs')(['--beeble=1','-z','zizzle']).argv\n    to parse a list of args and\n    require('yargs').argv\n    to get a parsed version of process.argv.\n*/\nfunction singletonify(inst) {\n  [\n    ...Object.keys(inst),\n    ...Object.getOwnPropertyNames(inst.constructor.prototype),\n  ].forEach(key => {\n    if (key === 'argv') {\n      defineGetter(Argv, key, lookupGetter(inst, key));\n    } else if (typeof inst[key] === 'function') {\n      Argv[key] = inst[key].bind(inst);\n    } else {\n      defineGetter(Argv, '$0', () => inst.$0);\n      defineGetter(Argv, 'parsed', () => inst.parsed);\n    }\n  });\n}\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA,MAAM;EAACA,KAAK;EAAEC;AAAW,CAAC,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AAEzDC,IAAI,CAACF,WAAW,CAACG,OAAO,CAACC,OAAO,CAACC,IAAI,CAAC,CAAC;AAEvCC,MAAM,CAACC,OAAO,GAAGL,IAAI;AAErB,SAASA,IAAI,CAACM,WAAW,EAAEC,GAAG,EAAE;EAC9B,MAAMJ,IAAI,GAAGN,KAAK,CAACS,WAAW,EAAEC,GAAG,EAAER,OAAO,CAAC;EAC7CS,YAAY,CAACL,IAAI,CAAC;EAClB;EACA,OAAOA,IAAI;AACb;AAEA,SAASM,YAAY,CAACC,GAAG,EAAEC,GAAG,EAAEC,MAAM,EAAE;EACtCC,MAAM,CAACC,cAAc,CAACJ,GAAG,EAAEC,GAAG,EAAE;IAC9BI,YAAY,EAAE,IAAI;IAClBC,UAAU,EAAE,IAAI;IAChBC,GAAG,EAAEL;EACP,CAAC,CAAC;AACJ;AACA,SAASM,YAAY,CAACR,GAAG,EAAEC,GAAG,EAAE;EAC9B,MAAMQ,IAAI,GAAGN,MAAM,CAACO,wBAAwB,CAACV,GAAG,EAAEC,GAAG,CAAC;EACtD,IAAI,OAAOQ,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAOA,IAAI,CAACF,GAAG;EACjB;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAST,YAAY,CAACa,IAAI,EAAE;EAC1B,CACE,GAAGR,MAAM,CAACS,IAAI,CAACD,IAAI,CAAC,EACpB,GAAGR,MAAM,CAACU,mBAAmB,CAACF,IAAI,CAACG,WAAW,CAACC,SAAS,CAAC,CAC1D,CAACC,OAAO,CAACf,GAAG,IAAI;IACf,IAAIA,GAAG,KAAK,MAAM,EAAE;MAClBF,YAAY,CAACT,IAAI,EAAEW,GAAG,EAAEO,YAAY,CAACG,IAAI,EAAEV,GAAG,CAAC,CAAC;IAClD,CAAC,MAAM,IAAI,OAAOU,IAAI,CAACV,GAAG,CAAC,KAAK,UAAU,EAAE;MAC1CX,IAAI,CAACW,GAAG,CAAC,GAAGU,IAAI,CAACV,GAAG,CAAC,CAACgB,IAAI,CAACN,IAAI,CAAC;IAClC,CAAC,MAAM;MACLZ,YAAY,CAACT,IAAI,EAAE,IAAI,EAAE,MAAMqB,IAAI,CAACO,EAAE,CAAC;MACvCnB,YAAY,CAACT,IAAI,EAAE,QAAQ,EAAE,MAAMqB,IAAI,CAACQ,MAAM,CAAC;IACjD;EACF,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"script","externalDependencies":[]}