{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _asyncToGenerator = require(\"/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkspaceNodeModulesArchitectHost = void 0;\nconst path = __importStar(require(\"path\"));\nconst url_1 = require(\"url\");\nconst v8_1 = require(\"v8\");\nconst internal_1 = require(\"../src/internal\");\nfunction clone(obj) {\n  try {\n    return (0, v8_1.deserialize)((0, v8_1.serialize)(obj));\n  } catch (_a) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\nfunction findProjectTarget(workspace, project, target) {\n  const projectDefinition = workspace.projects.get(project);\n  if (!projectDefinition) {\n    throw new Error(`Project \"${project}\" does not exist.`);\n  }\n  const targetDefinition = projectDefinition.targets.get(target);\n  if (!targetDefinition) {\n    throw new Error('Project target does not exist.');\n  }\n  return targetDefinition;\n}\nclass WorkspaceNodeModulesArchitectHost {\n  constructor(workspaceOrHost, _root) {\n    this._root = _root;\n    if ('getBuilderName' in workspaceOrHost) {\n      this.workspaceHost = workspaceOrHost;\n    } else {\n      this.workspaceHost = {\n        getBuilderName(project, target) {\n          return _asyncToGenerator(function* () {\n            const targetDefinition = findProjectTarget(workspaceOrHost, project, target);\n            return targetDefinition.builder;\n          })();\n        },\n        getOptions(project, target, configuration) {\n          return _asyncToGenerator(function* () {\n            var _a, _b, _c, _d;\n            const targetDefinition = findProjectTarget(workspaceOrHost, project, target);\n            if (configuration === undefined) {\n              return (_a = targetDefinition.options) !== null && _a !== void 0 ? _a : {};\n            }\n            if (!((_b = targetDefinition.configurations) === null || _b === void 0 ? void 0 : _b[configuration])) {\n              throw new Error(`Configuration '${configuration}' is not set in the workspace.`);\n            }\n            return (_d = (_c = targetDefinition.configurations) === null || _c === void 0 ? void 0 : _c[configuration]) !== null && _d !== void 0 ? _d : {};\n          })();\n        },\n        getMetadata(project) {\n          return _asyncToGenerator(function* () {\n            const projectDefinition = workspaceOrHost.projects.get(project);\n            if (!projectDefinition) {\n              throw new Error(`Project \"${project}\" does not exist.`);\n            }\n            return {\n              root: projectDefinition.root,\n              sourceRoot: projectDefinition.sourceRoot,\n              prefix: projectDefinition.prefix,\n              ...clone(workspaceOrHost.extensions),\n              ...clone(projectDefinition.extensions)\n            };\n          })();\n        },\n        hasTarget(project, target) {\n          return _asyncToGenerator(function* () {\n            var _a;\n            return !!((_a = workspaceOrHost.projects.get(project)) === null || _a === void 0 ? void 0 : _a.targets.has(target));\n          })();\n        },\n        getDefaultConfigurationName(project, target) {\n          return _asyncToGenerator(function* () {\n            var _a, _b;\n            return (_b = (_a = workspaceOrHost.projects.get(project)) === null || _a === void 0 ? void 0 : _a.targets.get(target)) === null || _b === void 0 ? void 0 : _b.defaultConfiguration;\n          })();\n        }\n      };\n    }\n  }\n  getBuilderNameForTarget(target) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return _this.workspaceHost.getBuilderName(target.project, target.target);\n    })();\n  }\n  /**\n   * Resolve a builder. This needs to be a string which will be used in a dynamic `import()`\n   * clause. This should throw if no builder can be found. The dynamic import will throw if\n   * it is unsupported.\n   * @param builderStr The name of the builder to be used.\n   * @returns All the info needed for the builder itself.\n   */\n  resolveBuilder(builderStr) {\n    const [packageName, builderName] = builderStr.split(':', 2);\n    if (!builderName) {\n      throw new Error('No builder name specified.');\n    }\n    const packageJsonPath = require.resolve(packageName + '/package.json', {\n      paths: [this._root]\n    });\n    const packageJson = require(packageJsonPath);\n    if (!packageJson['builders']) {\n      throw new Error(`Package ${JSON.stringify(packageName)} has no builders defined.`);\n    }\n    const builderJsonPath = path.resolve(path.dirname(packageJsonPath), packageJson['builders']);\n    const builderJson = require(builderJsonPath);\n    const builder = builderJson.builders && builderJson.builders[builderName];\n    if (!builder) {\n      throw new Error(`Cannot find builder ${JSON.stringify(builderStr)}.`);\n    }\n    const importPath = builder.implementation;\n    if (!importPath) {\n      throw new Error('Could not find the implementation for builder ' + builderStr);\n    }\n    return Promise.resolve({\n      name: builderStr,\n      builderName,\n      description: builder['description'],\n      optionSchema: require(path.resolve(path.dirname(builderJsonPath), builder.schema)),\n      import: path.resolve(path.dirname(builderJsonPath), importPath)\n    });\n  }\n  getCurrentDirectory() {\n    return _asyncToGenerator(function* () {\n      return process.cwd();\n    })();\n  }\n  getWorkspaceRoot() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      return _this2._root;\n    })();\n  }\n  getOptionsForTarget(target) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      if (!(yield _this3.workspaceHost.hasTarget(target.project, target.target))) {\n        return null;\n      }\n      let options = yield _this3.workspaceHost.getOptions(target.project, target.target);\n      const targetConfiguration = target.configuration || (yield _this3.workspaceHost.getDefaultConfigurationName(target.project, target.target));\n      if (targetConfiguration) {\n        const configurations = targetConfiguration.split(',').map(c => c.trim());\n        for (const configuration of configurations) {\n          options = {\n            ...options,\n            ...(yield _this3.workspaceHost.getOptions(target.project, target.target, configuration))\n          };\n        }\n      }\n      return clone(options);\n    })();\n  }\n  getProjectMetadata(target) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const projectName = typeof target === 'string' ? target : target.project;\n      const metadata = _this4.workspaceHost.getMetadata(projectName);\n      return metadata;\n    })();\n  }\n  loadBuilder(info) {\n    return _asyncToGenerator(function* () {\n      const builder = yield getBuilder(info.import);\n      if (builder[internal_1.BuilderSymbol]) {\n        return builder;\n      }\n      // Default handling code is for old builders that incorrectly export `default` with non-ESM module\n      if (builder === null || builder === void 0 ? void 0 : builder.default[internal_1.BuilderSymbol]) {\n        return builder.default;\n      }\n      throw new Error('Builder is not a builder');\n    })();\n  }\n}\nexports.WorkspaceNodeModulesArchitectHost = WorkspaceNodeModulesArchitectHost;\n/**\n * This uses a dynamic import to load a module which may be ESM.\n * CommonJS code can load ESM code via a dynamic import. Unfortunately, TypeScript\n * will currently, unconditionally downlevel dynamic import into a require call.\n * require calls cannot load ESM code and will result in a runtime error. To workaround\n * this, a Function constructor is used to prevent TypeScript from changing the dynamic import.\n * Once TypeScript provides support for keeping the dynamic import this workaround can\n * be dropped.\n *\n * @param modulePath The path of the module to load.\n * @returns A Promise that resolves to the dynamically imported module.\n */\nfunction loadEsmModule(modulePath) {\n  return new Function('modulePath', `return import(modulePath);`)(modulePath);\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getBuilder(_x) {\n  return _getBuilder.apply(this, arguments);\n}\nfunction _getBuilder() {\n  _getBuilder = _asyncToGenerator(function* (builderPath) {\n    switch (path.extname(builderPath)) {\n      case '.mjs':\n        // Load the ESM configuration file using the TypeScript dynamic import workaround.\n        // Once TypeScript provides support for keeping the dynamic import this workaround can be\n        // changed to a direct dynamic import.\n        return (yield loadEsmModule((0, url_1.pathToFileURL)(builderPath))).default;\n      case '.cjs':\n        return require(builderPath);\n      default:\n        // The file could be either CommonJS or ESM.\n        // CommonJS is tried first then ESM if loading fails.\n        try {\n          return require(builderPath);\n        } catch (e) {\n          if (e.code === 'ERR_REQUIRE_ESM') {\n            // Load the ESM configuration file using the TypeScript dynamic import workaround.\n            // Once TypeScript provides support for keeping the dynamic import this workaround can be\n            // changed to a direct dynamic import.\n            return (yield loadEsmModule((0, url_1.pathToFileURL)(builderPath))).default;\n          }\n          throw e;\n        }\n    }\n  });\n  return _getBuilder.apply(this, arguments);\n}","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","exports","WorkspaceNodeModulesArchitectHost","path","require","url_1","v8_1","internal_1","clone","obj","deserialize","serialize","_a","JSON","parse","stringify","findProjectTarget","workspace","project","target","projectDefinition","projects","Error","targetDefinition","targets","constructor","workspaceOrHost","_root","workspaceHost","getBuilderName","builder","getOptions","configuration","_b","_c","_d","options","configurations","getMetadata","root","sourceRoot","prefix","extensions","hasTarget","has","getDefaultConfigurationName","defaultConfiguration","getBuilderNameForTarget","resolveBuilder","builderStr","packageName","builderName","split","packageJsonPath","resolve","paths","packageJson","builderJsonPath","dirname","builderJson","builders","importPath","implementation","Promise","name","description","optionSchema","schema","import","getCurrentDirectory","process","cwd","getWorkspaceRoot","getOptionsForTarget","targetConfiguration","map","c","trim","getProjectMetadata","projectName","metadata","loadBuilder","info","getBuilder","BuilderSymbol","default","loadEsmModule","modulePath","Function","builderPath","extname","pathToFileURL","e","code"],"sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/@angular/cli/node_modules/@angular-devkit/architect/node/node-modules-architect-host.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WorkspaceNodeModulesArchitectHost = void 0;\nconst path = __importStar(require(\"path\"));\nconst url_1 = require(\"url\");\nconst v8_1 = require(\"v8\");\nconst internal_1 = require(\"../src/internal\");\nfunction clone(obj) {\n    try {\n        return (0, v8_1.deserialize)((0, v8_1.serialize)(obj));\n    }\n    catch (_a) {\n        return JSON.parse(JSON.stringify(obj));\n    }\n}\nfunction findProjectTarget(workspace, project, target) {\n    const projectDefinition = workspace.projects.get(project);\n    if (!projectDefinition) {\n        throw new Error(`Project \"${project}\" does not exist.`);\n    }\n    const targetDefinition = projectDefinition.targets.get(target);\n    if (!targetDefinition) {\n        throw new Error('Project target does not exist.');\n    }\n    return targetDefinition;\n}\nclass WorkspaceNodeModulesArchitectHost {\n    constructor(workspaceOrHost, _root) {\n        this._root = _root;\n        if ('getBuilderName' in workspaceOrHost) {\n            this.workspaceHost = workspaceOrHost;\n        }\n        else {\n            this.workspaceHost = {\n                async getBuilderName(project, target) {\n                    const targetDefinition = findProjectTarget(workspaceOrHost, project, target);\n                    return targetDefinition.builder;\n                },\n                async getOptions(project, target, configuration) {\n                    var _a, _b, _c, _d;\n                    const targetDefinition = findProjectTarget(workspaceOrHost, project, target);\n                    if (configuration === undefined) {\n                        return ((_a = targetDefinition.options) !== null && _a !== void 0 ? _a : {});\n                    }\n                    if (!((_b = targetDefinition.configurations) === null || _b === void 0 ? void 0 : _b[configuration])) {\n                        throw new Error(`Configuration '${configuration}' is not set in the workspace.`);\n                    }\n                    return ((_d = (_c = targetDefinition.configurations) === null || _c === void 0 ? void 0 : _c[configuration]) !== null && _d !== void 0 ? _d : {});\n                },\n                async getMetadata(project) {\n                    const projectDefinition = workspaceOrHost.projects.get(project);\n                    if (!projectDefinition) {\n                        throw new Error(`Project \"${project}\" does not exist.`);\n                    }\n                    return {\n                        root: projectDefinition.root,\n                        sourceRoot: projectDefinition.sourceRoot,\n                        prefix: projectDefinition.prefix,\n                        ...clone(workspaceOrHost.extensions),\n                        ...clone(projectDefinition.extensions),\n                    };\n                },\n                async hasTarget(project, target) {\n                    var _a;\n                    return !!((_a = workspaceOrHost.projects.get(project)) === null || _a === void 0 ? void 0 : _a.targets.has(target));\n                },\n                async getDefaultConfigurationName(project, target) {\n                    var _a, _b;\n                    return (_b = (_a = workspaceOrHost.projects.get(project)) === null || _a === void 0 ? void 0 : _a.targets.get(target)) === null || _b === void 0 ? void 0 : _b.defaultConfiguration;\n                },\n            };\n        }\n    }\n    async getBuilderNameForTarget(target) {\n        return this.workspaceHost.getBuilderName(target.project, target.target);\n    }\n    /**\n     * Resolve a builder. This needs to be a string which will be used in a dynamic `import()`\n     * clause. This should throw if no builder can be found. The dynamic import will throw if\n     * it is unsupported.\n     * @param builderStr The name of the builder to be used.\n     * @returns All the info needed for the builder itself.\n     */\n    resolveBuilder(builderStr) {\n        const [packageName, builderName] = builderStr.split(':', 2);\n        if (!builderName) {\n            throw new Error('No builder name specified.');\n        }\n        const packageJsonPath = require.resolve(packageName + '/package.json', {\n            paths: [this._root],\n        });\n        const packageJson = require(packageJsonPath);\n        if (!packageJson['builders']) {\n            throw new Error(`Package ${JSON.stringify(packageName)} has no builders defined.`);\n        }\n        const builderJsonPath = path.resolve(path.dirname(packageJsonPath), packageJson['builders']);\n        const builderJson = require(builderJsonPath);\n        const builder = builderJson.builders && builderJson.builders[builderName];\n        if (!builder) {\n            throw new Error(`Cannot find builder ${JSON.stringify(builderStr)}.`);\n        }\n        const importPath = builder.implementation;\n        if (!importPath) {\n            throw new Error('Could not find the implementation for builder ' + builderStr);\n        }\n        return Promise.resolve({\n            name: builderStr,\n            builderName,\n            description: builder['description'],\n            optionSchema: require(path.resolve(path.dirname(builderJsonPath), builder.schema)),\n            import: path.resolve(path.dirname(builderJsonPath), importPath),\n        });\n    }\n    async getCurrentDirectory() {\n        return process.cwd();\n    }\n    async getWorkspaceRoot() {\n        return this._root;\n    }\n    async getOptionsForTarget(target) {\n        if (!(await this.workspaceHost.hasTarget(target.project, target.target))) {\n            return null;\n        }\n        let options = await this.workspaceHost.getOptions(target.project, target.target);\n        const targetConfiguration = target.configuration ||\n            (await this.workspaceHost.getDefaultConfigurationName(target.project, target.target));\n        if (targetConfiguration) {\n            const configurations = targetConfiguration.split(',').map((c) => c.trim());\n            for (const configuration of configurations) {\n                options = {\n                    ...options,\n                    ...(await this.workspaceHost.getOptions(target.project, target.target, configuration)),\n                };\n            }\n        }\n        return clone(options);\n    }\n    async getProjectMetadata(target) {\n        const projectName = typeof target === 'string' ? target : target.project;\n        const metadata = this.workspaceHost.getMetadata(projectName);\n        return metadata;\n    }\n    async loadBuilder(info) {\n        const builder = await getBuilder(info.import);\n        if (builder[internal_1.BuilderSymbol]) {\n            return builder;\n        }\n        // Default handling code is for old builders that incorrectly export `default` with non-ESM module\n        if (builder === null || builder === void 0 ? void 0 : builder.default[internal_1.BuilderSymbol]) {\n            return builder.default;\n        }\n        throw new Error('Builder is not a builder');\n    }\n}\nexports.WorkspaceNodeModulesArchitectHost = WorkspaceNodeModulesArchitectHost;\n/**\n * This uses a dynamic import to load a module which may be ESM.\n * CommonJS code can load ESM code via a dynamic import. Unfortunately, TypeScript\n * will currently, unconditionally downlevel dynamic import into a require call.\n * require calls cannot load ESM code and will result in a runtime error. To workaround\n * this, a Function constructor is used to prevent TypeScript from changing the dynamic import.\n * Once TypeScript provides support for keeping the dynamic import this workaround can\n * be dropped.\n *\n * @param modulePath The path of the module to load.\n * @returns A Promise that resolves to the dynamically imported module.\n */\nfunction loadEsmModule(modulePath) {\n    return new Function('modulePath', `return import(modulePath);`)(modulePath);\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nasync function getBuilder(builderPath) {\n    switch (path.extname(builderPath)) {\n        case '.mjs':\n            // Load the ESM configuration file using the TypeScript dynamic import workaround.\n            // Once TypeScript provides support for keeping the dynamic import this workaround can be\n            // changed to a direct dynamic import.\n            return (await loadEsmModule((0, url_1.pathToFileURL)(builderPath))).default;\n        case '.cjs':\n            return require(builderPath);\n        default:\n            // The file could be either CommonJS or ESM.\n            // CommonJS is tried first then ESM if loading fails.\n            try {\n                return require(builderPath);\n            }\n            catch (e) {\n                if (e.code === 'ERR_REQUIRE_ESM') {\n                    // Load the ESM configuration file using the TypeScript dynamic import workaround.\n                    // Once TypeScript provides support for keeping the dynamic import this workaround can be\n                    // changed to a direct dynamic import.\n                    return (await loadEsmModule((0, url_1.pathToFileURL)(builderPath))).default;\n                }\n                throw e;\n            }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}