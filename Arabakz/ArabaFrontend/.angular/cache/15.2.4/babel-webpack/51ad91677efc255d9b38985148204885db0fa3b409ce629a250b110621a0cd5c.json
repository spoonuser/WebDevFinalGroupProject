{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SchematicImpl = exports.InvalidSchematicsNameException = void 0;\nconst core_1 = require(\"@angular-devkit/core\");\nconst operators_1 = require(\"rxjs/operators\");\nconst call_1 = require(\"../rules/call\");\nconst scoped_1 = require(\"../tree/scoped\");\nclass InvalidSchematicsNameException extends core_1.BaseException {\n  constructor(name) {\n    super(`Schematics has invalid name: \"${name}\".`);\n  }\n}\nexports.InvalidSchematicsNameException = InvalidSchematicsNameException;\nclass SchematicImpl {\n  constructor(_description, _factory, _collection, _engine) {\n    this._description = _description;\n    this._factory = _factory;\n    this._collection = _collection;\n    this._engine = _engine;\n    if (!_description.name.match(/^[-@/_.a-zA-Z0-9]+$/)) {\n      throw new InvalidSchematicsNameException(_description.name);\n    }\n  }\n  get description() {\n    return this._description;\n  }\n  get collection() {\n    return this._collection;\n  }\n  call(options, host, parentContext, executionOptions) {\n    const context = this._engine.createContext(this, parentContext, executionOptions);\n    return host.pipe((0, operators_1.first)(), (0, operators_1.concatMap)(tree => this._engine.transformOptions(this, options, context).pipe((0, operators_1.map)(o => [tree, o]))), (0, operators_1.concatMap)(([tree, transformedOptions]) => {\n      let input;\n      let scoped = false;\n      if (executionOptions && executionOptions.scope) {\n        scoped = true;\n        input = new scoped_1.ScopedTree(tree, executionOptions.scope);\n      } else {\n        input = tree;\n      }\n      return (0, call_1.callRule)(this._factory(transformedOptions), input, context).pipe((0, operators_1.map)(output => {\n        if (output === input) {\n          return tree;\n        } else if (scoped) {\n          tree.merge(output);\n          return tree;\n        } else {\n          return output;\n        }\n      }));\n    }));\n  }\n}\nexports.SchematicImpl = SchematicImpl;","map":{"version":3,"names":["Object","defineProperty","exports","value","SchematicImpl","InvalidSchematicsNameException","core_1","require","operators_1","call_1","scoped_1","BaseException","constructor","name","_description","_factory","_collection","_engine","match","description","collection","call","options","host","parentContext","executionOptions","context","createContext","pipe","first","concatMap","tree","transformOptions","map","o","transformedOptions","input","scoped","scope","ScopedTree","callRule","output","merge"],"sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/@angular-devkit/schematics/src/engine/schematic.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SchematicImpl = exports.InvalidSchematicsNameException = void 0;\nconst core_1 = require(\"@angular-devkit/core\");\nconst operators_1 = require(\"rxjs/operators\");\nconst call_1 = require(\"../rules/call\");\nconst scoped_1 = require(\"../tree/scoped\");\nclass InvalidSchematicsNameException extends core_1.BaseException {\n    constructor(name) {\n        super(`Schematics has invalid name: \"${name}\".`);\n    }\n}\nexports.InvalidSchematicsNameException = InvalidSchematicsNameException;\nclass SchematicImpl {\n    constructor(_description, _factory, _collection, _engine) {\n        this._description = _description;\n        this._factory = _factory;\n        this._collection = _collection;\n        this._engine = _engine;\n        if (!_description.name.match(/^[-@/_.a-zA-Z0-9]+$/)) {\n            throw new InvalidSchematicsNameException(_description.name);\n        }\n    }\n    get description() {\n        return this._description;\n    }\n    get collection() {\n        return this._collection;\n    }\n    call(options, host, parentContext, executionOptions) {\n        const context = this._engine.createContext(this, parentContext, executionOptions);\n        return host.pipe((0, operators_1.first)(), (0, operators_1.concatMap)((tree) => this._engine\n            .transformOptions(this, options, context)\n            .pipe((0, operators_1.map)((o) => [tree, o]))), (0, operators_1.concatMap)(([tree, transformedOptions]) => {\n            let input;\n            let scoped = false;\n            if (executionOptions && executionOptions.scope) {\n                scoped = true;\n                input = new scoped_1.ScopedTree(tree, executionOptions.scope);\n            }\n            else {\n                input = tree;\n            }\n            return (0, call_1.callRule)(this._factory(transformedOptions), input, context).pipe((0, operators_1.map)((output) => {\n                if (output === input) {\n                    return tree;\n                }\n                else if (scoped) {\n                    tree.merge(output);\n                    return tree;\n                }\n                else {\n                    return output;\n                }\n            }));\n        }));\n    }\n}\nexports.SchematicImpl = SchematicImpl;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}