{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.regexpCode = exports.getEsmExportName = exports.getProperty = exports.safeStringify = exports.stringify = exports.strConcat = exports.addCodeArg = exports.str = exports._ = exports.nil = exports._Code = exports.Name = exports.IDENTIFIER = exports._CodeOrName = void 0;\nclass _CodeOrName {}\nexports._CodeOrName = _CodeOrName;\nexports.IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i;\nclass Name extends _CodeOrName {\n  constructor(s) {\n    super();\n    if (!exports.IDENTIFIER.test(s)) throw new Error(\"CodeGen: name must be a valid identifier\");\n    this.str = s;\n  }\n  toString() {\n    return this.str;\n  }\n  emptyStr() {\n    return false;\n  }\n  get names() {\n    return {\n      [this.str]: 1\n    };\n  }\n}\nexports.Name = Name;\nclass _Code extends _CodeOrName {\n  constructor(code) {\n    super();\n    this._items = typeof code === \"string\" ? [code] : code;\n  }\n  toString() {\n    return this.str;\n  }\n  emptyStr() {\n    if (this._items.length > 1) return false;\n    const item = this._items[0];\n    return item === \"\" || item === '\"\"';\n  }\n  get str() {\n    var _a;\n    return (_a = this._str) !== null && _a !== void 0 ? _a : this._str = this._items.reduce((s, c) => `${s}${c}`, \"\");\n  }\n  get names() {\n    var _a;\n    return (_a = this._names) !== null && _a !== void 0 ? _a : this._names = this._items.reduce((names, c) => {\n      if (c instanceof Name) names[c.str] = (names[c.str] || 0) + 1;\n      return names;\n    }, {});\n  }\n}\nexports._Code = _Code;\nexports.nil = new _Code(\"\");\nfunction _(strs, ...args) {\n  const code = [strs[0]];\n  let i = 0;\n  while (i < args.length) {\n    addCodeArg(code, args[i]);\n    code.push(strs[++i]);\n  }\n  return new _Code(code);\n}\nexports._ = _;\nconst plus = new _Code(\"+\");\nfunction str(strs, ...args) {\n  const expr = [safeStringify(strs[0])];\n  let i = 0;\n  while (i < args.length) {\n    expr.push(plus);\n    addCodeArg(expr, args[i]);\n    expr.push(plus, safeStringify(strs[++i]));\n  }\n  optimize(expr);\n  return new _Code(expr);\n}\nexports.str = str;\nfunction addCodeArg(code, arg) {\n  if (arg instanceof _Code) code.push(...arg._items);else if (arg instanceof Name) code.push(arg);else code.push(interpolate(arg));\n}\nexports.addCodeArg = addCodeArg;\nfunction optimize(expr) {\n  let i = 1;\n  while (i < expr.length - 1) {\n    if (expr[i] === plus) {\n      const res = mergeExprItems(expr[i - 1], expr[i + 1]);\n      if (res !== undefined) {\n        expr.splice(i - 1, 3, res);\n        continue;\n      }\n      expr[i++] = \"+\";\n    }\n    i++;\n  }\n}\nfunction mergeExprItems(a, b) {\n  if (b === '\"\"') return a;\n  if (a === '\"\"') return b;\n  if (typeof a == \"string\") {\n    if (b instanceof Name || a[a.length - 1] !== '\"') return;\n    if (typeof b != \"string\") return `${a.slice(0, -1)}${b}\"`;\n    if (b[0] === '\"') return a.slice(0, -1) + b.slice(1);\n    return;\n  }\n  if (typeof b == \"string\" && b[0] === '\"' && !(a instanceof Name)) return `\"${a}${b.slice(1)}`;\n  return;\n}\nfunction strConcat(c1, c2) {\n  return c2.emptyStr() ? c1 : c1.emptyStr() ? c2 : str`${c1}${c2}`;\n}\nexports.strConcat = strConcat;\n// TODO do not allow arrays here\nfunction interpolate(x) {\n  return typeof x == \"number\" || typeof x == \"boolean\" || x === null ? x : safeStringify(Array.isArray(x) ? x.join(\",\") : x);\n}\nfunction stringify(x) {\n  return new _Code(safeStringify(x));\n}\nexports.stringify = stringify;\nfunction safeStringify(x) {\n  return JSON.stringify(x).replace(/\\u2028/g, \"\\\\u2028\").replace(/\\u2029/g, \"\\\\u2029\");\n}\nexports.safeStringify = safeStringify;\nfunction getProperty(key) {\n  return typeof key == \"string\" && exports.IDENTIFIER.test(key) ? new _Code(`.${key}`) : _`[${key}]`;\n}\nexports.getProperty = getProperty;\n//Does best effort to format the name properly\nfunction getEsmExportName(key) {\n  if (typeof key == \"string\" && exports.IDENTIFIER.test(key)) {\n    return new _Code(`${key}`);\n  }\n  throw new Error(`CodeGen: invalid export name: ${key}, use explicit $id name mapping`);\n}\nexports.getEsmExportName = getEsmExportName;\nfunction regexpCode(rx) {\n  return new _Code(rx.toString());\n}\nexports.regexpCode = regexpCode;","map":{"version":3,"names":["Object","defineProperty","exports","value","regexpCode","getEsmExportName","getProperty","safeStringify","stringify","strConcat","addCodeArg","str","_","nil","_Code","Name","IDENTIFIER","_CodeOrName","constructor","s","test","Error","toString","emptyStr","names","code","_items","length","item","_a","_str","reduce","c","_names","strs","args","i","push","plus","expr","optimize","arg","interpolate","res","mergeExprItems","undefined","splice","a","b","slice","c1","c2","x","Array","isArray","join","JSON","replace","key","rx"],"sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/ajv/dist/compile/codegen/code.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.regexpCode = exports.getEsmExportName = exports.getProperty = exports.safeStringify = exports.stringify = exports.strConcat = exports.addCodeArg = exports.str = exports._ = exports.nil = exports._Code = exports.Name = exports.IDENTIFIER = exports._CodeOrName = void 0;\nclass _CodeOrName {\n}\nexports._CodeOrName = _CodeOrName;\nexports.IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i;\nclass Name extends _CodeOrName {\n    constructor(s) {\n        super();\n        if (!exports.IDENTIFIER.test(s))\n            throw new Error(\"CodeGen: name must be a valid identifier\");\n        this.str = s;\n    }\n    toString() {\n        return this.str;\n    }\n    emptyStr() {\n        return false;\n    }\n    get names() {\n        return { [this.str]: 1 };\n    }\n}\nexports.Name = Name;\nclass _Code extends _CodeOrName {\n    constructor(code) {\n        super();\n        this._items = typeof code === \"string\" ? [code] : code;\n    }\n    toString() {\n        return this.str;\n    }\n    emptyStr() {\n        if (this._items.length > 1)\n            return false;\n        const item = this._items[0];\n        return item === \"\" || item === '\"\"';\n    }\n    get str() {\n        var _a;\n        return ((_a = this._str) !== null && _a !== void 0 ? _a : (this._str = this._items.reduce((s, c) => `${s}${c}`, \"\")));\n    }\n    get names() {\n        var _a;\n        return ((_a = this._names) !== null && _a !== void 0 ? _a : (this._names = this._items.reduce((names, c) => {\n            if (c instanceof Name)\n                names[c.str] = (names[c.str] || 0) + 1;\n            return names;\n        }, {})));\n    }\n}\nexports._Code = _Code;\nexports.nil = new _Code(\"\");\nfunction _(strs, ...args) {\n    const code = [strs[0]];\n    let i = 0;\n    while (i < args.length) {\n        addCodeArg(code, args[i]);\n        code.push(strs[++i]);\n    }\n    return new _Code(code);\n}\nexports._ = _;\nconst plus = new _Code(\"+\");\nfunction str(strs, ...args) {\n    const expr = [safeStringify(strs[0])];\n    let i = 0;\n    while (i < args.length) {\n        expr.push(plus);\n        addCodeArg(expr, args[i]);\n        expr.push(plus, safeStringify(strs[++i]));\n    }\n    optimize(expr);\n    return new _Code(expr);\n}\nexports.str = str;\nfunction addCodeArg(code, arg) {\n    if (arg instanceof _Code)\n        code.push(...arg._items);\n    else if (arg instanceof Name)\n        code.push(arg);\n    else\n        code.push(interpolate(arg));\n}\nexports.addCodeArg = addCodeArg;\nfunction optimize(expr) {\n    let i = 1;\n    while (i < expr.length - 1) {\n        if (expr[i] === plus) {\n            const res = mergeExprItems(expr[i - 1], expr[i + 1]);\n            if (res !== undefined) {\n                expr.splice(i - 1, 3, res);\n                continue;\n            }\n            expr[i++] = \"+\";\n        }\n        i++;\n    }\n}\nfunction mergeExprItems(a, b) {\n    if (b === '\"\"')\n        return a;\n    if (a === '\"\"')\n        return b;\n    if (typeof a == \"string\") {\n        if (b instanceof Name || a[a.length - 1] !== '\"')\n            return;\n        if (typeof b != \"string\")\n            return `${a.slice(0, -1)}${b}\"`;\n        if (b[0] === '\"')\n            return a.slice(0, -1) + b.slice(1);\n        return;\n    }\n    if (typeof b == \"string\" && b[0] === '\"' && !(a instanceof Name))\n        return `\"${a}${b.slice(1)}`;\n    return;\n}\nfunction strConcat(c1, c2) {\n    return c2.emptyStr() ? c1 : c1.emptyStr() ? c2 : str `${c1}${c2}`;\n}\nexports.strConcat = strConcat;\n// TODO do not allow arrays here\nfunction interpolate(x) {\n    return typeof x == \"number\" || typeof x == \"boolean\" || x === null\n        ? x\n        : safeStringify(Array.isArray(x) ? x.join(\",\") : x);\n}\nfunction stringify(x) {\n    return new _Code(safeStringify(x));\n}\nexports.stringify = stringify;\nfunction safeStringify(x) {\n    return JSON.stringify(x)\n        .replace(/\\u2028/g, \"\\\\u2028\")\n        .replace(/\\u2029/g, \"\\\\u2029\");\n}\nexports.safeStringify = safeStringify;\nfunction getProperty(key) {\n    return typeof key == \"string\" && exports.IDENTIFIER.test(key) ? new _Code(`.${key}`) : _ `[${key}]`;\n}\nexports.getProperty = getProperty;\n//Does best effort to format the name properly\nfunction getEsmExportName(key) {\n    if (typeof key == \"string\" && exports.IDENTIFIER.test(key)) {\n        return new _Code(`${key}`);\n    }\n    throw new Error(`CodeGen: invalid export name: ${key}, use explicit $id name mapping`);\n}\nexports.getEsmExportName = getEsmExportName;\nfunction regexpCode(rx) {\n    return new _Code(rx.toString());\n}\nexports.regexpCode = regexpCode;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}