{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UnsupportedPlatformException = exports.UnimplementedException = exports.MergeConflictException = exports.InvalidUpdateRecordException = exports.ContentHasMutatedException = exports.PathIsFileException = exports.PathIsDirectoryException = exports.FileAlreadyExistException = exports.FileDoesNotExistException = exports.UnknownException = exports.BaseException = void 0;\nclass BaseException extends Error {\n  constructor(message = '') {\n    super(message);\n  }\n}\nexports.BaseException = BaseException;\nclass UnknownException extends BaseException {\n  constructor(message) {\n    super(message);\n  }\n}\nexports.UnknownException = UnknownException;\n// Exceptions\nclass FileDoesNotExistException extends BaseException {\n  constructor(path) {\n    super(`Path \"${path}\" does not exist.`);\n  }\n}\nexports.FileDoesNotExistException = FileDoesNotExistException;\nclass FileAlreadyExistException extends BaseException {\n  constructor(path) {\n    super(`Path \"${path}\" already exist.`);\n  }\n}\nexports.FileAlreadyExistException = FileAlreadyExistException;\nclass PathIsDirectoryException extends BaseException {\n  constructor(path) {\n    super(`Path \"${path}\" is a directory.`);\n  }\n}\nexports.PathIsDirectoryException = PathIsDirectoryException;\nclass PathIsFileException extends BaseException {\n  constructor(path) {\n    super(`Path \"${path}\" is a file.`);\n  }\n}\nexports.PathIsFileException = PathIsFileException;\n/**\n * @deprecated since version 14. Use the same symbol from `@angular-devkit/schematics`.\n */\nclass ContentHasMutatedException extends BaseException {\n  constructor(path) {\n    super(`Content at path \"${path}\" has changed between the start and the end of an update.`);\n  }\n}\nexports.ContentHasMutatedException = ContentHasMutatedException;\n/**\n * @deprecated since version 14. Use the same symbol from `@angular-devkit/schematics`.\n */\nclass InvalidUpdateRecordException extends BaseException {\n  constructor() {\n    super(`Invalid record instance.`);\n  }\n}\nexports.InvalidUpdateRecordException = InvalidUpdateRecordException;\n/**\n * @deprecated since version 14. Use the same symbol from `@angular-devkit/schematics`.\n */\nclass MergeConflictException extends BaseException {\n  constructor(path) {\n    super(`A merge conflicted on path \"${path}\".`);\n  }\n}\nexports.MergeConflictException = MergeConflictException;\n/**\n * @deprecated since version 14. Create a custom exception implementation instead.\n */\nclass UnimplementedException extends BaseException {\n  constructor() {\n    super('This function is unimplemented.');\n  }\n}\nexports.UnimplementedException = UnimplementedException;\n/**\n * @deprecated since version 14. Create a custom exception implementation instead.\n */\nclass UnsupportedPlatformException extends BaseException {\n  constructor() {\n    super('This platform is not supported by this code path.');\n  }\n}\nexports.UnsupportedPlatformException = UnsupportedPlatformException;","map":{"version":3,"names":["Object","defineProperty","exports","value","UnsupportedPlatformException","UnimplementedException","MergeConflictException","InvalidUpdateRecordException","ContentHasMutatedException","PathIsFileException","PathIsDirectoryException","FileAlreadyExistException","FileDoesNotExistException","UnknownException","BaseException","Error","constructor","message","path"],"sources":["/Users/sabyrzhanolzhabay/Web-Dev/Arabakz/ArabaFrontend/node_modules/@angular/cli/node_modules/@angular-devkit/core/src/exception.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UnsupportedPlatformException = exports.UnimplementedException = exports.MergeConflictException = exports.InvalidUpdateRecordException = exports.ContentHasMutatedException = exports.PathIsFileException = exports.PathIsDirectoryException = exports.FileAlreadyExistException = exports.FileDoesNotExistException = exports.UnknownException = exports.BaseException = void 0;\nclass BaseException extends Error {\n    constructor(message = '') {\n        super(message);\n    }\n}\nexports.BaseException = BaseException;\nclass UnknownException extends BaseException {\n    constructor(message) {\n        super(message);\n    }\n}\nexports.UnknownException = UnknownException;\n// Exceptions\nclass FileDoesNotExistException extends BaseException {\n    constructor(path) {\n        super(`Path \"${path}\" does not exist.`);\n    }\n}\nexports.FileDoesNotExistException = FileDoesNotExistException;\nclass FileAlreadyExistException extends BaseException {\n    constructor(path) {\n        super(`Path \"${path}\" already exist.`);\n    }\n}\nexports.FileAlreadyExistException = FileAlreadyExistException;\nclass PathIsDirectoryException extends BaseException {\n    constructor(path) {\n        super(`Path \"${path}\" is a directory.`);\n    }\n}\nexports.PathIsDirectoryException = PathIsDirectoryException;\nclass PathIsFileException extends BaseException {\n    constructor(path) {\n        super(`Path \"${path}\" is a file.`);\n    }\n}\nexports.PathIsFileException = PathIsFileException;\n/**\n * @deprecated since version 14. Use the same symbol from `@angular-devkit/schematics`.\n */\nclass ContentHasMutatedException extends BaseException {\n    constructor(path) {\n        super(`Content at path \"${path}\" has changed between the start and the end of an update.`);\n    }\n}\nexports.ContentHasMutatedException = ContentHasMutatedException;\n/**\n * @deprecated since version 14. Use the same symbol from `@angular-devkit/schematics`.\n */\nclass InvalidUpdateRecordException extends BaseException {\n    constructor() {\n        super(`Invalid record instance.`);\n    }\n}\nexports.InvalidUpdateRecordException = InvalidUpdateRecordException;\n/**\n * @deprecated since version 14. Use the same symbol from `@angular-devkit/schematics`.\n */\nclass MergeConflictException extends BaseException {\n    constructor(path) {\n        super(`A merge conflicted on path \"${path}\".`);\n    }\n}\nexports.MergeConflictException = MergeConflictException;\n/**\n * @deprecated since version 14. Create a custom exception implementation instead.\n */\nclass UnimplementedException extends BaseException {\n    constructor() {\n        super('This function is unimplemented.');\n    }\n}\nexports.UnimplementedException = UnimplementedException;\n/**\n * @deprecated since version 14. Create a custom exception implementation instead.\n */\nclass UnsupportedPlatformException extends BaseException {\n    constructor() {\n        super('This platform is not supported by this code path.');\n    }\n}\nexports.UnsupportedPlatformException = UnsupportedPlatformException;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}